"use strict";(self.webpackChunkapiboot_minbox_org=self.webpackChunkapiboot_minbox_org||[]).push([[1477],{10:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"apiboot-quartz-job-storage-away","metadata":{"permalink":"/blog/apiboot-quartz-job-storage-away","source":"@site/blog/quartz/apiboot-quartz-job-storage-away.md","title":"\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u6846\u67b6ApiBoot Quartz\u5185\u7684\u4e24\u79cd\u4efb\u52a1\u5b58\u50a8\u65b9\u5f0f","description":"\u524d\u8a00","date":"2020-01-09T09:49:56.000Z","formattedDate":"2020\u5e741\u67089\u65e5","tags":[{"label":"Quartz","permalink":"/blog/tags/quartz"}],"readingTime":3.765,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-quartz-job-storage-away","title":"\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u6846\u67b6ApiBoot Quartz\u5185\u7684\u4e24\u79cd\u4efb\u52a1\u5b58\u50a8\u65b9\u5f0f","authors":"hengboy","tags":["Quartz"],"date":"2020-01-09T09:49:56.000Z"},"nextItem":{"title":"OAuth2\u5728\u5185\u5b58\u3001Redis\u65b9\u5f0f\u4e0b\u7684\u591a\u5ba2\u6237\u7aef\u914d\u7f6e","permalink":"/blog/apiboot-oauth-multiple-client-config"}},"content":"## \u524d\u8a00\\n\\n`Quartz`\u662f\u4e00\u6b3e\u6bd4\u8f83\u4f18\u79c0\u7684\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u6846\u67b6\uff0c`ApiBoot`\u5bf9\u5176\u5c01\u88c5\u4e4b\u524d\u5c31\u6709\u4e24\u79cd\u4efb\u52a1\u5b58\u50a8\u65b9\u5f0f\uff0c\u5206\u522b\u662f\uff1a`memory`\uff08\u5185\u5b58\u65b9\u5f0f\uff09\u3001`jdbc`\uff08\u6570\u636e\u5e93\u65b9\u5f0f\uff09\uff0c\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u7f16\u5199\u4e00\u4e9b\u7e41\u7410\u7684\u4ee3\u7801\u914d\u7f6e\uff0c`ApiBoot`\u5b9e\u73b0\u4e86\u96c6\u6210\u540e\uff0c\u53ef\u5feb\u901f\u5e94\u7528\u5230\u9879\u76ee\u4e2d\uff0c\u800c\u4e14\u8fd8\u63d0\u4f9b\u4e86 [ApiBootQuartzService](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-plugins/api-boot-plugin-quartz/src/main/java/org/minbox/framework/api/boot/plugin/quartz/ApiBootQuartzService.java) \u63a5\u53e3\u7528\u4e8e\u64cd\u4f5c\u4efb\u52a1\u7684\u72b6\u6001\u3001\u6709\u6548\u6027\u3001\u65b0\u4efb\u52a1\u521b\u5efa\u7b49\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u65b9\u6cd5\uff0c\u4f7f\u7528\u65f6\u53ea\u9700\u8981\u6ce8\u5165\u5373\u53ef\uff0c\u56e0\u4e3a\u8be5\u7c7b\u5728 [ApiBootQuartzAutoConfiguration](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-autoconfigure/src/main/java/org/minbox/framework/api/boot/autoconfigure/quartz/ApiBootQuartzAutoConfiguration.java) \u81ea\u52a8\u5316\u914d\u7f6e\u7c7b\u4e2d\u5df2\u7ecf\u505a\u4e86\u5b9e\u4f8b\u5316\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4efb\u52a1\u5b58\u50a8\\n\\n\u4e4b\u524d\u6709\u63d0\u5230`Quartz`\u63d0\u4f9b\u4e86\u4e24\u79cd\u4efb\u52a1\u5b58\u50a8\u7684\u65b9\u5f0f\uff0c\u8fd9\u4e24\u79cd\u5b58\u5728\u4ec0\u4e48\u533a\u522b\u5462\uff1f\\n\\n- **\u5185\u5b58\u65b9\u5f0f**\uff1a\u5c06\u4efb\u52a1\u4e34\u65f6\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\uff0c\u4ec5\u652f\u6301\u5355\u9879\u76ee\u90e8\u7f72\uff0c\u9879\u76ee\u91cd\u542f\u540e\u4efb\u52a1\u4f1a\u5931\u6548\uff0c\u4e0d\u652f\u6301\u7531\u8c03\u5ea6\u5668\u63a7\u5236\u4efb\u52a1\u6f02\u79fb\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002\\n- **\u6570\u636e\u5e93\u65b9\u5f0f**\uff1a`Quartz`\u63d0\u4f9b\u4e86\u591a\u79cd\u6570\u636e\u5e93\u7684\u6240\u9700\u8868\u7ed3\u6784\u811a\u672c\uff0c\u5b83\u5185\u90e8\u901a\u8fc7`DataSource`\u6765\u64cd\u4f5c\u6570\u636e\uff0c\u652f\u6301\u5206\u5e03\u5f0f\u65b9\u5f0f\u90e8\u7f72\u3001\u652f\u6301\u4efb\u52a1\u6f02\u79fb\uff0c\u9879\u76ee\u91cd\u542f\u540e\u4efb\u52a1\u4e0d\u4f1a\u4e22\u5931\uff0c\u76f4\u5230\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e\u624d\u4f1a\u88ab\u4ece\u6570\u636e\u5e93\u5185\u6e05\u9664\u3002\\n\\n## \u9ed8\u8ba4\u65b9\u5f0f\\n\\n`ApiBoot`\u5728\u6574\u5408`Quartz`\u4e4b\u540e\u5c06`\u5185\u5b58\u65b9\u5f0f`\uff08memory\uff09\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u4efb\u52a1\u5b58\u50a8\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u65b9\u5f0f\u4e0b\u4e0d\u9700\u8981\u4e00\u884c\u4ee3\u7801\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u96c6\u6210\uff0c\u901a\u8fc7`ApiBootQuartzService#newJob`\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4efb\u52a1\u7684\u521d\u59cb\u5316\u8fd0\u884c\uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a`Once`\u3001`Loop`\u3001`Cron`\u4e09\u79cd\u65b9\u5f0f\u7684\u4efb\u610f\u4e00\u79cd\u6765\u8fd0\u884c\u4efb\u52a1\uff0c\u4f7f\u7528\u65b9\u5f0f\u8be6\u89c1\uff1a[\u5206\u5e03\u5f0f\u8c03\u5ea6\u6846\u67b6Quartz\u884d\u751f\u51fa\u7684\u4e09\u79cd\u4efb\u52a1\u7c7b\u578b\uff0c\u4f60\u7528\u8fc7\u51e0\u4e2a\uff1f](https://blog.yuqiyu.com/apiboot-quartz-job-types.html)\\n\\n## \u6570\u636e\u5e93\u65b9\u5f0f\\n\\n`Quartz`\u9488\u5bf9\u4e0d\u540c\u6570\u636e\u5e93\u7c7b\u578b\u63d0\u4f9b\u4e86\u4ee3\u7406\u63a5\u53e3`DriverDelegate`\uff0c\u4e0d\u540c\u6570\u636e\u5e93\u7c7b\u578b\u90fd\u4f1a\u6709\u8be5\u4ee3\u7406\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\uff0c\u800c\u6211\u4eec\u5e73\u65f6\u6240\u7528\u5230\u7684\u5219\u4e3a`StdJDBCDelegate`\uff0c\u8be5\u7c7b\u5185\u5305\u542b\u4e86`Quartz`\u64cd\u4f5c\u6570\u636e\u5e93\u8868\u5185\u6570\u636e\u7684\u5168\u90e8\u65b9\u6cd5\u3002\\n\\n### \u6570\u636e\u811a\u672c\\n\\n`Quartz`\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u5e93\u5206\u522b\u63d0\u4f9b\u4e86 [\u5efa\u8868\u8bed\u53e5](https://gitee.com/minbox-projects/api-boot/tree/master/api-boot-samples/api-boot-sample-quartz/src/main/resources/schemas)\uff0c\u4f7f\u7528\u65f6\u8bf7\u6309\u7167\u811a\u672c\u540d\u79f0\u81ea\u884c\u9009\u62e9\u3002\\n\\n### ApiBoot Quartz\u542f\u7528\u6570\u636e\u5e93\u65b9\u5f0f\\n\\n\u542f\u7528\u7684\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728`application.yml/application.properties`\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    quartz:\\n      # \u914d\u7f6e\u4f7f\u7528Jdbc\u65b9\u5f0f\u5b58\u50a8\u4efb\u52a1\\n      job-store-type: jdbc\\n```\\n\\n> \u6ce8\u610f\u4e8b\u9879\uff1a\u65e2\u7136\u542f\u7528**\u6570\u636e\u5e93\u65b9\u5f0f**\uff0c\u90a3\u4e48\u4f60\u7684\u9879\u76ee\u4e2d\u5fc5\u987b\u8981\u6709`\u6570\u636e\u6e90`\u3001`\u6570\u636e\u5e93\u9a71\u52a8`\u3001`\u5b9e\u4f8b\u5316\u6570\u636e\u6e90`\uff08\u5b9e\u4f8b\u5316`DataSource`\u7684\u5de5\u4f5c\u4e00\u822c\u662fORM\u6846\u67b6\u6765\u62c5\u4efb\uff0c\u5982\uff1a[ApiBoot MyBatis Enhance](https://apiboot.minbox.org/docs/components/api-boot-mybatis-enhance.html)\uff09\u7b49\u4f9d\u8d56\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n\u672c\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u4e86`ApiBoot`\u6574\u5408`Quartz`\u540e\u7684\u4efb\u52a1\u5b58\u50a8\u65b9\u5f0f\u914d\u7f6e\u65b9\u5f0f\u4ee5\u53ca\u63d0\u4f9b\u7684\u4e0d\u540c\u6570\u636e\u5e93\u7684\u5bf9\u5e94\u5efa\u8868\u811a\u672c\u3002\\n\\n> \u5982\u679c\u4f60\u5bf9`ApiBoot`\u5f00\u6e90\u6846\u67b6\u5728\u4f7f\u7528\u65b9\u9762\u611f\u89c9\u4e0d\u987a\u624b\uff0c\u6b22\u8fce\u63d0\u51fa\u60a8\u7684\u5b9d\u8d35 [\u610f\u89c1](https://gitee.com/minbox-projects/api-boot/issues)\uff0c\u8ba9\u5f00\u6e90\u6846\u67b6\u8d70\u66f4\u8fdc\u7684\u8def\u3001\u670d\u52a1\u66f4\u591a\u7684\u5f00\u53d1\u8005\uff01\uff01\uff01"},{"id":"apiboot-oauth-multiple-client-config","metadata":{"permalink":"/blog/apiboot-oauth-multiple-client-config","source":"@site/blog/security/apiboot-oauth-multiple-client-config.md","title":"OAuth2\u5728\u5185\u5b58\u3001Redis\u65b9\u5f0f\u4e0b\u7684\u591a\u5ba2\u6237\u7aef\u914d\u7f6e","description":"Spring\u6240\u63d0\u4f9b\u7684OAuth2\u96c6\u6210\u7b56\u7565\uff0c\u652f\u6301\u591a\u79cd\u65b9\u5f0f\u5b58\u50a8\u8ba4\u8bc1\u4fe1\u606f\u4ee5\u53ca\u5ba2\u6237\u7aef\u4fe1\u606f\uff0c\u7531\u4e8e\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u8bb2\u89e3\u4f7f\u7528\u65f6\u628a\u77e5\u8bc6\u70b9\u8fdb\u884c\u4e86\u62c6\u5206\uff0c\u6709\u5f88\u591a\u540c\u5b66\u4e0d\u592a\u4f1a\u7ec4\u5408\u4f7f\u7528\uff0c\u5f88\u591a\u5355\u72ec\u95ee\u6211ApiBoot\u6240\u63d0\u4f9b\u7684OAuth2\u7684\u6574\u5408\u540e\uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u8be5\u600e\u4e48\u914d\u7f6e\uff1f","date":"2019-12-31T09:37:53.000Z","formattedDate":"2019\u5e7412\u670831\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":7.925,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-oauth-multiple-client-config","title":"OAuth2\u5728\u5185\u5b58\u3001Redis\u65b9\u5f0f\u4e0b\u7684\u591a\u5ba2\u6237\u7aef\u914d\u7f6e","authors":"hengboy","tags":["Spring","Spring Security","OAuth2"],"date":"2019-12-31T09:37:53.000Z"},"prevItem":{"title":"\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u6846\u67b6ApiBoot Quartz\u5185\u7684\u4e24\u79cd\u4efb\u52a1\u5b58\u50a8\u65b9\u5f0f","permalink":"/blog/apiboot-quartz-job-storage-away"},"nextItem":{"title":"Quartz\u884d\u751f\u51fa\u7684\u4e09\u79cd\u4efb\u52a1\u7c7b\u578b\uff0c\u4f60\u7528\u8fc7\u51e0\u4e2a\uff1f","permalink":"/blog/apiboot-quartz-job-types"}},"content":"`Spring`\u6240\u63d0\u4f9b\u7684`OAuth2`\u96c6\u6210\u7b56\u7565\uff0c\u652f\u6301\u591a\u79cd\u65b9\u5f0f\u5b58\u50a8`\u8ba4\u8bc1\u4fe1\u606f`\u4ee5\u53ca`\u5ba2\u6237\u7aef\u4fe1\u606f`\uff0c\u7531\u4e8e\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u8bb2\u89e3\u4f7f\u7528\u65f6\u628a\u77e5\u8bc6\u70b9\u8fdb\u884c\u4e86\u62c6\u5206\uff0c\u6709\u5f88\u591a\u540c\u5b66\u4e0d\u592a\u4f1a\u7ec4\u5408\u4f7f\u7528\uff0c\u5f88\u591a\u5355\u72ec\u95ee\u6211`ApiBoot`\u6240\u63d0\u4f9b\u7684`OAuth2`\u7684\u6574\u5408\u540e\uff0c\u591a\u4e2a\u5ba2\u6237\u7aef\u8be5\u600e\u4e48\u914d\u7f6e\uff1f\\n\x3c!--truncate--\x3e\\n\u672c\u7ae0\u5c31\u6765\u8bb2\u8bb2\u5982\u679c\u6211\u4eec\u4f7f\u7528`\u5185\u5b58\u65b9\u5f0f`\u3001`Redis\u65b9\u5f0f`\u505a`OAuth2`\u76f8\u5173\u4fe1\u606f\u5b58\u50a8\u65f6\uff0c\u8be5\u5982\u4f55\u914d\u7f6e\u591a\u4e2a\u5ba2\u6237\u7aef\uff01\uff01\uff01\\n\\n## \u7cfb\u5217\u6587\u7ae0\\n\\n`ApiBoot`\u9488\u5bf9\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u90fd\u63d0\u4f9b\u4e00\u7cfb\u5217\u7684\u62c6\u5206\u8be6\u89e3\u6587\u7ae0\uff0c\u8be6\u60c5\u8bf7\u8bbf\u95ee [ApiBoot\u5f00\u6e90\u6846\u67b6\u5404\u4e2a\u7ec4\u4ef6\u7684\u7cfb\u5217\u4f7f\u7528\u6587\u7ae0\u6c47\u603b](https://blog.yuqiyu.com/apiboot-all-articles.html) \u3002\\n\\n## \u524d\u8a00\\n\\n`ApiBoot`\u96c6\u6210`OAuth2`\u540e`\u5185\u5b58\u65b9\u5f0f`\u4e0e`Redis\u65b9\u5f0f`\u7684\u5ba2\u6237\u7aef\u914d\u7f6e\u90fd\u4f4d\u4e8e`application.yml/application.properties`\u914d\u7f6e\u6587\u4ef6\u5185\uff0c\u901a\u8fc7\u6e90\u7801\u53d1\u73b0`Spring`\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3 **TokenStore** \u6765\u5b9a\u4e49\u64cd\u4f5c\u8ba4\u8bc1\u4fe1\u606f\u7684\u65b9\u6cd5\u5217\u8868\uff0c\u5b9e\u73b0\u8be5\u63a5\u53e3\u540e\u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e0d\u540c\u7684\u5b58\u50a8\u65b9\u5f0f\u5177\u4f53\u7684\u903b\u8f91\uff0c\u5f53\u524d\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u53ea\u9700\u8981\u5c06\u81ea\u5b9a\u4e49\u5b9e\u73b0\u7c7b\u7684\u5b9e\u4f8b\u4ea4\u4ed8\u7ed9`Spring IOC`\u8fdb\u884c\u6258\u7ba1\u5c31\u5373\u53ef\uff0c`OAuth2`\u5185\u90e8\u5c31\u4f1a\u8c03\u7528\u81ea\u5b9a\u4e49\u7684\u5b9e\u73b0\u7c7b\u6765\u5904\u7406\u4e1a\u52a1\uff08**\u5728\u5185\u90e8\u90fd\u662f\u901a\u8fc7\u63a5\u53e3\u6765\u64cd\u4f5c\uff0c\u4e0d\u5173\u5fc3\u5b9e\u4f8b\u662f\u54ea\u4e2a\u5b9e\u73b0\u7c7b**\uff09\u3002\\n\\n\u5f53\u7136`Spring`\u5728\u6574\u5408`OAuth2`\u540e\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684`TokenStore`\u5b9e\u73b0\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n- **InMemoryTokenStore**\\n\\n  \u5c06`\u5ba2\u6237\u7aef\u4fe1\u606f`\u4ee5\u53ca\u751f\u6210\u7684`AccessToken`\u5b58\u653e\u5728**\u5185\u5b58**\u4e2d\uff0c\u9879\u76ee\u91cd\u542f\u540e\u4e4b\u524d\u751f\u6210\u7684`AccessToken`\u5c31\u4f1a\u4e22\u5931\uff0c\u800c`ApiBoot OAuth`\u5728\u9879\u76ee\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u52a0\u8f7d`application.yml`\u914d\u7f6e\u6587\u4ef6\u7684\u5ba2\u6237\u7aef\u5217\u8868\uff0c\u6240\u4ee5\u5ba2\u6237\u7aef\u4fe1\u606f\u4e0d\u4f1a\u4e22\u5931\u3002\\n\\n- **JdbcTokenStore**\\n\\n  \u5c06`\u5ba2\u6237\u7aef\u4fe1\u606f`\u4ee5\u53ca\u751f\u6210\u7684`AccessToken`\u5b58\u653e\u5728**\u6570\u636e\u5e93**\u4e2d\uff0c\u9879\u76ee\u91cd\u542f\u540e\u4e0d\u5f71\u54cd\u8ba4\u8bc1\uff0c\u8868\u7ed3\u6784\u7531`OAuth2`\u63d0\u4f9b\u3002\\n\\n- **RedisTokenStore**\\n\\n  \u5c06`\u5ba2\u6237\u7aef\u4fe1\u606f`\u4ee5\u53ca\u751f\u6210\u7684`AccessToken`\u5b58\u653e\u5728 **Redis**\u4e2d\uff0c\u652f\u6301\u5206\u5e03\u5f0f\u90e8\u7f72\uff0c`AccessToken`\u9ed8\u8ba4\u8fc7\u671f\u65f6\u95f4\u4e3a`7200`\u79d2\uff0c\u8fc7\u671f\u540e\u4e5f\u4f1a\u81ea\u52a8\u88ab\u5220\u9664\uff0c\u4f7f\u7528\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\uff0c`ApiBoot OAuth`\u53ea\u9700\u8981\u4fee\u6539`api.boot.oauth.away=redis`\u5c31\u53ef\u4ee5\u542f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002\\n\\n- **JwtTokenStore**\\n\\n  \u4e3b\u8981\u529f\u80fd\u662f\u4f7f\u7528`Jwt`\u8fdb\u884c\u8f6c\u6362`AccessToken`\uff0c\u5e76\u4e0d\u505a\u6570\u636e`AccessToken`\u7684\u5b58\u50a8\u3002\\n\\n  \\n\\n## \u5ba2\u6237\u7aef\u914d\u7f6e\u6e90\u7801\u5206\u6790\\n\\n\u5f53\u6211\u4eec\u4f7f\u7528`ApiBoot OAuth2`\u63d0\u4f9b\u7684`\u5185\u5b58\u65b9\u5f0f`\u3001`Redis\u65b9\u5f0f`\u6765\u96c6\u6210\u4f7f\u7528\u65f6\uff0c\u5ba2\u6237\u7aef\u5217\u8868\u7684\u914d\u7f6e\u90fd\u4f4d\u4e8e`application.yml`\uff0c\u4f7f\u7528`api.boot.oauth.clients`\u914d\u7f6e\u53c2\u6570\u8fdb\u884c\u6307\u5b9a\uff0c\u90a3\u8fd9\u4e2a\u53c2\u6570\u6240\u5bf9\u5e94\u7684\u6e90\u7801\u4f4d\u4e8e [ApiBootOauthProperties](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-autoconfigure/src/main/java/org/minbox/framework/api/boot/autoconfigure/oauth/ApiBootOauthProperties.java) \u5c5e\u6027\u914d\u7f6e\u7c7b\u5185\u3002\\n\\n\u5728`ApiBoot`\u6700\u521d\u53d1\u884c\u7248\u4e2d\u5ba2\u6237\u7aef\u53ea\u5141\u8bb8\u914d\u7f6e\u4e00\u4e2a\uff0c\u6839\u636e\u4f7f\u7528\u8005\u7684\u53cd\u9988\u8fdb\u884c\u4e86\u8fed\u4ee3\u66f4\u65b0\u540e\u652f\u6301\u4e86\u591a\u4e2a\u5ba2\u6237\u7aef\u7684\u914d\u7f6e\uff0c\u5bf9\u5e94`ApiBootOauthProperties`\u5c5e\u6027\u914d\u7f6e\u7c7b\u5185\u7684`clientis`\u5b57\u6bb5\uff0c\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n  * configure multiple clients\\n  */\\nprivate List<Client> clients = new ArrayList() {{\\n  add(new Client());\\n}};\\n```\\n\\n`clients`\u5b57\u6bb5\u9ed8\u8ba4\u503c\u4e3a\u4e00\u4e2a`Client`\u7684\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u800c`Client`\u5219\u662f\u4e3a`ApiBootOauthProperties`\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * Oauth2 Client\\n * Used to configure multiple clients\\n */\\n@Data\\npublic static class Client {\\n    /**\\n     * oauth2 client id\\n     */\\n    private String clientId = \\"ApiBoot\\";\\n    /**\\n     * oauth2 client secret\\n     */\\n    private String clientSecret = \\"ApiBootSecret\\";\\n    /**\\n     * oauth2 client grant types\\n     * default value is \\"password,refresh_token\\"\\n     */\\n    private String[] grantTypes = new String[]{\\"password\\", \\"refresh_token\\"};\\n    /**\\n     * oauth2 client scope\\n     * default value is \\"api\\"\\n     */\\n    private String[] scopes = new String[]{\\"api\\"};\\n    /**\\n     * oauth2 application resource id\\n     * default value is \\"api\\"\\n     */\\n    private String[] resourceId = new String[]{\\"api\\"};\\n    /**\\n     * oauth2 access token validity seconds\\n     * default value is 7200 second\\n     */\\n    private int accessTokenValiditySeconds = 7200;\\n}\\n```\\n\\n\u6839\u636e`Client`\u7c7b\u6211\u4eec\u4e5f\u5c31\u53ef\u4ee5\u660e\u767d\u4e86\uff0c\u4e3a\u4ec0\u4e48`ApiBoot OAuth`\u5728\u96c6\u6210\u65f6\u4e0d\u914d\u7f6e`\u5ba2\u6237\u7aef`\u4e5f\u53ef\u4ee5\u4f7f\u7528`ApiBoot:ApiBootSecret`\u6765\u8fdb\u884c\u83b7\u53d6`AccessToken`\uff0c\u56e0\u4e3a\u5728`ApiBootOauthProperties`\u5c5e\u6027\u914d\u7f6e\u7c7b\u4e2d\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684`Client`\u5bf9\u8c61\u5b9e\u4f8b\u3002\\n\\n> \u6ce8\u610f\u4e8b\u9879\uff1a\u5f53\u6211\u4eec\u914d\u7f6e`api.boot.oauth.clients`\u53c2\u6570\u65f6\u9ed8\u8ba4\u7684\u5ba2\u6237\u7aef\u4f1a\u88ab\u8986\u76d6\u6389\\n\\n## \u793a\u4f8b\u9879\u76ee\\n\\n\u65e2\u7136\u6211\u4eec\u77e5\u9053\u4e86\u4f7f\u7528`api.boot.oauth.clients`\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u5ba2\u6237\u7aef\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u7684\u9879\u76ee\uff0c\u4f7f\u7528`IDEA`\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\uff0c\u9879\u76ee`pom.xml`\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot Security OAuth--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n  </dependency>\\n</dependencies>\\n\\n<dependencyManagement>\\n  <dependencies>\\n    \x3c!--ApiBoot\u7edf\u4e00\u7248\u672c\u4f9d\u8d56--\x3e\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.1.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n### \u914d\u7f6e\u591a\u5ba2\u6237\u7aef\\n\\n\u770b\u8fc7`ApiBoot OAuth2`\u7cfb\u5217\u6587\u7ae0\u7684\u540c\u5b66\u90fd\u5e94\u8be5\u77e5\u9053\uff0c\u9ed8\u8ba4\u4f7f\u7528`\u5185\u5b58\u65b9\u5f0f`\u8fdb\u884c\u5b58\u50a8\u751f\u6210\u7684`AccessToken`\uff0c\u8fd9\u4e00\u70b9\u6211\u4eec\u5c31\u4e0d\u505a\u4fee\u6539\u4e86\uff0c\u5982\u679c\u4f60\u9879\u76ee\u4e0d\u662f\u4f7f\u7528\u9ed8\u8ba4\uff0c\u53ef\u4ee5\u53bb\u53c2\u8003 [ApiBoot\u5f00\u6e90\u6846\u67b6\u5404\u4e2a\u7ec4\u4ef6\u7684\u7cfb\u5217\u4f7f\u7528\u6587\u7ae0\u6c47\u603b](https://blog.yuqiyu.com/apiboot-all-articles.html) \u5185\u5b89\u5168\u7ec4\u4ef6\u5206\u7c7b\u4e0b\u7684\u6587\u7ae0\u3002\\n\\n\u5728`application.yml`\u6587\u4ef6\u5185\u6dfb\u52a0\u5ba2\u6237\u7aef\u5217\u8868\u914d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    # ApiBoot OAuth \u76f8\u5173\u914d\u7f6e\\n    oauth:\\n      clients:\\n        - clientId: minbox\\n          clientSecret: chapter\\n        - clientId: hengboy\\n          clientSecret: 123123\\n    # ApiBoot Security \u76f8\u5173\u914d\u7f6e\\n    security:\\n      users:\\n        - username: yuqiyu\\n          password: 123456\\n```\\n\\n> \u7531\u4e8e`api-boot-starter-security-oauth-jwt`\u4f9d\u8d56\u662f`Spring Security`\u4e0e`OAuth2`\u7684\u6574\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u8981\u83b7\u53d6`AccessToken`\u9700\u8981\u914d\u7f6e`Spring Security`\u7684\u7528\u6237\u5217\u8868\uff0c\u5373`api.boot.security.users`\u53c2\u6570\uff0c\u9ed8\u8ba4\u540c\u6837\u662f\u5185\u5b58\u65b9\u5f0f\u5b58\u50a8\uff0c\u8be6\u89c1\uff1a[ApiBoot\u5b9e\u73b0\u96f6\u4ee3\u7801\u6574\u5408Spring Security & OAuth2](https://blog.yuqiyu.com/apiboot-security-oauth-zero-code-integration.html)\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u901a\u8fc7`XxxApplication`\u65b9\u5f0f\u542f\u52a8\u672c\u7ae0\u9879\u76ee\uff0c\u901a\u8fc7Curl\u547d\u4ee4\u6d4b\u8bd5\u83b7\u53d6`AccessToken`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\n\u279c  ~ curl -X POST minbox:chapter@localhost:8080/oauth/token -d \'grant_type=password&username=yuqiyu&password=123456\'\\n{\\"access_token\\":\\"bf2d67b8-c7a4-4f5c-846e-a6f1c7e44a9d\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"522507a2-30e5-4d86-a997-c991c3cb0807\\",\\"expires_in\\":7191,\\"scope\\":\\"api\\"}\\n```\\n\\n\u5728\u4e0a\u9762\u547d\u4ee4\u884c\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7`minbox:chapter`\u5ba2\u6237\u7aef\u8fdb\u884c\u6d4b\u8bd5\u83b7\u53d6`AccessToken`\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9a8c\u8bc1\u662f\u5426\u4e24\u4e2a\u5ba2\u6237\u7aef\u90fd\u5df2\u7ecf\u751f\u6548\uff0c\u4e0b\u9762\u4f7f\u7528`hengboy:123123`\u5ba2\u6237\u7aef\u5c1d\u8bd5\uff1a\\n\\n```json\\n\u279c  ~ curl -X POST hengboy:123123@localhost:8080/oauth/token -d \'grant_type=password&username=yuqiyu&password=123456\'                    \\n{\\"access_token\\":\\"62b8da93-27cd-4963-8612-8e94036c4d78\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"4e516a7f-db52-4f40-ab92-c6b43cd62294\\",\\"expires_in\\":7200,\\"scope\\":\\"api\\"}\\n```\\n\\n\u6839\u636e\u8f93\u51fa\u6765\u770b\uff0c\u662f\u53ef\u4ee5\u83b7\u53d6\u5230`AccessToken`\u7684\uff0c\u591a\u5ba2\u6237\u7aef\u914d\u7f6e\u90fd\u5df2\u7ecf\u751f\u6548\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n\u5176\u5b9e`ApiBoot Security OAuth`\u6709\u5f88\u591a\u914d\u7f6e\u90fd\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\uff0c\u4e0d\u8fc7\u8de8\u8d8a\u5b58\u50a8\u65b9\u5f0f\u7684\u914d\u7f6e\u6709\u7684\u662f\u65e0\u6cd5\u76f8\u4e92\u7ec4\u5408\u4f7f\u7528\u7684\uff0c\u6bd4\u5982\uff1a\u5f53\u4f60\u4f7f\u7528`Jdbc`\u65b9\u5f0f\u6765\u5b58\u50a8\u8ba4\u8bc1\u4fe1\u606f\u65f6\uff0c\u5373\u4f7f\u6211\u4eec\u914d\u7f6e\u4e86`api.boot.oauth.clients`\u53c2\u6570\uff0c\u8fd9\u65f6\u4e5f\u662f\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u7684\uff0c\u56e0\u4e3a\u4f7f\u7528\u6570\u636e\u5e93\u65b9\u5f0f\u6765\u8bfb\u53d6\u5ba2\u6237\u7aef\u4fe1\u606f\u65f6\uff0c`OAuth2`\u901a\u8fc7`JdbcClientDetailsService`\u7c7b\u4ece\u6570\u636e\u5e93\u7684`oauth_client_details`\u8868\u5185\u67e5\u8be2\u5ba2\u6237\u7aef\u5217\u8868\uff0c\u6211\u4eec\u5982\u679c\u60f3\u8981\u6dfb\u52a0\u5ba2\u6237\u7aef\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u5411`oauth_client_details`\u8868\u5185\u6dfb\u52a0\u4e00\u6761\u6570\u636e\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-oauth-multiple-client-config`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-quartz-job-types","metadata":{"permalink":"/blog/apiboot-quartz-job-types","source":"@site/blog/quartz/apiboot-quartz-job-types.md","title":"Quartz\u884d\u751f\u51fa\u7684\u4e09\u79cd\u4efb\u52a1\u7c7b\u578b\uff0c\u4f60\u7528\u8fc7\u51e0\u4e2a\uff1f","description":"\u524d\u8a00","date":"2019-12-24T09:33:00.000Z","formattedDate":"2019\u5e7412\u670824\u65e5","tags":[{"label":"Quartz","permalink":"/blog/tags/quartz"}],"readingTime":9.1,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-quartz-job-types","title":"Quartz\u884d\u751f\u51fa\u7684\u4e09\u79cd\u4efb\u52a1\u7c7b\u578b\uff0c\u4f60\u7528\u8fc7\u51e0\u4e2a\uff1f","authors":"hengboy","tags":["Quartz"],"date":"2019-12-24T09:33:00.000Z"},"prevItem":{"title":"OAuth2\u5728\u5185\u5b58\u3001Redis\u65b9\u5f0f\u4e0b\u7684\u591a\u5ba2\u6237\u7aef\u914d\u7f6e","permalink":"/blog/apiboot-oauth-multiple-client-config"},"nextItem":{"title":"\u8fd9\u79cd\u65b9\u5f0f\u6574\u5408Quartz\u4f60\u89c1\u8fc7\u5417\uff1f","permalink":"/blog/apiboot-quartz-integrated-away"}},"content":"## \u524d\u8a00\\n\\n`Quartz`\u5185\u90e8\u6ca1\u6709\u660e\u786e\u7684\u4efb\u52a1\u7c7b\u578b\u7684\u6982\u5ff5\uff0c\u5728`ApiBoot`\u4e2d\u5bf9\u5176\u8fdb\u884c\u5c01\u88c5\u540e\u624d\u786e\u5207\u7684\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u6982\u5ff5\uff0c\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u573a\u666f\u6309\u9700\u9009\u62e9\u9002\u5408\u7684\u4efb\u52a1\u7c7b\u578b\u6765\u6784\u5efa\u6267\u884c\u7684\u4efb\u52a1\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u7cfb\u5217\u6587\u7ae0\\n\\n`ApiBoot Quartz`\u662f\u4ee5\u7cfb\u5217\u6587\u7ae0\u7684\u5f62\u5f0f\u66f4\u65b0\uff0c\u4e86\u89e3\u66f4\u591a\u4f7f\u7528\u65b9\u6cd5\u8bf7\u8bbf\u95ee\u5982\u4e0b\u94fe\u63a5\uff1a\\n\\n- [\u8fd9\u79cd\u65b9\u5f0f\u6574\u5408Quartz\u4f60\u89c1\u8fc7\u5417\uff1f](https://blog.yuqiyu.com/apiboot-quartz-integrated-away.html)\\n\\n`ApiBoot`\u5185\u5176\u4ed6\u7ec4\u4ef6\u7cfb\u5217\u4f7f\u7528\u6587\u7ae0\u8bf7\u8bbf\u95ee\uff1a[ApiBoot\u5f00\u6e90\u6846\u67b6\u5404\u4e2a\u7ec4\u4ef6\u7684\u7cfb\u5217\u4f7f\u7528\u6587\u7ae0\u6c47\u603b](https://blog.yuqiyu.com/apiboot-all-articles.html)\\n\\n## \u884d\u751f\u7684\u4efb\u52a1\u7c7b\u578b\\n\\n`ApiBoot`\u5bf9`Quartz`\u96c6\u6210\u5c01\u88c5\u540e\uff0c\u63d0\u4f9b\u4e86\u5982\u4e0b\u4e09\u79cd\u7684\u4efb\u52a1\u7c7b\u578b\uff1a\\n\\n- **OnceJob**\uff1a\u4e00\u6b21\u6027\u4efb\u52a1\uff0c\u4ec5\u6267\u884c\u4e00\u6b21\\n- **CronJob**\uff1a\u4f7f\u7528Cron\u8868\u8fbe\u5f0f\u5b9a\u4e49\u4efb\u52a1\u5468\u671f\\n- **LoopJob**\uff1a\u6307\u5b9a\u5faa\u73af\u6b21\u6570\u7684\u4efb\u52a1\\n\\n> \u6ce8\u610f\u4e8b\u9879\uff1a\u4efb\u52a1\u7c7b\u578b\u662f\u4efb\u52a1\u7684\u6267\u884c\u65b9\u5f0f\u7c7b\u578b\uff0c\u5e76\u4e0d\u662f\u521b\u5efa\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u521b\u5efa\u4efb\u52a1\u90fd\u662f\u901a\u8fc7\u7ee7\u627f`QuartzJobBean`\u6765\u5b8c\u6210\uff0c\u540c\u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7c7b\u578b\u6267\u884c\u3002\\n\\n## \u6f14\u793a\u9879\u76ee\\n\\n\u6211\u4eec\u4f7f\u7528`Idea`\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\uff0c\u7528\u4e8e\u6211\u4eec\u672c\u7ae0\u7684\u6f14\u793a\u9879\u76ee\uff0c\u521b\u5efa\u9879\u76ee\u540e\u6dfb\u52a0`ApiBoot Quartz`\u76f8\u5173\u7684\u4f9d\u8d56\u5230`pom.xml`\u6587\u4ef6\u5185\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot Quartz--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-quartz</artifactId>\\n  </dependency>\\n</dependencies>\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.1.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n\\n\\n### \u793a\u4f8b\u4efb\u52a1\\n\\n\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u672c\u7ae0\u6f14\u793a\u6240\u9700\u8981\u7684\u4efb\u52a1\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u793a\u4f8b\u4efb\u52a1\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\npublic class DemoJob extends QuartzJobBean {\\n    /**\\n     * logger instance\\n     */\\n    static Logger logger = LoggerFactory.getLogger(DemoJob.class);\\n\\n    @Override\\n    protected void executeInternal(JobExecutionContext context) throws JobExecutionException {\\n        logger.info(\\"\u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\uff1a{}\\", System.currentTimeMillis());\\n    }\\n}\\n```\\n\\n\u5f53\u4efb\u52a1\u6267\u884c\u65f6\u5c31\u4f1a\u5728\u63a7\u5236\u53f0\u8f93\u51fa\u4efb\u52a1\u6267\u884c\u7684\u65f6\u95f4\uff0c\u7ee7\u627f\u81ea`Spring`\u63d0\u4f9b\u7684\u5c01\u88c5\u4efb\u52a1\u7c7b`QuartzJobBean`\uff0c\u4f1a\u81ea\u52a8\u626b\u63cf\u5230`DemoJob`\u5e76\u901a\u8fc7\u53cd\u5c04\u521b\u5efa\u5b9e\u4f8b\u540e\u653e\u5165`Ioc`\u5bb9\u5668\uff0c\u5177\u4f53\u7684\u6d41\u7a0b\u53ef\u4ee5\u8bbf\u95ee [\u8fd9\u79cd\u65b9\u5f0f\u6574\u5408Quartz\u4f60\u89c1\u8fc7\u5417\uff1f](https://blog.yuqiyu.com/apiboot-quartz-integrated-away.html) \u4e86\u89e3\u8be6\u60c5\u3002\\n\\n### \u4e00\u6b21\u6027\u4efb\u52a1\\n\\n\u6211\u4eec\u4f7f\u7528`Once`\u4efb\u52a1\u7c7b\u578b\u6765\u6267\u884c\u4e0a\u9762\u521b\u5efa\u7684`DemoJob`\u793a\u4f8b\u4efb\u52a1\uff0c\u5148\u4e0a\u4ee3\u7801\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n  * ApiBoot Quartz\u5185\u7f6e\u63a5\u53e3\\n  *\\n  * @see org.minbox.framework.api.boot.plugin.quartz.support.ApiBootQuartzServiceDefaultSupport\\n  */\\n@Autowired\\nprivate ApiBootQuartzService quartzService;\\n\\n// \u521b\u5efaOnce\u4efb\u52a1\\nquartzService.newJob(ApiBootOnceJobWrapper.Context().jobClass(DemoJob.class).wrapper());\\n```\\n\\n\u6211\u4eec\u53ea\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u6765\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\uff0c\u5728\u4ee3\u7801\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u65b0\u9762\u5b54 [ApiBootOnceJobWrapper](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-plugins/api-boot-plugin-quartz/src/main/java/org/minbox/framework/api/boot/plugin/quartz/wrapper/support/ApiBootOnceJobWrapper.java)\u3002\\n\\n`ApiBootOnceJobWrapper`\u4e3b\u8981\u5de5\u4f5c\u662f\u6765\u5c01\u88c5Once\u7c7b\u578b\u4efb\u52a1\u6240\u9700\u8981\u7684\u914d\u7f6e\u5b57\u6bb5\uff0c\u5185\u90e8\u901a\u8fc7`Lombok`\u63d0\u4f9b\u7684`@Builder`\u6ce8\u89e3\u6765\u5b9e\u73b0\uff0c`Once`\u4efb\u52a1\u53ef\u914d\u7f6e\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\\n\\n| \u65b9\u6cd5                                               | \u9ed8\u8ba4\u503c         | \u63cf\u8ff0                                |\\n| -------------------------------------------------- | -------------- | ----------------------------------- |\\n| .jobClass(Class<? extends QuartzJobBean> jobClass) | -              | \u914d\u7f6e\u6240\u6267\u884c\u7684QuartzJobBean\u5b9e\u73b0\u7c7b\u7c7b\u578b |\\n| .jobKey(String jobKey)                             | \u968f\u673aUUID\u5b57\u7b26\u4e32 | \u4efb\u52a1\u552f\u4e00key                         |\\n| .startAtTime(Date startAtTime)                     | \u5f53\u524d\u65f6\u95f4       | \u4efb\u52a1\u5f00\u59cb\u6267\u884c\u65f6\u95f4                    |\\n| .param(ApiBootJobParamWrapper param)               | -              | \u4efb\u52a1\u6267\u884c\u65f6\u7684\u53c2\u6570\u5217\u8868\u5c01\u88c5\u5bf9\u8c61        |\\n\\n\\n\\n### Cron\u8868\u8fbe\u5f0f\u4efb\u52a1\\n\\n`Cron`\u8868\u8fbe\u5f0f\u6765\u521b\u5efa\u4efb\u52a1\u662f\u6bd4\u8f83\u7075\u6d3b\u7684\uff0c\u4e5f\u662f\u6bd4\u8f83\u5e38\u7528\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528`ApiBoot Quartz`\u540c\u6837\u4ec5\u4ec5\u9700\u8981\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u5b9a\u4e49\u6bcf\u95f4\u9694\u4e00\u79d2\u6267\u884c\u4e00\u6b21`DemoJob`\u5185\u7684\u4efb\u52a1\u903b\u8f91\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n  * ApiBoot Quartz\u5185\u7f6e\u63a5\u53e3\\n  *\\n  * @see org.minbox.framework.api.boot.plugin.quartz.support.ApiBootQuartzServiceDefaultSupport\\n  */\\n@Autowired\\nprivate ApiBootQuartzService quartzService;\\n// \u521b\u5efaCron\u4efb\u52a1\\nquartzService.newJob(ApiBootCronJobWrapper.Context().jobClass(DemoJob.class).cron(\\"0/1 * * * * ?\\").wrapper());\\n```\\n\\n[ApiBootCronJobWrapper](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-plugins/api-boot-plugin-quartz/src/main/java/org/minbox/framework/api/boot/plugin/quartz/wrapper/support/ApiBootCronJobWrapper.java) \u6240\u505a\u7684\u5de5\u4f5c\u4e0e`ApiBootOnceJobWrapper`\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u7528\u6765\u91c7\u96c6`Cron`\u7c7b\u578b\u7684\u4efb\u52a1\u6240\u9700\u8981\u7684\u914d\u7f6e\u5b57\u6bb5\uff0c\u5185\u90e8\u540c\u6837\u662f\u901a\u8fc7`Lombok`\u63d0\u4f9b\u7684`@Builder`\u6ce8\u89e3\u5b9e\u73b0\uff0c`Cron`\u7c7b\u578b\u4efb\u52a1\u53ef\u914d\u7f6e\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\\n\\n| \u65b9\u6cd5                                               | \u9ed8\u8ba4\u503c         | \u63cf\u8ff0                                |\\n| -------------------------------------------------- | -------------- | ----------------------------------- |\\n| .jobClass(Class<? extends QuartzJobBean> jobClass) | -              | \u914d\u7f6e\u6240\u6267\u884c\u7684QuartzJobBean\u5b9e\u73b0\u7c7b\u7c7b\u578b |\\n| .jobKey(String jobKey)                             | \u968f\u673aUUID\u5b57\u7b26\u4e32 | \u4efb\u52a1\u552f\u4e00key                         |\\n| .cron(String cron)                                 | -              | \u4efb\u52a1\u6267\u884c\u65f6\u95f4\u7684Cron\u8868\u8fbe\u5f0f            |\\n| .param(ApiBootJobParamWrapper param)               | -              | \u4efb\u52a1\u6267\u884c\u65f6\u7684\u53c2\u6570\u5217\u8868\u5c01\u88c5\u5bf9\u8c61        |\\n\\n\\n\\n### Loop\u5faa\u73af\u4efb\u52a1\\n\\n`Loop`\u7c7b\u578b\u7684\u4efb\u52a1\u5728\u5f00\u53d1\u4e2d\u4e5f\u662f\u6bd4\u8f83\u5e38\u7528\u7684\uff0c\u6839\u636e\u6307\u5b9a\u7684`\u5faa\u73af\u6b21\u6570`\u4ee5\u53ca\u6bcf\u4e00\u6b21\u6267\u884c\u7684`\u95f4\u9694\u65f6\u95f4`\u8fd0\u884c\u5b9a\u65f6\u4efb\u52a1\u903b\u8f91\uff0c\u5f53\u83b7\u53d6\u5230\u671f\u671b\u7684\u7ed3\u679c\u540e\u8fd8\u53ef\u4ee5\u5c06\u4efb\u52a1\u81ea\u8eab\u8fdb\u884c\u5220\u9664\uff0c\u5148\u6765\u770b\u770b\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a\\n\\n```java\\n/**\\n  * ApiBoot Quartz\u5185\u7f6e\u63a5\u53e3\\n  *\\n  * @see org.minbox.framework.api.boot.plugin.quartz.support.ApiBootQuartzServiceDefaultSupport\\n  */\\n@Autowired\\nprivate ApiBootQuartzService quartzService;\\n// \u521b\u5efaLoop\u4efb\u52a1\\nquartzService.newJob(ApiBootLoopJobWrapper.Context().jobClass(DemoJob.class).loopIntervalTime(2000).repeatTimes(5).wrapper());\\n```\\n\\n> \u4e0a\u9762\u7684\u5b9a\u65f6\u4efb\u52a1\u4f1a\u5148\u6267\u884c1\u6b21\u540e\u6bcf`\u95f4\u96942000\u6beb\u79d2`\u518d\u6267\u884c**5\u6b21**\uff0c\u4e00\u5171\u662f\u6267\u884c**6\u6b21**\uff0c\u5927\u5bb6\u6ce8\u610f\u914d\u7f6e\u3002\\n\\n\u53ef\u4ee5\u770b\u5230`Loop`\u7c7b\u578b\u7684\u4efb\u52a1\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a [ApiBootLoopJobWrapper](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-plugins/api-boot-plugin-quartz/src/main/java/org/minbox/framework/api/boot/plugin/quartz/wrapper/support/ApiBootLoopJobWrapper.java) \u6765\u5c01\u88c5\u4efb\u52a1\u6267\u884c\u6240\u9700\u8981\u7684\u914d\u7f6e\u5b57\u6bb5\uff0c\u53ef\u914d\u7f6e\u7684\u5b57\u6bb5\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a\\n\\n| \u65b9\u6cd5                                               | \u9ed8\u8ba4\u503c         | \u63cf\u8ff0                                |\\n| -------------------------------------------------- | -------------- | ----------------------------------- |\\n| .jobClass(Class<? extends QuartzJobBean> jobClass) | -              | \u914d\u7f6e\u6240\u6267\u884c\u7684QuartzJobBean\u5b9e\u73b0\u7c7b\u7c7b\u578b |\\n| .jobKey(String jobKey)                             | \u968f\u673aUUID\u5b57\u7b26\u4e32 | \u4efb\u52a1\u552f\u4e00key                         |\\n| .loopIntervalTime(int intervalTime)                | 1000           | \u5faa\u73af\u6267\u884c\u7684\u95f4\u9694\u65f6\u95f4\uff0c\u5355\u4f4d\uff1a\u6beb\u79d2      |\\n| .repeatTimes(int times)                            | 0              | \u5faa\u73af\u6267\u884c\u6b21\u6570                        |\\n| .startAtTime(Date startAtTime)                     | \u5f53\u524d\u65f6\u95f4       | \u4efb\u52a1\u5f00\u59cb\u6267\u884c\u65f6\u95f4                    |\\n| .param(ApiBootJobParamWrapper param)               | -              | \u4efb\u52a1\u6267\u884c\u65f6\u7684\u53c2\u6570\u5217\u8868\u5c01\u88c5\u5bf9\u8c61        |\\n\\n> \u5982\u679c\u4e0d\u8bbe\u7f6e`repeatTimes`\u4ec5\u6267\u884c\u4e00\u6b21\uff0c\u6548\u679c\u4e0e`Once`\u4e00\u6837\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u5728\u8fd0\u884c\u9879\u76ee\u4e4b\u524d\u5148\u6765\u4fee\u6539\u9879\u76ee\u7684`XxxApplication`\u5165\u53e3\u7c7b\uff0c\u6211\u4eec\u671f\u671b\u5728\u9879\u76ee\u542f\u52a8\u5b8c\u6210\u540e\u5c31\u6267\u884c\u4efb\u52a1\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5b9e\u73b0`CommandLineRunner`\u63a5\u53e3\u6765\u5b8c\u6210\u8fd9\u4e00\u9700\u6c42\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * ApiBoot Quartz \u4e09\u79cd\u4efb\u52a1\u7c7b\u578b\u793a\u4f8b\\n */\\n@SpringBootApplication\\npublic class ApibootQuartzJobTypesApplication implements CommandLineRunner {\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(ApibootQuartzJobTypesApplication.class, args);\\n    }\\n\\n    /**\\n     * ApiBoot Quartz\u5185\u7f6e\u63a5\u53e3\\n     *\\n     * @see org.minbox.framework.api.boot.plugin.quartz.support.ApiBootQuartzServiceDefaultSupport\\n     */\\n    @Autowired\\n    private ApiBootQuartzService quartzService;\\n\\n    @Override\\n    public void run(String... args) throws Exception {\\n        // \u4e00\u6b21\u6027\u4efb\u52a1\\n        quartzService.newJob(ApiBootOnceJobWrapper.Context().jobClass(DemoJob.class).wrapper());\\n\\n        // \u5faa\u73af\u6267\u884c\u4efb\u52a1\uff0c\u6bcf\u96942000\u6beb\u79d2\u6267\u884c\u4e00\u6b21\uff0c\u5faa\u73af5\u6b21\uff0c\u4e00\u5171\u6267\u884c6\u6b21\\n        quartzService.newJob(ApiBootLoopJobWrapper.Context().jobClass(DemoJob.class).loopIntervalTime(2000).repeatTimes(5).wrapper());\\n\\n        // Cron\u8868\u8fbe\u5f0f\u4efb\u52a1\uff0c\u95f4\u96941\u79d2\u6267\u884c\u4e00\u6b21\\n        quartzService.newJob(ApiBootCronJobWrapper.Context().jobClass(DemoJob.class).cron(\\"0/1 * * * * ?\\").wrapper());\\n    }\\n}\\n```\\n\\n\u542f\u52a8\u9879\u76ee\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u770b\u5230\u6709\u4efb\u52a1\u6267\u884c\u65f6\u95f4\u8f93\u51fa\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```bash\\n2019-12-24 14:56:05.046  INFO 3113 --- [eduler_Worker-1] o.minbox.chapter.apiboot.quartz.DemoJob  : \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\uff1a1577170565046\\n2019-12-24 14:56:05.046  INFO 3113 --- [eduler_Worker-2] o.minbox.chapter.apiboot.quartz.DemoJob  : \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\uff1a1577170565046\\n2019-12-24 14:56:05.047  INFO 3113 --- [eduler_Worker-3] o.minbox.chapter.apiboot.quartz.DemoJob  : \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\uff1a1577170565047\\n2019-12-24 14:56:06.005  INFO 3113 --- [eduler_Worker-4] o.minbox.chapter.apiboot.quartz.DemoJob  : \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\uff1a1577170566005\\n2019-12-24 14:56:07.002  INFO 3113 --- [eduler_Worker-5] o.minbox.chapter.apiboot.quartz.DemoJob  : \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\uff1a1577170567002\\n2019-12-24 14:56:07.042  INFO 3113 --- [eduler_Worker-6] o.minbox.chapter.apiboot.quartz.DemoJob  : \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\uff1a1577170567042\\n2019-12-24 14:56:08.003  INFO 3113 --- [eduler_Worker-7] o.minbox.chapter.apiboot.quartz.DemoJob  : \u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\uff1a1577170568003\\n...\\n```\\n\\n> \u867d\u7136\u4efb\u52a1\u5df2\u7ecf\u6267\u884c\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u662f\u591a\u79cd\u6267\u884c\u65b9\u5f0f\u540c\u65f6\u6267\u884c\u540c\u4e00\u4e2a\u4efb\u52a1\uff0c\u6211\u4eec\u4e0d\u597d\u505a\u51fa\u533a\u5206\uff0c\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u4f7f\u7528`ApiBoot Quartz`\u63d0\u4f9b\u7684\u53c2\u6570\u6765\u89e3\u51b3\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot Quartz`\u6240\u63d0\u4f9b\u7684\u529f\u80fd\u5df2\u7ecf\u53ef\u4ee5\u6ee1\u8db3\u65e5\u5e38\u5f00\u53d1\u6240\u9700\u8981\uff0c\u800c\u4e14\u6bd4\u8f83\u7075\u6d3b\uff0c\u53ef\u4ee5\u901a\u8fc7`ApiBoot Quartz`\u63d0\u4f9b\u7684`Wrapper`\u5c01\u88c5\u7c7b\u7684\u65b9\u6cd5\u8fdb\u884c\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c**\u4efb\u52a1\u7684\u6267\u884c\u662f\u5b50\u7ebf\u7a0b\u5f02\u6b65\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u8003\u8651\u4f1a\u5f71\u54cd\u8bbf\u95ee\u54cd\u5e94\u7684\u6548\u7387\u95ee\u9898**\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-quartz-job-types`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-quartz-integrated-away","metadata":{"permalink":"/blog/apiboot-quartz-integrated-away","source":"@site/blog/quartz/apiboot-quartz-integrated-away.md","title":"\u8fd9\u79cd\u65b9\u5f0f\u6574\u5408Quartz\u4f60\u89c1\u8fc7\u5417\uff1f","description":"Quartz\u662f\u4e00\u6b3e\u4f18\u79c0\u7684\u4efb\u52a1\u8c03\u5ea6\u6846\u67b6\uff0c\u652f\u6301\u5185\u5b58\u3001JDBC\u7684\u5f62\u5f0f\u6765\u5b58\u50a8\u672a\u6267\u884c\u7684\u4efb\u52a1\u5217\u8868\uff0c\u652f\u6301\u591a\u4e2a\u4efb\u52a1\u8282\u70b9\u540c\u65f6\u6267\u884c\u4efb\u52a1\uff0c\u652f\u6301\u4efb\u52a1\u6f02\u79fb\u5230\u4e0d\u540c\u7684\u8282\u70b9\u6267\u884c\u3002","date":"2019-12-23T14:34:10.000Z","formattedDate":"2019\u5e7412\u670823\u65e5","tags":[{"label":"Quartz","permalink":"/blog/tags/quartz"}],"readingTime":9.64,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-quartz-integrated-away","title":"\u8fd9\u79cd\u65b9\u5f0f\u6574\u5408Quartz\u4f60\u89c1\u8fc7\u5417\uff1f","authors":"hengboy","tags":["Quartz"],"date":"2019-12-23T14:34:10.000Z"},"prevItem":{"title":"Quartz\u884d\u751f\u51fa\u7684\u4e09\u79cd\u4efb\u52a1\u7c7b\u578b\uff0c\u4f60\u7528\u8fc7\u51e0\u4e2a\uff1f","permalink":"/blog/apiboot-quartz-job-types"},"nextItem":{"title":"Swagger2\u600e\u4e48\u6574\u5408OAuth2\u6765\u5728\u7ebf\u8c03\u8bd5\u63a5\u53e3\uff1f","permalink":"/blog/apiboot-swagger-integrated-oauth"}},"content":"`Quartz`\u662f\u4e00\u6b3e\u4f18\u79c0\u7684\u4efb\u52a1\u8c03\u5ea6\u6846\u67b6\uff0c\u652f\u6301\u5185\u5b58\u3001JDBC\u7684\u5f62\u5f0f\u6765\u5b58\u50a8\u672a\u6267\u884c\u7684\u4efb\u52a1\u5217\u8868\uff0c\u652f\u6301\u591a\u4e2a\u4efb\u52a1\u8282\u70b9\u540c\u65f6\u6267\u884c\u4efb\u52a1\uff0c\u652f\u6301\u4efb\u52a1\u6f02\u79fb\u5230\u4e0d\u540c\u7684\u8282\u70b9\u6267\u884c\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u524d\u8a00\\n\\n\u8fd9\u4e48\u4f18\u79c0\u7684\u4efb\u52a1\u8c03\u5ea6\u6846\u67b6\u6211\u60f3\u5e94\u8be5\u662f\u5f88\u591a\u5f00\u53d1\u8005\u7684\u9996\u9009\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64`ApiBoot`\u5bf9\u5b83\u4e0b\u624b\u4e86\uff0c\u57fa\u4e8e`SpringBoot`\u5c01\u88c5\u4e86\u540d\u4e3a`ApiBoot Quartz`\u7684\u7ec4\u4ef6\uff0c\u540c\u6837\u662f\u901a\u8fc7`application.yml`\u914d\u7f6e\u6587\u4ef6\u7684\u5f62\u5f0f\u5c31\u53ef\u4ee5\u7b80\u5355\u7684\u5b9e\u73b0\u521d\u59cb\u5316\u96c6\u6210\u3002\\n\\n\u5982\u679c\u4f7f\u7528\u9ed8\u8ba4\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7f16\u5199\u4e00\u884c\u96c6\u6210\u76f8\u5173\u7684\u4ee3\u7801\uff0c`ApiBoot Quartz`\u8fd8\u9488\u5bf9\u65e5\u5e38\u9ad8\u9891\u7387\u4f7f\u7528\u7684\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9a\u4e49\u7684\u65b9\u6cd5\u5982\uff1a\u521b\u5efa\u4efb\u52a1\u3001\u6682\u505c\u4efb\u52a1\u3001\u6062\u590d\u4efb\u52a1\u3001\u5220\u9664\u4efb\u52a1\u7b49\u7b49\u3002\\n\\n## \u4efb\u52a1\u5b58\u50a8\u65b9\u5f0f\\n\\n`Quartz`\u81ea\u8eab\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b58\u50a8\u4efb\u52a1\u7684\u65b9\u5f0f\uff1a\\n\\n- `Memory`\uff1a\u5185\u5b58\u65b9\u5f0f\uff0c\u5c06\u4efb\u52a1\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\uff0c\u5f53\u9879\u76ee\u91cd\u542f\u65f6\u5c31\u4f1a\u4e22\u5931\uff0c\u4e0d\u5efa\u8bae\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u3002\\n- `Jdbc`\uff1a\u6570\u636e\u5e93\u65b9\u5f0f\uff0c\u5c06\u4efb\u52a1\u5b58\u50a8\u5230`Quartz`\u63d0\u4f9b\u7684\u56fa\u5b9a\u7ed3\u6784\u7684\u8868\u5185\uff0c\u9879\u76ee\u91cd\u542f\u4efb\u52a1\u4e0d\u4f1a\u4e22\u5931\uff0c\u591a\u79cd\u6570\u636e\u5e93\u7684\u5efa\u8868\u8bed\u53e5\u8bf7\u8bbf\u95ee\uff1a[Quartz Schemas](https://github.com/minbox-projects/api-boot/tree/master/api-boot-samples/api-boot-sample-quartz/src/main/resources/schemas) \u6309\u9700\u9009\u62e9\u3002\\n\\n`ApiBoot`\u5c06`Quartz`\u5185\u63d0\u4f9b\u7684\u4e24\u79cd\u5b58\u50a8\u65b9\u5f0f\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u901a\u8fc7`api.boot.quartz.job-store-type`\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\uff0c\u8be5\u53c2\u6570\u9ed8\u8ba4\u503c\u4e3a`memory`\uff0c\u6240\u4ee5\u4f60\u5982\u679c\u4f7f\u7528\u5185\u5b58\u65b9\u5f0f\u8be5\u53c2\u6570\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u66f4\u591a\u914d\u7f6e\u8bf7\u8bbf\u95ee [ApiBootQuartzProperties](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-autoconfigure/src/main/java/org/minbox/framework/api/boot/autoconfigure/quartz/ApiBootQuartzProperties.java) \u67e5\u770b\u3002\\n\\n## \u4efb\u52a1\u7c7b\u578b\\n\\n\u4efb\u52a1\u7c7b\u578b\u662f`ApiBoot Quartz`\u7684\u65b0\u6982\u5ff5\uff0c\u5176\u5b9e\u5728`Quartz`\u4e2d\u4efb\u52a1\u5e76\u6ca1\u6709\u7c7b\u578b\u533a\u5206\uff0c\u5b9e\u73b0`org.quartz.Job`\u63a5\u53e3\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u3002\\n\\n\u4e0d\u8fc7`Spring`\u4e5f\u662f\u7231\u6298\u817e\uff0c\u5bf9\u5176\u8fdb\u884c\u4e86\u5c01\u88c5\u63d0\u4f9b\u4e86`QuartzJobBean`\uff0c\u5b83\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u6211\u4eec\u7ee7\u627f\u8be5\u7c7b\u540e\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\u3002\\n\\n\u5728`ApiBoot Quartz`\u4e2d\u6709\u4e09\u79cd\u4efb\u52a1\u7c7b\u578b\uff0c\u5206\u522b\u662f\uff1a\\n\\n- **OnceJob**\uff1a\u4ec5\u6267\u884c\u4e00\u6b21\u7684\u4efb\u52a1\u7c7b\u578b\\n- **CronJob**\uff1a\u4f7f\u7528Cron\u8868\u8fbe\u5f0f\u6765\u5b9a\u4e49\u4efb\u52a1\u7684\u6267\u884c\u5468\u671f\\n- **LoopJob**\uff1a\u53ef\u6307\u5b9a\u5faa\u73af\u6b21\u6570\u7684\u4efb\u52a1\uff0c\u6839\u636e\u6307\u5b9a\u5faa\u73af\u7684\u6b21\u6570\u8fdb\u884c\u91cd\u590d\u6267\u884c\\n\\n## \u5185\u7f6e\u65b9\u6cd5\\n\\n`ApiBoot`\u5c01\u88c5`Quartz`\u540e\u6240\u63d0\u4f9b\u7684\u65b9\u6cd5\u90fd\u4f4d\u4e8e [ApiBootQuartzService](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-plugins/api-boot-plugin-quartz/src/main/java/org/minbox/framework/api/boot/plugin/quartz/ApiBootQuartzService.java) \u63a5\u53e3\u4e2d\uff0c\u800c\u8be5\u63a5\u53e3\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684\u5b9e\u73b0\u7c7b [ApiBootQuartzServiceDefaultSupport](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-plugins/api-boot-plugin-quartz/src/main/java/org/minbox/framework/api/boot/plugin/quartz/support/ApiBootQuartzServiceDefaultSupport.java) \uff0c\u8be5\u5b9e\u73b0\u7c7b\u5168\u90e8\u5b9e\u73b0\u4e86\u63a5\u53e3\u5b9a\u4e49\u65b9\u6cd5\uff0c\u5185\u90e8\u901a\u8fc7`org.quartz.Scheduler`\u6765\u5b9e\u73b0\u4efb\u52a1\u7684\u57fa\u672c\u64cd\u4f5c\u3002\\n\\n**\u5185\u7f6e\u65b9\u6cd5\u5217\u8868\uff1a**\\n\\n| \u65b9\u6cd5                                                         | \u63cf\u8ff0                                                       |\\n| ------------------------------------------------------------ | ---------------------------------------------------------- |\\n| `Scheduler getScheduler();`                                  | \u83b7\u53d6SpringIoc\u5bb9\u5668\u5185\u7684Scheduler\u5b9e\u4f8b                         |\\n| `String newJob(ApiBootJobWrapper jobWrapper);`               | \u901a\u8fc7\u5c01\u88c5\u7684\u5bf9\u8c61\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\uff0c\u8fd9\u662f\u521b\u5efa\u6240\u6709\u7c7b\u578b\u4efb\u52a1\u7684\u5165\u53e3 |\\n| `void deleteJob(String jobKey);`                             | \u5220\u9664\u4e00\u4e2a\u4efb\u52a1                                               |\\n| `void deleteJobs(String... jobKeys);`                        | \u5220\u9664\u4e00\u7cfb\u5217\u4efb\u52a1                                             |\\n| `void deleteJobs(Collection<String> jobKeys);`               | \u5220\u9664\u96c6\u5408\u5185\u7684\u6240\u6709\u4efb\u52a1                                       |\\n| `void pauseJob(String jobKey);`                              | \u6682\u505c\u4e00\u4e2a\u4efb\u52a1                                               |\\n| `void pauseJobs(String... jobKeys);`                         | \u6682\u505c\u4f20\u9012\u7684\u6240\u6709\u4efb\u52a1                                         |\\n| ```java void pauseJobs(Collection<String> jobKeys);```       | \u6682\u505c\u96c6\u5408\u5185\u7684\u6240\u6709\u4efb\u52a1                                       |\\n| `void resumeJob(String jobKey);`                             | \u6062\u590d\u4e00\u4e2a\u4efb\u52a1\u6267\u884c                                           |\\n| `void resumeJobs(String... jobKeys);`                        | \u6062\u590d\u6570\u7ec4\u5185\u7684\u6240\u6709\u4efb\u52a1\u6267\u884c                                   |\\n| ```java void resumeJobs(Collection<String> jobKeys);```      | \u6062\u590d\u96c6\u5408\u5185\u7684\u6240\u6709\u4efb\u52a1\u6267\u884c                                   |\\n| `void updateJobCron(String jobKey, String cron);`            | \u66f4\u65b0\u4efb\u52a1Cron\u8868\u8fbe\u5f0f                                         |\\n| `void updateJobStartTime(String jobKey, Date jobStartTime);` | \u66f4\u65b0\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4                                           |\\n| `void startAllJobs();`                                       | \u542f\u52a8\u6240\u6709\u5b9a\u65f6\u4efb\u52a1                                           |\\n| `void shutdownAllJobs();`                                    | \u5173\u95ed\u6240\u6709\u5b9a\u65f6\u4efb\u52a1                                           |\\n\\n\\n\\n\u65e2\u7136`ApiBoot`\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u4e48\u591a\u5185\u7f6e\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u6765\u611f\u53d7\u4e00\u4e0b\u3002\\n\\n## \u793a\u4f8b\u9879\u76ee\\n\\n\u4f7f\u7528`Idea`\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\uff0c\u6211\u4eec\u628a\u672c\u7ae0\u6240\u9700\u8981\u7684\u4f9d\u8d56\u6dfb\u52a0\u5728`pom.xml`\u6587\u4ef6\u5185\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot Quartz--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-quartz</artifactId>\\n  </dependency>\\n</dependencies>\\n<dependencyManagement>\\n  <dependencies>\\n    \x3c!--ApiBoot\u7edf\u4e00\u7248\u672c--\x3e\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.1.RELEASE</version>\\n      <scope>import</scope>\\n      <type>pom</type>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n## \u793a\u4f8b\u4efb\u52a1\u7c7b\\n\\n\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`DemoJob`\u7684\u4efb\u52a1\u8c03\u5ea6\u793a\u4f8b\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u793a\u4f8b\u4efb\u52a1\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\npublic class DemoJob extends QuartzJobBean {\\n    @Override\\n    protected void executeInternal(JobExecutionContext jobExecutionContext) throws JobExecutionException {\\n        System.out.println(\\"\u4efb\u52a1\u6267\u884c\u4e86..\\");\\n    }\\n}\\n```\\n\\n## QuartzJobBean\u662f\u4ec0\u4e48\uff1f\\n\\n`QuartzJobBean`\u662f\u7531`Spring`\u63d0\u4f9b\uff0c\u5b9e\u73b0`org.quartz.Job`\u63a5\u53e3\uff0c\u662f\u5bf9`Quartz`\u5185\u7f6e\u4efb\u52a1\u63a5\u53e3\u7684\u5b9e\u73b0\u5e76\u4e14\u5c01\u88c5\u3002\\n\\n## QuartzJobBean\u7684\u4f18\u52bf\\n\\n`Spring`\u6240\u63d0\u4f9b\u7684`QuartzJobBean`\u5177\u4f53\u6709\u4ec0\u4e48\u4f18\u52bf\u5462\uff1f\\n\\n- **\u81ea\u52a8\u5c06\u5b9e\u73b0\u7c7b\u5b9e\u4f8b\u52a0\u5165IOC**\\n\\n  \u4f7f\u7528`QuartzJobBean`\u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u4efb\u52a1\u65f6\uff0c`Spring`\u4f1a\u81ea\u52a8\u626b\u63cf\u9879\u76ee\u5185\u7684\u5b9e\u73b0\u7c7b\uff0c\u5c06\u6bcf\u4e00\u4e2a\u5b9e\u73b0\u7c7b\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u521b\u5efa\u51fa\u5b9e\u4f8b\u5e76\u5c06\u5b9e\u4f8b\u5199\u5165\u5230`IOC`\u5bb9\u5668\u5185\u3002\\n\\n- **\u53ef\u5728\u5b9e\u73b0\u7c7b\u5185\u6ce8\u5165\u5b9e\u4f8b**\\n\\n  \u76f4\u63a5\u4f7f\u7528`Quartz`\u65f6\uff0c\u5982\u679c\u81ea\u5b9a\u4e49\u4efb\u52a1\u7c7b\u5b9e\u4f8b\u4e0d\u52a0\u5165`IOC`\u5bb9\u5668\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u81ea\u5b9a\u4e49\u4efb\u52a1\u7c7b\u6ce8\u5165**Service**\uff0c\u8fd9\u4e00\u70b9\u4e86\u89e3`Spring`\u57fa\u7840\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u660e\u767d\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u975e\u88ab`IOC`\u6258\u7ba1\u7684\u7c7b\u5185\u8fdb\u884c\u6ce8\u5165\u64cd\u4f5c\uff0c\u800c\u4f7f\u7528`QuartzJobBean`\u5219\u4e0d\u7528\u8003\u8651\u8fd9\u4e00\u70b9\u3002\\n\\n## QuartzJobBean\u6ce8\u518c\u6d41\u7a0b\\n\\n\u4f7f\u7528`ApiBoot Quartz`\u540e\u4e3a\u4ec0\u4e48\u4e0d\u9700\u8981\u518d\u624b\u52a8\u6dfb\u52a0\u6ce8\u5165\u628a\u4efb\u52a1\u5b9e\u73b0\u7c7b\u52a0\u5165\u5230`IOC`\u5bb9\u5668\uff1f\\n\\n\u4efb\u52a1\u7c7b\u6ce8\u518c\u6d41\u7a0b\u5982\u4e0b\u6240\u793a\uff1a\\n\\n- **\u7b2c\u4e00\u6b65\uff1aApiBootQuartzAutoConfiguration#quartzScheduler()**\\n\\n  `ApiBoot`\u5728\u96c6\u6210`Quartz`\u65f6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u81ea\u52a8\u5316\u914d\u7f6e\u7c7b [ApiBootQuartzAutoConfiguration](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-autoconfigure/src/main/java/org/minbox/framework/api/boot/autoconfigure/quartz/ApiBootQuartzAutoConfiguration.java) \uff0c\u5728\u8be5\u7c7b\u4e2d\u901a\u8fc7`quartzScheduler()`\u65b9\u6cd5\u6765\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a`SchedulerFactoryBean`\u5b9e\u4f8b\\n\\n- **\u7b2c\u4e8c\u6b65\uff1aSchedulerFactoryBean#setJobFactory()**\\n\\n  \u901a\u8fc7`SchedulerFactoryBean`\u5185\u63d0\u4f9b\u7684`setJobFactory()`\u65b9\u6cd5\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u5177\u4f53\u4f7f\u7528`JobFactory`\u7684\u5b9e\u73b0\u7c7b\uff0c\u800c\u5728`spring-context-support`\u4f9d\u8d56\u5185\u5df2\u7ecf\u63d0\u4f9b\u4e86\u76f8\u5173\u5b9e\u73b0\uff0c\u540d\u4e3a `SpringBeanJobFactory`\u3002\\n\\n- **\u7b2c\u4e09\u6b65\uff1aSpringBeanJobFactory#createJobInstance()**\\n\\n  \u5728\u9879\u76ee\u542f\u52a8\u65f6\u4f1a\u5c06\u626b\u63cf\u5230\u7684\u6240\u6709`QuartzJobBean`\u5b9e\u73b0\u7c7b\u901a\u8fc7`JobFactory#newJob`\u65b9\u6cd5\u8fdb\u884c\u521b\u5efa\u4efb\u52a1\u5b9e\u4f8b\u540e\u5c06\u5b9e\u4f8b\u4ea4\u4ed8\u7ed9`Quartz`\u6846\u67b6\u8fdb\u884c\u51c6\u5907\u540e\u671f\u7684\u4efb\u52a1\u8c03\u5ea6\u3002\\n\\n`SpringBeanJobFactory`\u7c7b\u7ee7\u627f\u4e8e`AdaptableJobFactory`\u7c7b\uff0c\u800c`AdaptableJobFactory`\u5219\u662f\u5b9e\u73b0\u4e86`JobFactory`\u63a5\u53e3\uff0c\u8fd9\u6837\u7684\u8bdd\u5982\u679c\u6211\u4eec\u5c06`SpringBeanJobFactory`\u8bbe\u7f6e\u7ed9`SchedulerFactoryBean`\u9879\u76ee\u542f\u52a8\u65f6`Quartz`\u5c31\u4f1a\u8c03\u7528`SpringBeanJobFactory#createJobInstance()`\u65b9\u6cd5\u6765\u521b\u5efa\u4efb\u52a1\u5b9e\u4f8b\u3002\\n\\n\u800c\u5728`createJobInstance()`\u65b9\u6cd5\u5185`Spring`\u5219\u662f\u5c06\u521b\u5efa\u7684\u4efb\u52a1\u5b9e\u4f8b\u5b58\u5165\u4e86`IOC`\u5bb9\u5668\u5185\uff0c\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u4efb\u52a1\u5185\u5c31\u53ef\u4ee5\u8fdb\u884c\u6ce8\u5165\u5176\u4ed6Bean\u7684\u64cd\u4f5c\u4e86\uff0c\u8be5\u65b9\u6cd5\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n\\t* Create the job instance, populating it with property values taken\\n\\t* from the scheduler context, job data map and trigger data map.\\n\\t*/\\n@Override\\nprotected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {\\n  Object job = (this.applicationContext != null ?\\n                // \u901a\u8fc7ApplicationContext\u521b\u5efa\u4efb\u52a1\u5b9e\u4f8b\uff0c\u5e76\u6dfb\u52a0\u5230IOC\\n                this.applicationContext.getAutowireCapableBeanFactory().createBean(\\n                  bundle.getJobDetail().getJobClass(), AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR, false) :\\n                super.createJobInstance(bundle));\\n\\n  if (isEligibleForPropertyPopulation(job)) {\\n    BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job);\\n    MutablePropertyValues pvs = new MutablePropertyValues();\\n    if (this.schedulerContext != null) {\\n      pvs.addPropertyValues(this.schedulerContext);\\n    }\\n    pvs.addPropertyValues(bundle.getJobDetail().getJobDataMap());\\n    pvs.addPropertyValues(bundle.getTrigger().getJobDataMap());\\n    if (this.ignoredUnknownProperties != null) {\\n      for (String propName : this.ignoredUnknownProperties) {\\n        if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {\\n          pvs.removePropertyValue(propName);\\n        }\\n      }\\n      bw.setPropertyValues(pvs);\\n    }\\n    else {\\n      bw.setPropertyValues(pvs, true);\\n    }\\n  }\\n\\n  return job;\\n}\\n```\\n\\n\u5927\u81f4\u7684`QuartzJobBean`\u5b9e\u73b0\u7c7b\u6ce8\u518c\u6d41\u7a0b\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\uff0c\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u89c1\u8bc6\u4e0b\u662f\u4e0d\u662f\u771f\u7684\u6709\u90a3\u4e48\u7b80\u5355\u5c31\u53ef\u4ee5\u521b\u5efa\u5e76\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u4e3a\u4e86\u6f14\u793a\u65b9\u4fbf\uff0c\u6211\u4eec\u4fee\u6539`XxxApplication`\u5165\u53e3\u7c7b\uff0c\u8ba9\u9879\u76ee\u542f\u52a8\u540e\u81ea\u52a8\u6267\u884c`DemoJob`\u4efb\u52a1\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n@SpringBootApplication\\npublic class ApibootQuartzIntegratedAwayApplication implements CommandLineRunner {\\n\\n  public static void main(String[] args) {\\n    SpringApplication.run(ApibootQuartzIntegratedAwayApplication.class, args);\\n  }\\n\\n  /**\\n    * ApiBoot Quartz\u5185\u7f6e\u65b9\u6cd5\u63a5\u53e3\\n    * {@link org.minbox.framework.api.boot.plugin.quartz.support.ApiBootQuartzServiceDefaultSupport}\\n    */\\n  @Autowired\\n  private ApiBootQuartzService quartzService;\\n\\n  @Override\\n  public void run(String... args) throws Exception {\\n    quartzService.newJob(ApiBootOnceJobWrapper.Context()\\n                         .jobClass(DemoJob.class)\\n                         .wrapper());\\n  }\\n}\\n```\\n\\n> `CommandLineRunner`\u662f\u7531`SpringBoot`\u63d0\u4f9b\u7528\u4e8e\u6267\u884c\u9879\u76ee\u542f\u52a8\u540e\u7684\u903b\u8f91\u3002\\n\\n\u542f\u52a8\u9879\u76ee\u540e\u63a7\u5236\u53f0\u8f93\u51fa\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```\\n......\\n\u4efb\u52a1\u6267\u884c\u4e86..\\n```\\n\\n\u5fc3\u7ec6\u7684\u540c\u5b66\u5e94\u8be5\u770b\u5230\u4e86\u6211\u4eec\u4f7f\u7528\u4e86`ApiBootOnceJobWeapper`\u8fd9\u4e2a\u5c01\u88c5\u7c7b\u6765\u521b\u5efa\u7684\u4efb\u52a1\u5bf9\u8c61\uff0c\u6211\u4eec\u4e0b\u4e00\u7ae0\u5c31\u6765\u8bb2\u4e0b\u8fd9\u4e2a\u5c01\u88c5\u7c7b\u5230\u5e95\u53ef\u4ee5\u5e72\u4ec0\u4e48\uff1f\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`Quartz`\u662f\u4e00\u4e2a\u4f18\u79c0\u7684\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u6846\u67b6\uff0c`ApiBoot`\u5c01\u88c5\u4e86\u5b83\uff0c\u4f7f\u5b83\u63d2\u4e0a\u4e86\u7fc5\u8180\uff0c\u8ba9\u6211\u4eec\u660e\u767d\u4e86\u7b80\u5355\u7684\u53e6\u4e00\u5c42\u5b9a\u4e49\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-quartz-integrated-away`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-swagger-integrated-oauth","metadata":{"permalink":"/blog/apiboot-swagger-integrated-oauth","source":"@site/blog/swagger/apiboot-swagger-integrated-oauth.md","title":"Swagger2\u600e\u4e48\u6574\u5408OAuth2\u6765\u5728\u7ebf\u8c03\u8bd5\u63a5\u53e3\uff1f","description":"\u524d\u8a00","date":"2019-12-18T17:05:58.000Z","formattedDate":"2019\u5e7412\u670818\u65e5","tags":[{"label":"Swagger2","permalink":"/blog/tags/swagger-2"}],"readingTime":4.82,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"apiboot-swagger-integrated-oauth","title":"Swagger2\u600e\u4e48\u6574\u5408OAuth2\u6765\u5728\u7ebf\u8c03\u8bd5\u63a5\u53e3\uff1f","tags":["Swagger2"],"date":"2019-12-18T17:05:58.000Z"},"prevItem":{"title":"\u8fd9\u79cd\u65b9\u5f0f\u6574\u5408Quartz\u4f60\u89c1\u8fc7\u5417\uff1f","permalink":"/blog/apiboot-quartz-integrated-away"},"nextItem":{"title":"\u4f7f\u7528Swagger2\u4f5c\u4e3a\u6587\u6863\u6765\u63cf\u8ff0\u4f60\u7684\u63a5\u53e3\u4fe1\u606f","permalink":"/blog/apiboot-swagger-describe-the-interface"}},"content":"## \u524d\u8a00\\n\\n`Swagger2`\u4f5c\u4e3a\u4fb5\u5165\u5f0f\u6587\u6863\u4e2d\u6bd4\u8f83\u51fa\u8272\u7684\u4e00\u5458\uff0c\u652f\u6301\u63a5\u53e3\u8ba4\u8bc1\u7684\u5728\u7ebf\u8c03\u8bd5\u80af\u5b9a\u662f\u4e0d\u5728\u8bdd\u4e0b\u7684\uff0c\u5f53\u6211\u4eec\u5728\u8c03\u7528`OAuth2`\u6240\u4fdd\u62a4\u7684\u63a5\u53e3\u65f6\uff0c\u9700\u8981\u5c06\u6709\u6548\u7684`AccessToken`\u4f5c\u4e3a\u8bf7\u6c42`Header`\u5185`Authorization`\u7684\u503c\u65f6\uff0c\u6211\u4eec\u624d\u62e5\u6709\u4e86\u8bbf\u95ee\u6743\u9650\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u4f7f\u7528`Swagger`\u5728\u7ebf\u8c03\u8bd5\u65f6\u8be5\u8bbe\u7f6e`AccessToken`\u7684\u503c\u5462\uff1f\\n\x3c!--truncate--\x3e\\n\u672c\u6587\u6240\u9700ApiBoot\u76f8\u5173\u94fe\u63a5\uff1a\\n\\n- [ApiBoot\u5b98\u7f51](https://apiboot.minbox.org/)\\n- [ApiBoot\u5168\u7ec4\u4ef6\u7cfb\u5217\u6587\u7ae0](https://blog.yuqiyu.com/apiboot-all-articles.html)\\n- [ApiBoot Gitee\u6e90\u7801\u4ed3\u5e93\uff08\u6b22\u8fceContributor\uff09](https://gitee.com/minbox-projects/api-boot)\\n- [ApiBoot GitHub\u6e90\u7801\u4ed3\u5e93\uff08\u6b22\u8fceContributor\uff09](https://github.com/minbox-projects/api-boot)\\n\\n## \u521b\u5efa\u793a\u4f8b\u9879\u76ee\\n\u5728\u4e4b\u524d\u6587\u7ae0\u300c[\u4f7f\u7528Swagger2\u4f5c\u4e3a\u6587\u6863\u6765\u63cf\u8ff0\u4f60\u7684\u63a5\u53e3\u4fe1\u606f](https://blog.yuqiyu.com/apiboot-swagger-describe-the-interface.html)\u300d\u6211\u4eec\u5df2\u7ecf\u8bb2\u5230\u4e86\u4f7f\u7528`Swagger2`\u6765\u7b80\u5355\u7684\u63cf\u8ff0\u63a5\u53e3\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u5728\u7ebf\u7684\u63a5\u53e3\u6587\u6863\uff0c\u6211\u4eec\u672c\u7ae0\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6765\u96c6\u6210\u4f7f\u7528`OAuth2`\u5b9e\u73b0\u5728\u7ebf\u8c03\u8bd5\u63a5\u53e3\uff0c\u6211\u4eec\u628a\u4e4b\u524d\u7ae0\u8282\u6d4b\u8bd5\u7684\u63a5\u53e3`UserController`\u590d\u5236\u5230\u672c\u7bc7\u6587\u7ae0\u4e2d\u4ee5\u4fbf\u4e8e\u6d4b\u8bd5\uff0c\u672c\u7ae0\u9879\u76ee`pom.xml`\u4f9d\u8d56\u5982\u4e0b\u6240\u793a\uff1a\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-swagger</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n  </dependency>\\n</dependencies>\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.1.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n\u5982\u679c\u4f60\u770b\u8fc7`ApiBoot Security`\u3001`ApiBoot OAuth`\u4f60\u5e94\u8be5\u77e5\u9053\uff0c\u901a\u8fc7`application.yml`\u6587\u4ef6\u7b80\u5355\u7684\u51e0\u884c\u914d\u7f6e\u5c31\u53ef\u4ee5\u96c6\u6210`Spring Security`\u6574\u5408`OAuth2`\uff0c\u672c\u7ae0\u6765\u4f7f\u7528**\u5185\u5b58\u65b9\u5f0f**\u914d\u7f6e`\u7528\u6237\u5217\u8868`\u4ee5\u53ca`\u5ba2\u6237\u7aef\u5217\u8868`\u3002\\n\\n> ApiBoot Security & ApiBoot OAuth\u7ec4\u4ef6\u4f7f\u7528\u7cfb\u5217\u6587\u7ae0\uff1a[https://blog.yuqiyu.com/apiboot-all-articles.html](https://blog.yuqiyu.com/apiboot-all-articles.html)\\n>\\n> \u5982\u679c\u4f60\u60f3\u6df1\u5165\u7684\u4e86\u89e3\u8fd9\u4e2a\u795e\u5947\u7684`ApiBoot`\u5b89\u5168\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f9d\u8d56\u6587\u7ae0\u6c47\u603b\u94fe\u63a5\u5b66\u4e60\u3002\\n\\n## \u542f\u7528ApiBoot Swagger\\n\\n\u901a\u8fc7`@EnableApiBootSwagger`\u6ce8\u89e3\u6765\u542f\u7528`ApiBoot Swagger`\u76f8\u5173\u529f\u80fd\uff0c\u5728`XxxApplication`\u5165\u53e3\u7c7b\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n@SpringBootApplication\\n@EnableApiBootSwagger\\npublic class ApibootSwaggerIntegratedOauthApplication {\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(ApibootSwaggerIntegratedOauthApplication.class, args);\\n    }\\n\\n}\\n```\\n\\n\\n\\n## \u914d\u7f6eApiBoot Security\\n\\n\u4f7f\u7528`grant_type=password`\u83b7\u53d6`AccessToken`\u65f6\uff0c\u9700\u8981\u6211\u4eec\u4f20\u9012\u7528\u6237\u7684`username`\u3001`password`\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u5185\u5b58\u65b9\u5f0f\u914d\u7f6e\u6211\u4eec\u53ea\u9700\u8981\u5728`application.yml`\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    security:\\n      # \u914d\u7f6e\u5b89\u5168\u7528\u6237\u5217\u8868\\n      users:\\n        - username: yuqiyu\\n          password: 123123\\n      # \u8d44\u6e90\u4fdd\u62a4\u8def\u5f84\u524d\u7f00\uff0c\u9ed8\u8ba4\u4e3a/api/**\\n      auth-prefix: /**\\n```\\n\\n## \u914d\u7f6eApiBoot OAuth\\n\\n\u6211\u4eec\u6765\u6dfb\u52a0`OAuth2`\u6240\u9700\u8981\u7684\u5ba2\u6237\u7aef\u5217\u8868\u914d\u7f6e\u4fe1\u606f\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u5185\u5b58\u65b9\u5f0f\u914d\u7f6e\u5ba2\u6237\u7aef\u7684`client-id`\u3001`client-secret`\uff0c\u53ea\u9700\u8981\u4fee\u6539`application.yml`\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    oauth:\\n      # \u914d\u7f6eOAuth\u5ba2\u6237\u7aef\u5217\u8868\\n      clients:\\n        - clientId: minbox\\n          clientSecret: chapter\\n```\\n\\n## \u4e86\u89e3\u8d44\u6e90\u6587\u4ef6\u6392\u9664\u62e6\u622a\\n\\n`Swagger2`\u53ef\u89c6\u5316\u754c\u9762\u6709\u5f88\u591a\u9759\u6001\u8d44\u6e90\u7ec4\u6210\uff0c\u6bd4\u5982\uff1a`js/css/images`\u7b49\uff0c\u800c\u96c6\u6210`Spring Security`\u540e\u8fd9\u4e9b\u8d44\u6e90\u9700\u8981\u6392\u9664\u6743\u9650\u62e6\u622a\u624d\u53ef\u4ee5\u8bbf\u95ee\u5230\uff0c\u5982\u679c\u662f\u4f7f\u7528\u4f20\u7edf\u7684\u65b9\u5f0f\u6574\u5408`Spring Security`\uff0c\u9700\u8981\u4f7f\u7528`WebSecurity`\u6765\u8fdb\u884c\u5ffd\u7565\u8def\u5f84\u624d\u53ef\u4ee5\uff0c\u800c\u901a\u8fc7`ApiBoot Security`\u5219\u662f\u4e0d\u7528\u8003\u8651\u8fd9\u4e00\u70b9\uff0c\u5728\u5185\u90e8\u5df2\u7ecf\u5bf9`Swagger`\u7684\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u505a\u51fa\u4e86\u6392\u9664\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u901a\u8fc7`Application`\u65b9\u5f0f\u542f\u52a8\u672c\u7ae0\u9879\u76ee\uff0c`Swagger`\u53ef\u89c6\u5316\u754c\u9762\u8bbf\u95ee\uff1a[http://localhost:8080/swagger-ui.html](http://localhost:8080/swagger-ui.html)\\n\\n### \u83b7\u53d6AccessToken\\n\\n\u901a\u8fc7`CURL`\u65b9\u5f0f\u83b7\u53d6\u7528\u6237\uff1a`yuqiyu`\u7684\u8bf7\u6c42\u4ee4\u724c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```bash\\n\u279c ~ curl -X POST minbox:chapter@localhost:8080/oauth/token -d \'grant_type=password&username=yuqiyu&password=123123\'\\n{\\"access_token\\":\\"304676a4-b9a6-4c4d-af40-e439b934aba8\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"ee2b5744-6947-4677-862e-fcf9517afca5\\",\\"expires_in\\":7199,\\"scope\\":\\"api\\"}\\n```\\n\\n### Swagger\u5728\u7ebf\u8c03\u8bd5\\n\\n\u6211\u4eec\u628a\u83b7\u53d6\u7684`AccessToken`\u4e0e\u7c7b\u578b\u8fdb\u884c\u7ec4\u5408\u6210\uff1a`Bearer 304676a4-b9a6-4c4d-af40-e439b934aba8`\uff0c\u5c06\u8be5\u4ee4\u724c\u5b57\u7b26\u4e32\u914d\u7f6e\u5230`Swagger`\u754c\u9762\u4e0a\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](https://blog.yuqiyu.com/images/post/apiboot-swagger-integrated-oauth-1.png)\\n\\n\u8f93\u5165\u540e\u70b9\u51fb`Authorize`\u6309\u94ae\u5373\u53ef\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`Swagger`\u7684\u5728\u7ebf\u8c03\u8bd5\u5176\u5b9e\u5185\u90e8\u662f\u6a21\u62df\u53d1\u9001\u8bf7\u6c42\uff0c\u5c06\u754c\u9762\u4e0a\u8f93\u5165\u7684\u53c2\u6570\u8fdb\u884c\u7ec4\u5408\u88c5\u914d\uff0c\u53d1\u9001\u5230\u9700\u8981\u6d4b\u8bd5\u7684\u63a5\u53e3\u8def\u5f84\uff0c\u800c\u4e0a\u56fe\u8bbe\u7f6e`AccessToken`\uff0c\u4e5f\u662f\u4e00\u4e2a\u4e34\u65f6\u4fdd\u5b58\uff0c**\u5237\u65b0\u9875\u9762\u5c31\u4f1a\u4e22\u5931**\uff0c\u53d1\u9001\u8bf7\u6c42\u65f6\u4f1a\u81ea\u52a8\u8ffd\u52a0\u5230`Request Header`\u5217\u8868\u5185\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-swagger-integrated-oauth`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-swagger-describe-the-interface","metadata":{"permalink":"/blog/apiboot-swagger-describe-the-interface","source":"@site/blog/swagger/apiboot-swagger-describe-the-interface.md","title":"\u4f7f\u7528Swagger2\u4f5c\u4e3a\u6587\u6863\u6765\u63cf\u8ff0\u4f60\u7684\u63a5\u53e3\u4fe1\u606f","description":"\u63a5\u53e3\u6587\u6863\u5728\u524d\u540e\u5206\u79bb\u7684\u9879\u76ee\u4e2d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u4e00\u90e8\u5206\uff0c\u6587\u6863\u7684\u7f16\u5199\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u4e00\u4ef6\u5934\u75bc\u7684\u4e8b\u60c5\uff0c\u5199\u7a0b\u5e8f\u4e0d\u5199\u6ce8\u91ca\u3001\u4e0d\u5199\u6587\u6863\u8fd9\u51e0\u4e4e\u662f\u7a0b\u5e8f\u5458\u7684\u901a\u75c5\uff0cSwagger2\u7684\u4ea7\u751f\u7ed9\u5e7f\u5927\u7684\u7a0b\u5e8f\u5458\u4eec\u5e26\u6765\u4e86\u66d9\u5149\uff0c\u53ea\u9700\u8981\u5728\u63a5\u53e3\u7c7b\u6216\u8005\u63a5\u53e3\u7684\u65b9\u6cd5\u4e0a\u6dfb\u52a0\u6ce8\u89e3\u914d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6587\u6863\u6548\u679c\uff0c\u9664\u4e86\u53ef\u4ee5\u5e94\u7528\u5230\u5355\u4f53\u5e94\u7528\uff0c\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\u4e5f\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\uff0c\u53ea\u9700\u8981\u6574\u5408zuul\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5404\u4e2a\u670d\u52a1\u7684\u6587\u6863\u6574\u5408\u3002","date":"2019-12-18T10:34:07.000Z","formattedDate":"2019\u5e7412\u670818\u65e5","tags":[{"label":"Swagger2","permalink":"/blog/tags/swagger-2"}],"readingTime":5.885,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-swagger-describe-the-interface","title":"\u4f7f\u7528Swagger2\u4f5c\u4e3a\u6587\u6863\u6765\u63cf\u8ff0\u4f60\u7684\u63a5\u53e3\u4fe1\u606f","authors":"hengboy","tags":["Swagger2"],"date":"2019-12-18T10:34:07.000Z"},"prevItem":{"title":"Swagger2\u600e\u4e48\u6574\u5408OAuth2\u6765\u5728\u7ebf\u8c03\u8bd5\u63a5\u53e3\uff1f","permalink":"/blog/apiboot-swagger-integrated-oauth"},"nextItem":{"title":"ApiBoot\u65b0\u7279\u6027GlobalLogging\u8be6\u89e3","permalink":"/blog/apiboot-logging-use-global-log"}},"content":"\u63a5\u53e3\u6587\u6863\u5728\u524d\u540e\u5206\u79bb\u7684\u9879\u76ee\u4e2d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u4e00\u90e8\u5206\uff0c\u6587\u6863\u7684\u7f16\u5199\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u4e00\u4ef6\u5934\u75bc\u7684\u4e8b\u60c5\uff0c\u5199\u7a0b\u5e8f`\u4e0d\u5199\u6ce8\u91ca`\u3001`\u4e0d\u5199\u6587\u6863`\u8fd9\u51e0\u4e4e\u662f\u7a0b\u5e8f\u5458\u7684\u901a\u75c5\uff0c`Swagger2`\u7684\u4ea7\u751f\u7ed9\u5e7f\u5927\u7684\u7a0b\u5e8f\u5458\u4eec\u5e26\u6765\u4e86\u66d9\u5149\uff0c\u53ea\u9700\u8981\u5728\u63a5\u53e3\u7c7b\u6216\u8005\u63a5\u53e3\u7684\u65b9\u6cd5\u4e0a\u6dfb\u52a0\u6ce8\u89e3\u914d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6587\u6863\u6548\u679c\uff0c\u9664\u4e86\u53ef\u4ee5\u5e94\u7528\u5230`\u5355\u4f53\u5e94\u7528`\uff0c\u5728`\u5fae\u670d\u52a1\u67b6\u6784\u4e2d`\u4e5f\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\uff0c\u53ea\u9700\u8981\u6574\u5408`zuul`\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5404\u4e2a\u670d\u52a1\u7684\u6587\u6863\u6574\u5408\u3002\\n\\n\x3c!--truncate--\x3e\\n\u672c\u6587\u6240\u9700ApiBoot\u76f8\u5173\u94fe\u63a5\uff1a\\n\\n- [ApiBoot\u5b98\u7f51](https://apiboot.minbox.org/)\\n- [ApiBoot\u5168\u7ec4\u4ef6\u7cfb\u5217\u6587\u7ae0](https://blog.yuqiyu.com/apiboot-all-articles.html)\\n- [ApiBoot Gitee\u6e90\u7801\u4ed3\u5e93\uff08\u6b22\u8fceContributor\uff09](https://gitee.com/minbox-projects/api-boot)\\n- [ApiBoot GitHub\u6e90\u7801\u4ed3\u5e93\uff08\u6b22\u8fceContributor\uff09](https://github.com/minbox-projects/api-boot)\\n\\n\\n\\n## \u524d\u8a00\\n\\n`ApiBoot Swagger`\u5185\u90e8\u5c01\u88c5\u4e86`Swagger2`\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6ce8\u89e3`@EnableApiBootSwagger`\u5c31\u53ef\u4ee5\u5b9e\u73b0\u96c6\u6210\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\u3002\\n\\n`ApiBoot Swagger`\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6bd4\u5982\uff1a`\u6587\u6863\u6807\u9898`\u3001`\u6587\u6863\u63cf\u8ff0`\u3001`\u6587\u6863\u7248\u672c\u53f7`\u7b49\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u6587\u6863\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u53ea\u9700\u8981\u5728`application.yml`\u6587\u4ef6\u5185\u5bf9\u5e94\u914d\u7f6e\u53c2\u6570\u5373\u53ef\u5b9e\u73b0\u81ea\u5b9a\u4e49\uff0c\u544a\u522b\u4e86\u7e41\u7410\u7684\u4ee3\u7801\u914d\u7f6e\uff0c`ApiBoot`\u901a\u8fc7\u81ea\u52a8\u5316\u914d\u7f6e\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u53ef\u4ee5\u67e5\u770b [ApiBootSwaggerAutoConfiguration](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-autoconfigure/src/main/java/org/minbox/framework/api/boot/autoconfigure/swagger/ApiBootSwaggerAutoConfiguration.java) \u914d\u7f6e\u7c7b\u6e90\u7801\u4e86\u89e3\u8be6\u60c5\u3002\\n\\n`ApiBoot Swagger`\u652f\u6301\u5728\u7ebf\u8c03\u8bd5\u96c6\u6210`OAuth2`\u7684\u63a5\u53e3\uff0c\u53ea\u9700\u8981\u5728\u6587\u6863\u754c\u9762\u901a\u8fc7 `\\"Authorize\\"`\u6309\u94ae\u8bbe\u7f6e\u6709\u6548\u7684`AccessToken`\u5373\u53ef\u3002\\n\\n## \u53ef\u914d\u7f6e\u53c2\u6570\u4e00\u89c8\\n\\n`ApiBoot Swagger`\u4e4b\u6240\u4ee5\u53ef\u4ee5\u53ea\u9700\u8981\u4e00\u4e2a\u6ce8\u89e3\u5c31\u53ef\u4ee5\u5b9e\u73b0`Swagger2`\u7684\u96c6\u6210\uff0c\u5176\u4e2d\u96be\u514d\u6709\u5f88\u591a\u7684\u914d\u7f6e\u53c2\u6570\u5728\u505a\u652f\u6301\uff0c\u4e86\u89e3\u6bcf\u4e00\u4e2a\u914d\u7f6e\u53c2\u6570\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u624d\u80fd\u8fdb\u884c\u5fc3\u5e94\u624b\u7684\u81ea\u5b9a\u4e49\u8c03\u6574\u3002\\n\\n| \u53c2\u6570\u540d                                  | \u9ed8\u8ba4\u503c                                                 | \u63cf\u8ff0                                    |\\n| --------------------------------------- | ------------------------------------------------------ | --------------------------------------- |\\n| api.boot.swagger.enable                 | true                                                   | \u662f\u5426\u542f\u7528\u6587\u6863                            |\\n| api.boot.swagger.title                  | ApiBoot\u5feb\u901f\u96c6\u6210Swagger\u6587\u6863                             | \u6587\u6863\u6807\u9898                                |\\n| api.boot.swagger.description            | -                                                      | \u6587\u6863\u63cf\u8ff0                                |\\n| api.boot.swagger.base-package           | SpringBoot\u9ed8\u8ba4package\uff0c\u8be6\u89c1`AutoConfigurationPackages` | \u751f\u6210\u6587\u6863\u7684\u57fa\u7840package                   |\\n| api.boot.swagger.version                | ApiBoot\u7684\u7248\u672c\u53f7                                        | \u6587\u6863\u7248\u672c\u53f7                              |\\n| api.boot.swagger.authorization.name     |                                                        | \u6388\u6743\u540d\u79f0                                |\\n| api.boot.swagger.authorization.key-name | Authorization                                          | \u6574\u5408Oauth2\u540eAccessToken\u5728Header\u5185\u7684Name |\\n\\n<hr/>\\n\\n\u4e0a\u9762\u662f\u5e38\u7528\u7684\u53c2\u6570\uff0c\u66f4\u591a\u914d\u7f6e\u53c2\u6570\u8be6\u89c1\u5b98\u65b9\u6587\u6863\uff1a[https://apiboot.minbox.org/docs/components/api-boot-swagger.html](https://apiboot.minbox.org/docs/components/api-boot-swagger.html)\\n\\n## \u521b\u5efa\u793a\u4f8b\u9879\u76ee\\n\\n\u6211\u4eec\u5148\u6765\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728\u9879\u76ee\u7684`pom.xml`\u6587\u4ef6\u5185\u6dfb\u52a0`ApiBoot`\u7684\u76f8\u5173\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-swagger</artifactId>\\n  </dependency>\\n\\n</dependencies>\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.1.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n### \u542f\u7528ApiBoot Swagger\\n\\n\u901a\u8fc7`@EnableApiBootSwagger`\u6ce8\u89e3\u6765\u542f\u7528`ApiBoot Swagger`\uff0c\u8be5\u6ce8\u89e3\u53ef\u4ee5\u914d\u7f6e\u5728`XxxApplication`\u5165\u53e3\u7c7b\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u914d\u7f6e\u5728\u88ab`@Configuration`\u6ce8\u89e3\u4fee\u9970\u7684\u914d\u7f6e\u7c7b\u4e0a\u3002\\n\\n```java\\n@SpringBootApplication\\n@EnableApiBootSwagger\\npublic class ApibootSwaggerDescribeTheInterfaceApplication {\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(ApibootSwaggerDescribeTheInterfaceApplication.class, args);\\n    }\\n\\n}\\n```\\n\\n### \u4fee\u6539\u9ed8\u8ba4\u914d\u7f6e\\n\\n`ApiBoot Swagger`\u6240\u63d0\u4f9b\u7684**\u914d\u7f6e\u53c2\u6570**\u90fd\u53ef\u4ee5\u5728`application.yml`\u6587\u4ef6\u5185\u8fdb\u884c\u8bbe\u7f6e\u6216\u4fee\u6539\u9ed8\u8ba4\u503c\uff0c\u4e0b\u9762\u662f\u4fee\u6539\u4e86`\u7248\u672c\u53f7`\u3001`\u6807\u9898`\u7684\u914d\u7f6e\uff1a\\n\\n```yaml\\n# ApiBoot\u76f8\u5173\u914d\u7f6e\\napi:\\n  boot:\\n    swagger:\\n      # \u914d\u7f6e\u6587\u6863\u6807\u9898\\n      title: \u63a5\u53e3\u6587\u6863\\n      # \u914d\u7f6e\u6587\u6863\u7248\u672c\\n      version: v1.0\\n```\\n\\n### \u6d4b\u8bd5\u63a7\u5236\u5668\\n\\n\u4e3a\u4e86\u65b9\u4fbf\u6f14\u793a`Swagger`\u6587\u6863\u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u7684\u63a7\u5236\u5668\uff0c\u4f7f\u7528`Swagger`\u63d0\u4f9b\u7684\u6ce8\u89e3\u6765\u63cf\u8ff0\u6d4b\u8bd5\u63a5\u53e3\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u793a\u4f8b\u63a7\u5236\u5668\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/user\\")\\n@Api(tags = \\"\u7528\u6237\u63a7\u5236\u5668\\")\\npublic class UserController {\\n    /**\\n     * \u793a\u4f8b\uff1a\\n     * \u6839\u636e\u7528\u6237\u540d\u67e5\u8be2\u7528\u6237\u57fa\u672c\u4fe1\u606f\\n     *\\n     * @param name {@link UserResponse#getName()}\\n     * @return {@link UserResponse}\\n     */\\n    @GetMapping(value = \\"/{name}\\")\\n    @ApiOperation(value = \\"\u67e5\u8be2\u7528\u6237\u4fe1\u606f\\", response = UserResponse.class)\\n    @ApiResponse(code = 200, message = \\"success\\", response = UserResponse.class)\\n    public UserResponse getUser(@PathVariable(\\"name\\") String name) {\\n        return new UserResponse(name, 25);\\n    }\\n    /**\\n     * \u54cd\u5e94\u5b9e\u4f53\u793a\u4f8b\\n     */\\n    @ApiModel\\n    @Data\\n    @AllArgsConstructor\\n    @NoArgsConstructor\\n    public static class UserResponse {\\n        @ApiModelProperty(value = \\"\u7528\u6237\u540d\\")\\n        private String name;\\n        @ApiModelProperty(value = \\"\u5e74\u9f84\\")\\n        private Integer age;\\n    }\\n}\\n```\\n\\n> \u6ce8\u610f\uff1a`ApiBoot Swagger`\u53ea\u662f\u9488\u5bf9`Swagger`\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u5b9e\u73b0\u4e86\u5feb\u901f\u96c6\u6210\uff0c\u5bf9\u5185\u90e8\u7684\u6ce8\u89e3\u4ee5\u53ca\u914d\u7f6e\u4e0d\u505a\u4fee\u6539\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u542f\u52a8\u672c\u7ae0\u9879\u76ee\u6e90\u7801\uff0c\u8bbf\u95ee\uff1a[http://localhost:8080/swagger-ui.html](http://localhost:8080/swagger-ui.html) \u67e5\u770b\u8fd0\u884c\u6548\u679c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](/img/post/apiboot-swagger-describe-the-interface-1.png)\\n\\n\u5f53\u6211\u4eec\u70b9\u51fb \\"\u7528\u6237\u63a7\u5236\u5668\\" \u65f6\u53ef\u4ee5\u5c55\u5f00\u8be5`Controller`\u5185\u5b9a\u4e49\u7684\u63a5\u53e3\u5217\u8868\uff0c\u6bcf\u4e00\u4e2a\u63a5\u53e3\u90fd\u63d0\u4f9b\u4e86 \\"Try it out\\"\uff08\u5728\u7ebf\u8c03\u8bd5\uff09\u529f\u80fd\u3002\\n\\n> \u672c\u7ae0\u5e76\u6ca1\u6709\u96c6\u6210`OAuth2`\uff0c\u5728\u6267\u884c\u5728\u7ebf\u8c03\u8bd5\u65f6\u5e76\u4e0d\u9700\u8981\u914d\u7f6e`AccessToken`\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot Swagger`\u7684\u5b9e\u73b0\u4e3b\u8981\u5f52\u529f\u4e8e`SpringBoot`\u81ea\u5b9a\u4e49`Starter`\uff0c\u6839\u636e\u914d\u7f6e\u53c2\u6570\u8fdb\u884c\u6761\u4ef6\u914d\u7f6e\u63a7\u5236\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\uff0c\u901a\u8fc7`@Import`\u6765\u5bfc\u5165`Swagger`\u6240\u9700\u8981\u7684\u914d\u7f6e\u7c7b\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-swagger-describe-the-interface`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-logging-use-global-log","metadata":{"permalink":"/blog/apiboot-logging-use-global-log","source":"@site/blog/logging/apiboot-logging-use-global-log.md","title":"ApiBoot\u65b0\u7279\u6027GlobalLogging\u8be6\u89e3","description":"\u5168\u5c40\u65e5\u5fd7\u662f\u4e00\u4e2a\u4ec0\u4e48\u6982\u5ff5\u5462\uff1f","date":"2019-12-17T10:12:47.000Z","formattedDate":"2019\u5e7412\u670817\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":9.55,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-logging-use-global-log","title":"ApiBoot\u65b0\u7279\u6027GlobalLogging\u8be6\u89e3","authors":"hengboy","tags":["Log"],"date":"2019-12-17T10:12:47.000Z"},"prevItem":{"title":"\u4f7f\u7528Swagger2\u4f5c\u4e3a\u6587\u6863\u6765\u63cf\u8ff0\u4f60\u7684\u63a5\u53e3\u4fe1\u606f","permalink":"/blog/apiboot-swagger-describe-the-interface"},"nextItem":{"title":"OAuth2\u4f7f\u7528Redis\u6765\u5b58\u50a8\u5ba2\u6237\u7aef\u4fe1\u606f\u4ee5\u53caAccessToken","permalink":"/blog/apiboot-oauth-use-redis-storage"}},"content":"## \u5168\u5c40\u65e5\u5fd7\u662f\u4e00\u4e2a\u4ec0\u4e48\u6982\u5ff5\u5462\uff1f\\n\\n\u5176\u5b9e\u7406\u89e3\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u7c7b\u4f3c\u4e8e\u6211\u4eec\u5e73\u65f6\u4e00\u76f4\u5728\u4f7f\u7528\u7684`logback`\u3001`log4j`\u8fd9\u79cd\u7684\u65e5\u5fd7\u6846\u67b6\u7684\u5176\u4e2d\u4e00\u4e2a\u529f\u80fd\u90e8\u5206\uff0c`minbox-logging`\u5206\u5e03\u5f0f\u65e5\u5fd7\u6846\u67b6\u76ee\u524d\u72ec\u7acb\u4e8e`api-boot-plugins`\uff0c\u5df2\u7ecf\u52a0\u5165\u4e86`minbox-projects`\u5f00\u6e90\u7ec4\u7ec7\uff0c\u4e4b\u524d\u535a\u5ba2\u6709\u4e00\u7cfb\u5217\u7684\u6587\u7ae0\u6765\u8bb2\u89e3\u4e86`ApiBoot Logging`\uff08\u5185\u90e8\u662f\u96c6\u6210\u7684`minbox-logging`\uff09\u65e5\u5fd7\u7ec4\u4ef6\u7684\u4f7f\u7528\u4ee5\u53ca\u6781\u7b80\u7684\u914d\u7f6e\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8bbf\u95ee[ApiBoot \u7ec4\u4ef6\u7cfb\u5217\u6587\u7ae0\u4f7f\u7528\u6c47\u603b](https://blog.yuqiyu.com/apiboot-all-articles.html)\u4e86\u89e3\u65e5\u5fd7\u7ec4\u4ef6\u7684\u4f7f\u7528\u8be6\u60c5\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n<hr/>\\n\\n\\n## \u4ec0\u4e48\u662f\u5168\u5c40\u65e5\u5fd7\uff1f\\n\\n\u5728\u4e4b\u524d`ApiBoot Logging`\u5206\u5e03\u5f0f\u65e5\u5fd7\u7ec4\u4ef6\u53ef\u4ee5\u5b9e\u73b0`\u65e5\u5fd7\u91c7\u96c6`\u3001`\u65e5\u5fd7\u4e0a\u62a5`\u3001`\u65e5\u5fd7\u7edf\u4e00\u5b58\u50a8`\u3001`\u96c6\u6210Spring Security`\u3001`\u96c6\u6210Openfeign`\u7b49\u529f\u80fd\uff0c\u968f\u7740`ApiBoot Logging 2.2.1.RELEASE`\u7248\u672c\u7684\u53d1\u5e03\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\uff0c\u90a3\u5c31\u662f`GlobalLog`\u3002\\n\\n\u7528\u8fc7`ApiBoot Logging`\u65e5\u5fd7\u7ec4\u4ef6\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u6709\u4e86\u89e3\uff0c\u5b83\u53ea\u4f1a\u8bb0\u5f55\u6bcf\u4e00\u6b21\u53d1\u9001`\u8bf7\u6c42`\u76f8\u5173\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u5982\uff1a\u8bf7\u6c42\u53c2\u6570\u3001\u8bf7\u6c42\u5730\u5740\u3001\u8bf7\u6c42\u5934\u4fe1\u606f\u3001\u54cd\u5e94\u5185\u5bb9\u7b49\uff0c\u5e76\u6ca1\u6709\u63d0\u4f9b\u4e1a\u52a1\u4ee3\u7801\u4e2d\u7684`debug`\u3001`info`\u3001`error`\u7b49\u7ea7\u65e5\u5fd7\u7684\u91c7\u96c6\u65b9\u5f0f\uff0c\u5c31\u4e0d\u8981\u63d0\u4e0a\u62a5\u8fd9\u79cd\u65e5\u5fd7\u5230`Logging Admin`\u4e86\u3002\\n\\n\u65b0\u7248\u672c\u7684\u53d1\u5e03\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u6625\u5929\uff0c`ApiBoot Logging`\u4e3a\u4e86\u65b9\u4fbf\u4ee3\u7801\u7684\u8c03\u8bd5\uff0c\u6267\u884c\u65f6\u4e1a\u52a1\u6570\u636e\u7684\u76d1\u63a7\uff0c\u652f\u6301\u4e86\u91c7\u96c6\u4e1a\u52a1\u4ee3\u7801\u5185\u7684\u4e0d\u540c\u7b49\u7ea7\u7684\u65e5\u5fd7\uff0c\u800c\u4e14\u8fd8\u652f\u6301\u91c7\u96c6`Exception`\u7684\u5806\u6808\u4fe1\u606f\uff0c\u65b9\u4fbf\u5b9a\u4f4d\u9519\u8bef\uff0c\u53ca\u65f6\u7ea0\u6b63\u3002\\n\\n## \u4e86\u89e3GlobalLogging\u63a5\u53e3\\n\\n\u4e3a\u4e86\u652f\u6301`\u4e1a\u52a1\u5168\u5c40\u65e5\u5fd7`\uff0c\u65b0\u7248\u672c\u4e2d\u5f15\u5165\u4e86`GlobalLogging`\u63a5\u53e3\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u63a5\u53e3\u7684\u6e90\u7801\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n\\n/**\\n * Global log collection interface\\n * Provide debug, info, and error log collection\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\npublic interface GlobalLogging {\\n    /**\\n     * Collect Debug Level Logs\\n     *\\n     * @param msg log content\\n     */\\n    void debug(String msg);\\n\\n    /**\\n     * Collect Debug Level Logs\\n     *\\n     * @param format    Unformatted log content\\n     * @param arguments List of parameters corresponding to log content\\n     */\\n    void debug(String format, Object... arguments);\\n\\n    /**\\n     * Collect Info Level Logs\\n     *\\n     * @param msg log content\\n     */\\n    void info(String msg);\\n\\n    /**\\n     * Collect Info Level Logs\\n     *\\n     * @param format    Unformatted log content\\n     * @param arguments List of parameters corresponding to log content\\n     */\\n    void info(String format, Object... arguments);\\n\\n    /**\\n     * Collect Error Level Logs\\n     *\\n     * @param msg log content\\n     */\\n    void error(String msg);\\n\\n    /**\\n     * Collect Error Level Logs\\n     *\\n     * @param msg       log content\\n     * @param throwable Exception object instance\\n     */\\n    void error(String msg, Throwable throwable);\\n\\n    /**\\n     * Collect Error Level Logs\\n     *\\n     * @param format    Unformatted log content\\n     * @param arguments List of parameters corresponding to log content\\n     */\\n    void error(String format, Object... arguments);\\n}\\n```\\n\\n\u5728`GlobalLogging`\u63a5\u53e3\u5185\u63d0\u4f9b\u4e86\u4e09\u79cd\u7c7b\u578b\u7684\u65e5\u5fd7\u91c7\u96c6\u65b9\u6cd5\uff0c\u5206\u522b\u662f\uff1a`debug`\u3001`info`\u3001`error`\uff0c\u8fd9\u4e2a\u7248\u672c\u53ea\u662f\u5bf9\u65e5\u5fd7\u7684\u7b49\u7ea7\u8fdb\u884c\u4e86\u5212\u5206\uff0c\u5e76\u6ca1\u6709\u6dfb\u52a0\u9650\u5236\u6216\u8005\u8fc7\u6ee4\u673a\u5236\u3002\\n\\n`GlobalLogging`\u5f53\u524d\u7248\u672c\u6709\u4e00\u4e2a\u5b9e\u73b0\u7c7b`org.minbox.framework.logging.client.global.support.GlobalLoggingMemoryStorage`\uff0c\u8be5\u7c7b\u5b9e\u73b0\u4e86`GlobalLogging`\u5185\u7684\u5168\u90e8\u65b9\u6cd5\uff0c\u5e76\u5c06\u91c7\u96c6\u5230\u7684\u65e5\u5fd7\u4fdd\u5b58\u5230\u4e86`GlobalLoggingThreadLocal`\uff0c\u65b9\u4fbf\u7edf\u4e00\u4e0a\u62a5\u5230`Logging Admin`\u3002\\n\\n\u4e3a\u4e86\u65b9\u4fbf\u540e\u671f\u4fee\u6539`Global Log`\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c`ApiBoot Logging`\u63d0\u4f9b\u4e86\u4e00\u4e2a\u914d\u7f6e\u53c2\u6570`api.boot.logging.global-logging-storage-away`\uff0c\u8be5\u914d\u7f6e\u7684\u9ed8\u8ba4\u503c\u4e3a`memory`\uff0c\u5bf9\u5e94`GlobalLoggingMemoryStorage`\u5b9e\u73b0\u7c7b\u3002\\n\\n## GlobalLogging\u81ea\u52a8\u5316\u914d\u7f6e\\n\\n`ApiBoot Logging`\u6839\u636e`api.boot.logging.global-logging-storage-away`\u914d\u7f6e\u53c2\u6570\uff0c\u6761\u4ef6\u5224\u65ad\u81ea\u52a8\u5316\u914d\u7f6e\u4e86`GlobalLogging`\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\npackage org.minbox.framework.api.boot.autoconfigure.logging;\\nimport ...\\n/**\\n * the \\"minbox-logging\\" global log storage configuration\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@Configuration\\n@ConditionalOnClass(GlobalLogging.class)\\npublic class ApiBootLoggingGlobalLogStorageAutoConfiguration {\\n    /**\\n     * Instance global log memory mode storage\\n     *\\n     * @return {@link GlobalLoggingMemoryStorage}\\n     */\\n    @Bean\\n    @ConditionalOnProperty(prefix = API_BOOT_LOGGING_PREFIX,\\n        name = \\"global-logging-storage-away\\", havingValue = \\"memory\\", matchIfMissing = true)\\n    public GlobalLogging globalLogging() {\\n        return new GlobalLoggingMemoryStorage();\\n    }\\n}\\n```\\n\\n\u6839\u636e`globalLogging()`\u65b9\u6cd5\u4e0a\u7684\u6761\u4ef6\u6ce8\u5165\u6ce8\u89e3`@ConditionalOnProperty`\u914d\u7f6e\u5185\u5bb9\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u5f53\u6211\u4eec\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0`api.boot.logging.global-logging-storage-away=memory`\u65f6\u6216\u8005`\u7f3a\u5c11\u8be5\u914d\u7f6e`\u65f6\uff0c\u8be5\u65b9\u6cd5\u4f1a\u88ab\u8c03\u7528\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a`GlobalLoggingMemoryStorage`\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u5e76\u5c06\u8be5\u5b9e\u4f8b\u5bf9\u8c61\u5199\u5165\u5230`IOC`\u5bb9\u5668\u5185\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u4f7f\u7528`GlobalLogging`\u5b9e\u4f8b\u65f6\uff0c\u53ea\u9700\u8981\u6ce8\u5165\u5c31\u53ef\u4ee5\u4e86\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n  * {@link GlobalLogging}\\n  *\\n  * @see org.minbox.framework.logging.client.global.AbstractGlobalLogging\\n  * @see org.minbox.framework.logging.client.global.support.GlobalLoggingMemoryStorage\\n  */\\n@Autowired\\nprivate GlobalLogging logging;\\n```\\n\\n## \u4f7f\u7528GlobalLogging\\n\\n\u91c7\u96c6\u7684\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6ce8\u5165`GlobalLogging`\u5bf9\u8c61\uff0c\u4f7f\u7528\u8be5\u63a5\u53e3\u63d0\u4f9b\u7684\u65b9\u6cd5\u5373\u53ef\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u6d4b\u8bd5\u7528\u6237\u63a7\u5236\u5668\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/user\\")\\npublic class UserController {\\n    /**\\n     * {@link GlobalLogging}\\n     *\\n     * @see org.minbox.framework.logging.client.global.AbstractGlobalLogging\\n     * @see org.minbox.framework.logging.client.global.support.GlobalLoggingMemoryStorage\\n     */\\n    @Autowired\\n    private GlobalLogging logging;\\n\\n    /**\\n     * \u6d4b\u8bd5\u83b7\u53d6\u7528\u6237\u540d\\n     *\\n     * @return\\n     */\\n    @GetMapping(value = \\"/name\\")\\n    public String getUserName() {\\n        logging.debug(\\"\u8fd9\u662f\u4e00\u6761debug\u7ea7\u522b\u7684\u65e5\u5fd7\\");\\n        logging.info(\\"\u8fd9\u662f\u4e00\u6761info\u7ea7\u522b\u7684\u65e5\u5fd7\\");\\n        return \\"\u7528\u6237\u540d\uff1a\u6052\u5b87\u5c11\u5e74\\";\\n    }\\n}\\n```\\n\\n\u5f53\u6211\u4eec\u8c03\u7528`GlobalLogging`\u63d0\u4f9b\u7684\u4e0d\u540c\u65e5\u5fd7\u7b49\u7ea7\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u65e5\u5fd7\u76f8\u5173\u4fe1\u606f\u5199\u5165\u5230`GlobalLoggingThreadLocal`\u7684\u96c6\u5408\u5185\uff0c\u7b49\u5230\u4e0a\u62a5\u8bf7\u6c42\u65e5\u5fd7\u65f6\u4e00\u5e76\u63d0\u4ea4\u7ed9`Logging Admin`\uff0c\u7531`Logging Admin`\u8fdb\u884c\u4fdd\u5b58\u3002\\n\\n## GlobalLogging\u8868\u7ed3\u6784\\n\\n`GlobalLogging`\u76f8\u5173\u7684\u5168\u5c40\u65e5\u5fd7\u91c7\u96c6\u5230`Logging Admin`\u9700\u8981\u8fdb\u884c\u4fdd\u5b58\uff0c\u6240\u6709\u5bf9\u5e94\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a`logging_global_logs`\u4fe1\u606f\u8868\uff0c\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```sql\\nCREATE TABLE `logging_global_logs` (\\n  `lgl_id` varchar(36) COLLATE utf8mb4_general_ci NOT NULL COMMENT \'\u65e5\u5fd7\u4e3b\u952e\',\\n  `lgl_request_log_id` varchar(36) COLLATE utf8mb4_general_ci NOT NULL COMMENT \'\u8bf7\u6c42\u65e5\u5fd7\u7f16\u53f7\uff0c\u5173\u8054logging_request_logs\u4e3b\u952e\',\\n  `lgl_level` varchar(20) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u65e5\u5fd7\u7b49\u7ea7\',\\n  `lgl_content` mediumtext COLLATE utf8mb4_general_ci COMMENT \'\u65e5\u5fd7\u5185\u5bb9\',\\n  `lgl_caller_class` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u65e5\u5fd7\u8f93\u51fa\u7684\u7c7b\u540d\',\\n  `lgl_caller_method` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u65e5\u5fd7\u8f93\u51fa\u7684\u65b9\u6cd5\u540d\u79f0\',\\n  `lgl_caller_code_line_number` int(11) DEFAULT NULL COMMENT \'\u65e5\u5fd7\u8f93\u51fa\u7684\u4ee3\u7801\u884c\u53f7\',\\n  `lgl_exception_stack` mediumtext COLLATE utf8mb4_general_ci COMMENT \'error\u7b49\u7ea7\u7684\u65e5\u5fd7\u5f02\u5e38\u5806\u6808\u4fe1\u606f\',\\n  `lgl_create_time` mediumtext COLLATE utf8mb4_general_ci COMMENT \'\u65e5\u5fd7\u53d1\u751f\u65f6\u95f4\',\\n  PRIMARY KEY (`lgl_id`),\\n  KEY `logging_global_logs_logging_request_logs_lrl_id_fk` (`lgl_request_log_id`),\\n  CONSTRAINT `logging_global_logs_logging_request_logs_lrl_id_fk` FOREIGN KEY (`lgl_request_log_id`) REFERENCES `logging_request_logs` (`lrl_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT=\'\u5168\u5c40\u65e5\u5fd7\u4fe1\u606f\u8868\';\\n```\\n\\n\\n\\n## \u91c7\u96c6Exception\u5806\u6808\u4fe1\u606f\\n\\n\u4f7f\u7528`GlobalLogging`\u53ef\u4ee5\u91c7\u96c6\u9047\u5230\u5f02\u5e38\u7684\u8be6\u7ec6\u5806\u6808\u4fe1\u606f\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u76f4\u63a5\u5b9a\u4f4d\u5230\u95ee\u9898\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5728\u7b2c\u4e00\u65f6\u95f4\u89e3\u51b3\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u5177\u4f53\u4f7f\u7528\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\ntry {\\n  int a = 5 / 0;\\n} catch (Exception e) {\\n  logging.error(e.getMessage(), e);\\n}\\n```\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u6211\u4eec\u6765\u8fd0\u884c\u672c\u7ae0\u7684\u6e90\u7801\uff0c\u770b\u4e0b\u65e5\u5fd7\u91c7\u96c6\u7684\u6548\u679c\u3002\\n\\n### \u8f93\u51fa\u7684\u91c7\u96c6\u65e5\u5fd7\\n\\n```json\\n{\\n\\t\\"endTime\\":1576561372604,\\n\\t\\"globalLogs\\":[{\\n\\t\\t\\"callerClass\\":\\"org.minbox.chapter.user.service.UserController\\",\\n\\t\\t\\"callerCodeLineNumber\\":33,\\n\\t\\t\\"callerMethod\\":\\"getUserName\\",\\n\\t\\t\\"content\\":\\"\u8fd9\u662f\u4e00\u6761debug\u7ea7\u522b\u7684\u65e5\u5fd7\uff0c\u53d1\u751f\u65f6\u95f4\uff1a{}\\",\\n\\t\\t\\"createTime\\":1576561372585,\\n\\t\\t\\"level\\":\\"debug\\"\\n\\t},{\\n\\t\\t\\"callerClass\\":\\"org.minbox.chapter.user.service.UserController\\",\\n\\t\\t\\"callerCodeLineNumber\\":34,\\n\\t\\t\\"callerMethod\\":\\"getUserName\\",\\n\\t\\t\\"content\\":\\"\u8fd9\u662f\u4e00\u6761info\u7ea7\u522b\u7684\u65e5\u5fd7\uff0c\u53d1\u751f\u65f6\u95f4\uff1a1576561372586\\",\\n\\t\\t\\"createTime\\":1576561372586,\\n\\t\\t\\"level\\":\\"info\\"\\n\\t},{\\n\\t\\t\\"callerClass\\":\\"org.minbox.chapter.user.service.UserController\\",\\n\\t\\t\\"callerCodeLineNumber\\":43,\\n\\t\\t\\"callerMethod\\":\\"aa\\",\\n\\t\\t\\"content\\":\\"\u51fa\u73b0\u4e86\u5f02\u5e38.\\",\\n\\t\\t\\"createTime\\":1576561372586,\\n\\t\\t\\"exceptionStack\\":\\"java.lang.ArithmeticException: / by zero\\\\n\\\\tat org.minbox.chapter.user.service.UserController.aa(UserController.java:41)\\\\n\\\\tat org.minbox.chapter.user.service.UserController.getUserName(UserController.java:35)\\\\n\\\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\\\n\\\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\\\n\\\\t....\\",\\n\\t\\t\\"level\\":\\"error\\"\\n\\t}],\\n\\t\\"httpStatus\\":200,\\n\\t\\"requestBody\\":\\"\\",\\n\\t\\"requestHeaders\\":{\\n\\t\\t\\"accept\\":\\"*/*\\",\\n\\t\\t\\"host\\":\\"localhost:10000\\",\\n\\t\\t\\"user-agent\\":\\"curl/7.64.1\\"\\n\\t},\\n\\t\\"requestIp\\":\\"0:0:0:0:0:0:0:1\\",\\n\\t\\"requestMethod\\":\\"GET\\",\\n\\t\\"requestParam\\":\\"{}\\",\\n\\t\\"requestUri\\":\\"/user/name\\",\\n\\t\\"responseBody\\":\\"\u7528\u6237\u540d\uff1a\u6052\u5b87\u5c11\u5e74\\",\\n\\t\\"responseHeaders\\":{},\\n\\t\\"serviceId\\":\\"user-service\\",\\n\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\"servicePort\\":\\"10000\\",\\n\\t\\"spanId\\":\\"41a0c852-812b-4a2e-aa4a-228b87ce52f6\\",\\n\\t\\"startTime\\":1576561372577,\\n\\t\\"timeConsuming\\":27,\\n\\t\\"traceId\\":\\"42ca9f5a-5977-49cf-909d-a23614a47a6b\\"\\n}\\n```\\n\\n> \u4e0a\u9762\u662f\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u4e00\u4e2a\u8bf7\u6c42\u65e5\u5fd7\u7684\u8be6\u7ec6\u5185\u5bb9\uff0c\u5176\u4e2d`globalLogs`\u5b57\u6bb5\u5c31\u662f\u6211\u4eec\u91c7\u96c6\u7684\u5168\u5c40\u65e5\u5fd7\u5217\u8868\u3002\\n\\n### \u5b58\u50a8\u7684\u91c7\u96c6\u65e5\u5fd7\\n\\n\u6211\u4eec\u6765\u786e\u8ba4\u4e0b\u91c7\u96c6\u65e5\u5fd7\u4e0a\u62a5\u5230`Logging Admin`\u540e\u662f\u5426\u4fdd\u5b58\u5230\u4e86`logging_global_logs`\u65e5\u5fd7\u8868\u5185\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```sql\\nmysql> select * from logging_global_logs order by lgl_create_time asc\\\\G;\\n*************************** 1. row ***************************\\n                     lgl_id: 112e36ff-e781-4f11-8f21-2196823cde38\\n         lgl_request_log_id: f91382e2-2d79-499e-b1df-4757c1ffdbc5\\n                  lgl_level: info\\n                lgl_content: \u8fd9\u662f\u4e00\u6761info\u7ea7\u522b\u7684\u65e5\u5fd7\uff0c\u53d1\u751f\u65f6\u95f4\uff1a1576561856333\\n           lgl_caller_class: org.minbox.chapter.user.service.UserController\\n          lgl_caller_method: getUserName\\nlgl_caller_code_line_number: 34\\n        lgl_exception_stack: NULL\\n            lgl_create_time: 1576561856333\\n*************************** 2. row ***************************\\n                     lgl_id: f1d172a6-5cce-4df0-bc29-fe27ac441089\\n         lgl_request_log_id: f91382e2-2d79-499e-b1df-4757c1ffdbc5\\n                  lgl_level: debug\\n                lgl_content: \u8fd9\u662f\u4e00\u6761debug\u7ea7\u522b\u7684\u65e5\u5fd7\uff0c\u53d1\u751f\u65f6\u95f4\uff1a{}\\n           lgl_caller_class: org.minbox.chapter.user.service.UserController\\n          lgl_caller_method: getUserName\\nlgl_caller_code_line_number: 33\\n        lgl_exception_stack: NULL\\n            lgl_create_time: 1576561856333\\n*************************** 3. row ***************************\\n                     lgl_id: d95d850d-3bc9-4689-928a-32c6089ff7a2\\n         lgl_request_log_id: f91382e2-2d79-499e-b1df-4757c1ffdbc5\\n                  lgl_level: error\\n                lgl_content: \u51fa\u73b0\u4e86\u5f02\u5e38.\\n           lgl_caller_class: org.minbox.chapter.user.service.UserController\\n          lgl_caller_method: getUserName\\nlgl_caller_code_line_number: 38\\n        lgl_exception_stack: java.lang.ArithmeticException: / by zero\\n        at org.minbox.chapter.user.service.UserController.getUserName(UserController.java:36)\\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\t\\t\\t\\t\\t\\t...\\n            lgl_create_time: 1576561856334\\n3 rows in set (0.01 sec)\\n\\n```\\n\\n> \u8fd9\u91cc\u5f02\u5e38\u7684\u5806\u6808\u4fe1\u606f\u6bd4\u8f83\u591a\uff0c\u505a\u51fa\u4e86\u7701\u7565\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n\u672c\u7ae0\u628a`GlobalLog`\u5168\u5c40\u65e5\u5fd7\u7684\u6982\u5ff5\u8fdb\u884c\u4e86\u8be6\u7ec6\u7684\u63cf\u8ff0\uff0c\u5efa\u8bae\u5c06\u4e00\u4e9b\u91cd\u8981\u903b\u8f91\u5224\u65ad\u6027\u8d28\u7684`GlobalLog`\u8fdb\u884c\u91c7\u96c6\u4e0a\u62a5\uff0c\u9632\u6b62`logging_global_logs`\u8868\u5185\u7684\u6570\u636e\u91cf\u8fc7\u5927\u3002\\n\\n> \u8be6\u7ec6\u7684\u4f7f\u7528\u65b9\u5f0f\u8bf7\u53c2\u8003\u672c\u7ae0\u7684\u6e90\u7801\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-logging-use-global-log`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-oauth-use-redis-storage","metadata":{"permalink":"/blog/apiboot-oauth-use-redis-storage","source":"@site/blog/security/apiboot-oauth-use-redis-storage.md","title":"OAuth2\u4f7f\u7528Redis\u6765\u5b58\u50a8\u5ba2\u6237\u7aef\u4fe1\u606f\u4ee5\u53caAccessToken","description":"\u4f7f\u7528Redis\u6765\u5b58\u50a8OAuth2\u76f8\u5173\u7684\u5ba2\u6237\u7aef\u4fe1\u606f\u4ee5\u53ca\u751f\u6210\u7684AccessToken\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0cRedis\u4e0e\u751f\u4ff1\u6765\u7684\u7684\u9ad8\u6548\u7387\u3001\u96c6\u7fa4\u90e8\u7f72\u662f\u6bd4\u8f83\u51fa\u8272\u7684\u529f\u80fd\uff0c\u5982\u679c\u7528\u6765\u4f5c\u4e3a\u670d\u52a1\u8ba4\u8bc1\u4e2d\u5fc3\u7684\u6570\u636e\u5b58\u50a8\uff0c\u53ef\u4ee5\u5927\u5927\u7684\u63d0\u9ad8\u54cd\u5e94\u6548\u7387\u3002","date":"2019-12-11T14:48:54.000Z","formattedDate":"2019\u5e7412\u670811\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":6.975,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-oauth-use-redis-storage","title":"OAuth2\u4f7f\u7528Redis\u6765\u5b58\u50a8\u5ba2\u6237\u7aef\u4fe1\u606f\u4ee5\u53caAccessToken","authors":"hengboy","tags":["Spring","Spring Security","OAuth2"],"date":"2019-12-11T14:48:54.000Z"},"prevItem":{"title":"ApiBoot\u65b0\u7279\u6027GlobalLogging\u8be6\u89e3","permalink":"/blog/apiboot-logging-use-global-log"},"nextItem":{"title":"OAuth2\u8bbe\u7f6eAccessToken\u7684\u8fc7\u671f\u65f6\u95f4","permalink":"/blog/apiboot-oauth-set-token-expire-time"}},"content":"\u4f7f\u7528`Redis`\u6765\u5b58\u50a8`OAuth2`\u76f8\u5173\u7684\u5ba2\u6237\u7aef\u4fe1\u606f\u4ee5\u53ca\u751f\u6210\u7684`AccessToken`\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c`Redis`\u4e0e\u751f\u4ff1\u6765\u7684\u7684\u9ad8\u6548\u7387\u3001\u96c6\u7fa4\u90e8\u7f72\u662f\u6bd4\u8f83\u51fa\u8272\u7684\u529f\u80fd\uff0c\u5982\u679c\u7528\u6765\u4f5c\u4e3a`\u670d\u52a1\u8ba4\u8bc1\u4e2d\u5fc3`\u7684\u6570\u636e\u5b58\u50a8\uff0c\u53ef\u4ee5\u5927\u5927\u7684\u63d0\u9ad8\u54cd\u5e94\u6548\u7387\u3002\\n\\n`Redis`\u8fd8\u652f\u6301\u8d85\u65f6\u81ea\u52a8\u5220\u9664\u529f\u80fd\uff0c`OAuth2`\u6240\u751f\u6210\u7684`AccessToken`\u76f8\u5173\u7684\u6570\u636e\u5728\u8d85\u8fc7\u914d\u7f6e\u7684`\u6709\u6548\u65f6\u95f4`\u540e\u5c31\u4f1a\u81ea\u52a8\u88ab\u6e05\u9664\uff0c\u8fd9\u6837\u4e5f\u9690\u5f62\u7684\u63d0\u9ad8\u4e86\u63a5\u53e3\u7684\u5b89\u5168\u6027\u3002\\n\\n\u65e2\u7136`Redis`\u53ef\u4ee5\u505a\u5230\u8fd9\u4e48\u597d\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u5b9e\u73b0\u4ee3\u7801\u903b\u8f91\u5462\uff1f\\n\x3c!--truncate--\x3e\\n\\n`ApiBoot OAuth2`\u662f\u652f\u6301\u4f7f\u7528`Redis`\u6765\u5b58\u50a8`AccessToken`\u7684\uff0c\u53ea\u9700\u8981\u4fee\u6539`application.yml`\u4e00\u4e2a\u914d\u7f6e\u5c31\u53ef\u4ee5\u5b9e\u73b0\uff0c\u76f8\u5173\u7684\u4f7f\u7528\u4e5f\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u6587\u6863\u4e86\u89e3\u3002\\n\\n- [ApiBoot OAuth \u5b98\u65b9\u6587\u6863](https://apiboot.minbox.org/docs/components/api-boot-oauth.html)\\n\\n## \u521b\u5efa\u9879\u76ee\\n\\n\u6211\u4eec\u4f7f\u7528`IDEA`\u5f00\u53d1\u5de5\u5177\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\uff0c\u5728\u9879\u76ee\u7684`pom.xml`\u6dfb\u52a0\u6211\u4eec\u9700\u8981\u7684`ApiBoot`\u7684`\u7edf\u4e00\u7248\u672c`\u4f9d\u8d56\u4ee5\u53ca`\u5b89\u5168\u7ec4\u4ef6`\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n  </dependency>\\n</dependencies>\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.0.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n## \u6dfb\u52a0Redis\u652f\u6301\\n\\n\u65e2\u7136\u6211\u4eec\u672c\u7ae0\u9700\u8981\u7528\u5230`Redis`\uff0c\u6211\u4eec\u9700\u8981\u5728\u9879\u76ee\u5185\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\uff0c`SpringBoot`\u5df2\u7ecf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5c01\u88c5\u597d\u7684\u4f9d\u8d56\uff0c\u5728`pom.xml`\u6587\u4ef6\u5185`dependencies`\u8282\u70b9\u4e0b\u6dfb\u52a0\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependency>\\n  <groupId>org.springframework.boot</groupId>\\n  <artifactId>spring-boot-starter-data-redis</artifactId>\\n</dependency>\\n```\\n\\n### \u914d\u7f6eRedis\u8fde\u63a5\u4fe1\u606f\\n\\n`SpringBoot`\u5bf9`Redis`\u7684\u8fde\u63a5\u3001\u6570\u636e\u64cd\u4f5c\u90fd\u505a\u4e86\u5c01\u88c5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u54cd\u5e94\u7684`Redis`\u8fde\u63a5\u4fe1\u606f\u5373\u53ef\u3002\\n\\n`spring-boot-starter-data-redis`\u4f9d\u8d56\u6240\u9700\u8981\u7684\u914d\u7f6e\u90fd\u662f\u7531`RedisProperties`\u7c7b\u63d0\u4f9b\uff0c\u8be5\u7c7b\u5185\u6709\u90e8\u5206\u914d\u7f6e\u5b57\u6bb5\u5b58\u5728\u9ed8\u8ba4\u503c\uff0c\u90e8\u5206\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n@ConfigurationProperties(prefix = \\"spring.redis\\")\\npublic class RedisProperties {\\n\\n\\t/**\\n\\t * Database index used by the connection factory.\\n\\t */\\n\\tprivate int database = 0;\\n\\n\\t/**\\n\\t * Connection URL. Overrides host, port, and password. User is ignored. Example:\\n\\t * redis://user:password@example.com:6379\\n\\t */\\n\\tprivate String url;\\n\\n\\t/**\\n\\t * Redis server host.\\n\\t */\\n\\tprivate String host = \\"localhost\\";\\n\\n\\t/**\\n\\t * Login password of the redis server.\\n\\t */\\n\\tprivate String password;\\n\\n\\t/**\\n\\t * Redis server port.\\n\\t */\\n\\tprivate int port = 6379;\\n  //...\\n}\\t\\n```\\n\\n\u9ed8\u8ba4\u914d\u7f6e\u4e0b\u8fde\u63a5`Redis`\u53ea\u9700\u8981\u5728`application.yml`\u914d\u7f6e`spring.redis.password`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\nspring:\\n  # \u914d\u7f6eRedis\u8fde\u63a5\u4fe1\u606f\\n  redis:\\n    password: 123123\\n```\\n\\n> `password`\u662f\u8fde\u63a5`Redis`\u6240\u9700\u8981\u7684\u5bc6\u7801\uff0c\u5728`redis.conf`\u6587\u4ef6\u5185\u914d\u7f6e\u3002\\n\\n\u76f8\u5173\u914d\u7f6e\u89e3\u91ca\uff1a\\n\\n- `spring.redis.database`\uff1a\u5982\u679c\u4f60\u4f7f\u7528\u7684`Redis DataBase`\u5e76\u4e0d\u662f\u9ed8\u8ba4\u7684`0`\u7d22\u5f15\uff0c\u9700\u8981\u4fee\u6539\u8be5\u914d\u7f6e\\n- `spring.redis.host`\uff1a\u9ed8\u8ba4\u4e3a`localhost`\uff0c\u5982\u679c\u4e0d\u662f\u672c\u5730\u4f7f\u7528\uff0c\u9700\u8981\u4fee\u6539\u8be5\u914d\u7f6e\\n- `spring.redis.url`\uff1a\u8fd9\u662f\u4e00\u4e2a\u8fde\u63a5\u5b57\u7b26\u4e32\uff0c\u5982\u5929\u914d\u7f6e\u4e86\u4f1a\u81ea\u52a8\u8986\u76d6`database`\u3001`host`\u3001`port`\u7b49\u4e09\u4e2a\u914d\u7f6e\u4fe1\u606f\\n- `spring.redis.port`\uff1a\u9ed8\u8ba4\u4e3a`Redis`\u7684\u7aef\u53e3\u53f7`6379`\uff0c\u5982\u5df2\u4fee\u6539`Redis`\u7684\u76d1\u542c\u7aef\u53e3\u53f7\uff0c\u9700\u8981\u4fee\u6539\u8be5\u914d\u7f6e\\n\\n## \u542f\u7528ApiBoot OAuth Redis\\n\\n`ApiBoot OAuth`\u63d0\u4f9b\u4e86`redis`\u914d\u7f6e\u9009\u9879\uff0c\u5728`application.yml`\u6587\u4ef6\u5185\u901a\u8fc7`api.boot.oauth.away`\u914d\u7f6e\u53c2\u6570\u6307\u5b9a\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    security:\\n      # \u914d\u7f6e\u5185\u5b58\u5b89\u5168\u7528\u6237\u5217\u8868\\n      users:\\n        - username: yuqiyu\\n          password: 123123\\n    oauth:\\n      # \u914d\u7f6e\u4f7f\u7528Redis\u5b58\u50a8OAuth2\u76f8\u5173\u6570\u636e\\n      away: redis\\n      # \u914d\u7f6e\u5ba2\u6237\u7aef\u5217\u8868\\n      clients:\\n        - clientId: minbox\\n          clientSecret: chapter\\n```\\n\\n\u4e3a\u4e86\u65b9\u4fbf\u6f14\u793a\uff0c\u6211\u4eec\u4f7f\u7528`ApiBoot Security`\u7684\u5185\u5b58\u65b9\u5f0f\u914d\u7f6e\u4e86\u4e00\u4e2a\u7528\u6237`yuqiyu`\uff0c\u800c\u4e14\u8fd8\u4fee\u6539\u4e86\u9ed8\u8ba4`client`\u4fe1\u606f\uff0c\u65b0\u52a0\u4e86`minbox`\u5ba2\u6237\u7aef\u3002\\n\\n\u5982\u679c\u5bf9`ApiBoot Security`\u7528\u6237\u914d\u7f6e\u6216\u8005`ApiBoot OAuth`\u7684\u5ba2\u6237\u7aef\u914d\u7f6e\u4e0d\u4e86\u89e3\uff0c\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a\\n\\n- [ApiBoot Security](https://apiboot.minbox.org/docs/components/api-boot-security.html)\\n- [ApiBoot OAuth](https://apiboot.minbox.org/docs/components/api-boot-oauth.html)\\n\\n\u6216\u8005\u4f60\u53ef\u4ee5\u67e5\u770b\u6211\u7f16\u5199\u7684`ApiBoot`\u7cfb\u5217\u7684\u6587\u7ae0\uff1a[ApiBoot\u5f00\u6e90\u6846\u67b6\u5404\u4e2a\u7ec4\u4ef6\u7684\u7cfb\u5217\u4f7f\u7528\u6587\u7ae0\u6c47\u603b](https://blog.yuqiyu.com/apiboot-all-articles.html)\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u5728\u8fd0\u884c\u6d4b\u8bd5\u4e4b\u524d\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a`ApiController`\u7684\u63a7\u5236\u5668\u7528\u6765\u6d4b\u8bd5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u6d4b\u8bd5Api\u63a7\u5236\u5668\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/api\\")\\npublic class ApiController {\\n    /**\\n     * \u6d4b\u8bd5\u8bf7\u6c42\uff0c\u9700\u643a\u5e26\u4ee4\u724c\u8bbf\u95ee\\n     *\\n     * @return\\n     */\\n    @GetMapping(value = \\"/index\\")\\n    public String index() {\\n        return \\"this is index\\";\\n    }\\n}\\n```\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u67e5\u770bRedis\u5b58\u50a8\u7684AccessToken\\n\\n\u9884\u8ba1\u6548\u679c\u662f\u5f53\u6211\u4eec\u53d1\u9001\u83b7\u53d6`AccessToken`\u7684\u8bf7\u6c42\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u751f\u6210\u7684`AccessToken`\u5b58\u50a8\u5230`Redis`\u3002\\n\\n\u4e0b\u9762\u6211\u4eec\u4f7f\u7528`CURL`\u547d\u4ee4\u6765\u5c1d\u8bd5\u83b7\u53d6\u4e0b`AccessToken`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\n\u279c ~ curl minbox:chapter@localhost:9090/oauth/token -d \'grant_type=password&username=yuqiyu&password=123123\'\\n{\\"access_token\\":\\"38a7ee20-2fad-43c5-a349-31e6f0ee0f29\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"f469b1e8-f63c-4be9-8564-2603f8458024\\",\\"expires_in\\":7199,\\"scope\\":\\"api\\"}\\n```\\n\\n\u4e0b\u9762\u6211\u4eec\u4f7f\u7528`redis-cli`\u6765\u770b\u4e0b\u662f\u5426\u5df2\u7ecf\u5c06`AccessToken`\u5b58\u50a8\u5230`Redis`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```bash\\n\u279c ~ redis-cli \\n127.0.0.1:6379> auth 123123\\nOK\\n127.0.0.1:6379> keys *\\n 1) \\"uname_to_access:minbox:yuqiyu\\"\\n 2) \\"refresh_to_access:f469b1e8-f63c-4be9-8564-2603f8458024\\"\\n 3) \\"access_to_refresh:1ea8e5cd-ea63-4a73-969f-9e7767f25f30\\"\\n 4) \\"auth:38a7ee20-2fad-43c5-a349-31e6f0ee0f29\\"\\n 5) \\"refresh_auth:6898bef4-f4a7-4fa9-858b-a4c62a1567d8\\"\\n 6) \\"refresh:6898bef4-f4a7-4fa9-858b-a4c62a1567d8\\"\\n 7) \\"refresh_auth:f469b1e8-f63c-4be9-8564-2603f8458024\\"\\n 8) \\"access:38a7ee20-2fad-43c5-a349-31e6f0ee0f29\\"\\n 9) \\"refresh_to_access:6898bef4-f4a7-4fa9-858b-a4c62a1567d8\\"\\n1)  \\"auth_to_access:f02ceb5faa4577222082842b82a57067\\"\\n2)  \\"refresh:f469b1e8-f63c-4be9-8564-2603f8458024\\"\\n3)  \\"access_to_refresh:38a7ee20-2fad-43c5-a349-31e6f0ee0f29\\"\\n4)  \\"client_id_to_access:minbox\\"\\n```\\n\\n\u7ed3\u679c\u5f80\u5f80\u8ba9\u4eba\u611f\u89c9\u60ca\u559c\uff0c\u770b\u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u7684\u628a`OAuth2`\u751f\u6210\u7684`AccessToken`\u5b58\u50a8\u5230\u4e86`Redis`\uff0c\u5982\u679c`AccessToken`\u5bf9\u5e94\u7684\u6570\u636e\u8d85\u8fc7\u4e86`expires_in`\u65f6\u95f4\uff0c\u5c31\u4f1a\u81ea\u52a8\u88ab\u6e05\u9664\u3002\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u643a\u5e26AccessToken\u8bbf\u95ee\u63a5\u53e3\\n\\n\u6211\u4eec\u53ef\u4ee5\u62ff\u7740\u751f\u6210\u7684`AccessToken`\u6765\u8bbf\u95ee\u5728\u4e0a\u9762\u6dfb\u52a0\u7684\u6d4b\u8bd5`ApiController`\u5185\u7684\u63a5\u53e3\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```bash\\n\u279c ~ curl -H \'Authorization: Bearer 38a7ee20-2fad-43c5-a349-31e6f0ee0f29\' http://localhost:9090/api/index\\nthis is index\\n```\\n\\n\u6211\u4eec\u53ef\u4ee5\u62ff\u5230\u63a5\u53e3\u7684\u8fd4\u56de\u7684\u63a5\u53e3\uff0c\u8fd9\u4e5f\u8bc1\u660e\u4e86\u4e00\u70b9\uff0c`AccessToken`\u7684\u9a8c\u8bc1\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c`OAuth2`\u62ff\u7740\u8bf7\u6c42\u643a\u5e26\u7684`AccessToken`\u53bb`Redis`\u9a8c\u8bc1\u901a\u8fc7\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot OAuth`\u6240\u652f\u6301\u7684`3\u79cd`\u5b58\u50a8\u65b9\u5f0f\u90fd\u5df2\u7ecf\u901a\u8fc7\u6587\u7ae0\u7684\u65b9\u5f0f\u544a\u77e5\u5927\u5bb6\uff0c\u6bcf\u4e00\u79cd\u65b9\u5f0f\u90fd\u505a\u5230\u4e86\u7cbe\u7b80\uff0c\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\uff0c\u5c31\u80fd\u591f\u5b9e\u73b0\u5728\u4e4b\u524d\u8ba9\u5f88\u591a\u4eba\u5934\u75bc\u7684\u96c6\u6210\u3002\\n\\n> \u5982\u679c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6570\u636e\u91cf\u8f83\u5927\uff0c\u5efa\u8bae\u4f7f\u7528`Redis`\u96c6\u7fa4\u6765\u89e3\u51b3\u5b58\u50a8`AccessToken`\u7684\u95ee\u9898\u3002\\n\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-oauth-use-redis-storage`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-oauth-set-token-expire-time","metadata":{"permalink":"/blog/apiboot-oauth-set-token-expire-time","source":"@site/blog/security/apiboot-oauth-set-token-expire-time.md","title":"OAuth2\u8bbe\u7f6eAccessToken\u7684\u8fc7\u671f\u65f6\u95f4","description":"OAuth2\u6240\u751f\u6210\u7684AccessToken\u4ee5\u53caRefreshToken\u90fd\u5b58\u5728\u8fc7\u671f\u65f6\u95f4\uff0c\u5f53\u5728\u6709\u6548\u671f\u5185\u624d\u53ef\u4ee5\u62ff\u6765\u4f5c\u4e3a\u4f1a\u8bdd\u8eab\u4efd\u53d1\u8d77\u8bf7\u6c42\uff0c\u5426\u8005\u8ba4\u8bc1\u4e2d\u5fc3\u4f1a\u76f4\u63a5\u62e6\u622a\u65e0\u6548\u8bf7\u6c42\u63d0\u793a\u5df2\u8fc7\u671f\uff0c\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u4fee\u6539\u8fd9\u4e2a\u8fc7\u671f\u65f6\u95f4\u6765\u6ee1\u8db3\u6211\u4eec\u7684\u4e1a\u52a1\u573a\u666f\u5462\uff1f","date":"2019-12-11T09:45:07.000Z","formattedDate":"2019\u5e7412\u670811\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":5.09,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-oauth-set-token-expire-time","title":"OAuth2\u8bbe\u7f6eAccessToken\u7684\u8fc7\u671f\u65f6\u95f4","authors":"hengboy","tags":["Spring","Spring Security","OAuth2"],"date":"2019-12-11T09:45:07.000Z"},"prevItem":{"title":"OAuth2\u4f7f\u7528Redis\u6765\u5b58\u50a8\u5ba2\u6237\u7aef\u4fe1\u606f\u4ee5\u53caAccessToken","permalink":"/blog/apiboot-oauth-use-redis-storage"},"nextItem":{"title":"\u8fd8\u4e0d\u4f1a\u4f7f\u7528JWT\u683c\u5f0f\u5316OAuth2\u4ee4\u724c\u5417\uff1f","permalink":"/blog/apiboot-security-oauth-use-jwt"}},"content":"`OAuth2`\u6240\u751f\u6210\u7684`AccessToken`\u4ee5\u53ca`RefreshToken`\u90fd\u5b58\u5728\u8fc7\u671f\u65f6\u95f4\uff0c\u5f53\u5728\u6709\u6548\u671f\u5185\u624d\u53ef\u4ee5\u62ff\u6765\u4f5c\u4e3a\u4f1a\u8bdd\u8eab\u4efd\u53d1\u8d77\u8bf7\u6c42\uff0c\u5426\u8005`\u8ba4\u8bc1\u4e2d\u5fc3`\u4f1a\u76f4\u63a5\u62e6\u622a\u65e0\u6548\u8bf7\u6c42\u63d0\u793a`\u5df2\u8fc7\u671f`\uff0c\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u4fee\u6539\u8fd9\u4e2a\u8fc7\u671f\u65f6\u95f4\u6765\u6ee1\u8db3\u6211\u4eec\u7684\u4e1a\u52a1\u573a\u666f\u5462\uff1f\\n\x3c!--truncate--\x3e\\n\\n\u76ee\u524d\u4e00\u7ebf\u5927\u5382\u6240\u4f7f\u7528\u7684\u7684`AccessToken`\u7684\u6709\u6548\u671f\u4e00\u822c\u90fd\u662f`7200\u79d2`\uff0c\u4e5f\u5c31\u662f`2\u5c0f\u65f6`\uff0c\u800c\u4e14\u6709\u83b7\u53d6\u7684\u6b21\u6570\u9650\u5236\uff0c\u6240\u4ee5\u53d1\u8d77\u8bf7\u6c42\u7684\u4e00\u65b9\u5fc5\u987b\u901a\u8fc7\u4e00\u5b9a\u7684\u5f62\u5f0f\u4fdd\u5b58\u5230\u672c\u5730\uff0c\u4ee5\u65b9\u4fbf\u4e0b\u4e00\u6b21\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\u5199\u5165\u8bf7\u6c42\u7684`header`\u6216\u8005\u4f5c\u4e3a\u53c2\u6570\u643a\u5e26\u3002\\n\\n\u672c\u7ae0\u6765\u8bb2\u89e3\u4e0b\u4f7f\u7528`ApiBoot OAuth`\u7ec4\u4ef6\u8be5\u600e\u4e48\u53bb\u8bbe\u7f6e`AccessToken`\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u9488\u5bf9`memory`(\u5185\u5b58\u65b9\u5f0f)\u3001`jdbc`(\u6570\u636e\u5e93)\u8fd9\u4e24\u79cd\u65b9\u5f0f\u6765\u8bb2\u89e3\uff0c\u66f4\u591a\u4f7f\u7528\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a\\n\\n- ApiBoot OAuth\u5b98\u65b9\u6587\u6863\uff1a[https://apiboot.minbox.org/docs/components/api-boot-oauth.html](https://apiboot.minbox.org/docs/components/api-boot-oauth.html)\\n\\n## \u9ed8\u8ba4\u6709\u6548\u65f6\u957f\\n`ApiBoot OAuth`\u5728`memory`\u5b58\u50a8\u65b9\u5f0f\u4e0b\u4e3a\u6bcf\u4e00\u4e2a`\u5ba2\u6237\u7aef`\u90fd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u7684`AccessToken`\u6709\u6548\u65f6\u957f\uff0c\u8be5\u914d\u7f6e\u5728`org.minbox.framework.api.boot.autoconfigure.oauth.ApiBootOauthProperties`\uff0c\u76f8\u5173\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * Oauth2 Client\\n * Used to configure multiple clients\\n */\\n@Data\\npublic static class Client {\\n    /**\\n     * oauth2 client id\\n     */\\n    private String clientId = \\"ApiBoot\\";\\n    /**\\n     * oauth2 client secret\\n     */\\n    private String clientSecret = \\"ApiBootSecret\\";\\n    /**\\n     * oauth2 client grant types\\n     * default value is \\"password,refresh_token\\"\\n     */\\n    private String[] grantTypes = new String[]{\\"password\\", \\"refresh_token\\"};\\n    /**\\n     * oauth2 client scope\\n     * default value is \\"api\\"\\n     */\\n    private String[] scopes = new String[]{\\"api\\"};\\n    /**\\n     * oauth2 application resource id\\n     * default value is \\"api\\"\\n     */\\n    private String[] resourceId = new String[]{\\"api\\"};\\n    /**\\n     * oauth2 access token validity seconds\\n     * default value is 7200 second\\n     */\\n    private int accessTokenValiditySeconds = 7200;\\n}\\n```\\n`Client`\u662f`ApiBootOauthProperties`\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b\uff0c\u4e3b\u8981\u662f\u63d0\u4f9b\u4e86`OAuth2 \u5ba2\u6237\u7aef`\u7684\u76f8\u5173\u914d\u7f6e\u5b57\u6bb5\uff0c\u901a\u8fc7`spring-boot-configuration-processor`\u4f9d\u8d56\u5c06\u8be5\u7c7b\u81ea\u52a8\u89e3\u6790\u6210`\u914d\u7f6e\u5143\u6570\u636e`\uff0c\u8fd9\u6837\u6211\u4eec\u5728`application.yml`\u8f93\u5165`api.xxx`\u65f6\u53ef\u4ee5\u5f97\u5230\u76f8\u5e94\u7684\u63d0\u793a\u3002\\n\\n\u5728`Client`\u5185\u90e8\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5b57\u6bb5`accessTokenValiditySeconds`\uff0c\u901a\u8fc7\u8be5\u5b57\u6bb5\u6211\u4eec\u6765\u4fee\u6539\u8be5\u5ba2\u6237\u7aef\u4e0b\u6240\u6709\u7528\u6237\u751f\u6210\u7684`AccessToken`\u9ed8\u8ba4\u8fc7\u671f\u65f6\u957f\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u914d\u7f6e\u503c\u65f6\u95f4\u5355\u4f4d\u662f`\u79d2`\uff0c`7200\u79d2 = 2\u5c0f\u65f6`\u3002\\n\\n## \u5185\u5b58\u65b9\u5f0f\\n\\n\u5728\u4e0a\u9762\u8bf4\u5230\u4e86\uff0c\u5185\u5b58\u65b9\u5f0f\u65f6`ApiBoot OAuth`\u4f1a\u4f7f\u7528`ApiBootOauthProperties#Client`\u5185\u90e8\u7c7b\u7684`accessTokenValiditySeconds`\u5b57\u6bb5\u6765\u914d\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728`application.yml`\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u5373\u53ef\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    oauth:\\n      clients:\\n        - clientId: minbox\\n          clientSecret: chapter\\n          # \u914d\u7f6e\u5ba2\u6237\u7aefToken\u8fc7\u671f\u65f6\u957f\uff0c\u5355\u4f4d\uff1a\u79d2\\n          accessTokenValiditySeconds: 43200\\n    security:\\n      users:\\n        - username: yuqiyu\\n          password: 123123\\n```\\n\\n\u5728\u4e0a\u9762\u914d\u7f6e\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5728\u5185\u5b58\u5b58\u50a8\u7684`minbox`\u5ba2\u6237\u7aef\uff0c\u8bbe\u7f6e`accessTokenValiditySeconds`\u8fc7\u671f\u65f6\u95f4\u5b57\u6bb5\u4e3a`43200\u79d2 = 12\u5c0f\u65f6`\u3002\\n\\n## JDBC\u65b9\u5f0f\\n\\n`JDBC`\u65b9\u5f0f\u662f`ApiBoot OAuth`\u65e0\u6cd5\u63a7\u5236\u7684\uff0c\u56e0\u4e3a`OAuth2`\u5f53\u4f7f\u7528`JDBC`\u65b9\u5f0f\u8fdb\u884c\u5b58\u50a8\u5ba2\u6237\u7aef\u3001\u4ee4\u724c\u7b49\u4fe1\u606f\u65f6\uff0c\u90fd\u662f\u901a\u8fc7`OAuth2`\u63d0\u4f9b\u7684\u56fa\u5b9a\u7684\u8868\u8fdb\u884c\u64cd\u4f5c\uff0c\u6b63\u56e0\u4e3a\u5982\u6b64\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539`oauth_client_details`\u8868\u5185\u6bcf\u4e00\u6761`client`\u4fe1\u606f\u7684`access_token_validity`\u5b57\u6bb5\u7684\u503c\u5373\u53ef\uff0c\u65f6\u95f4\u5355\u4f4d\u540c\u6837\u4e5f\u662f`\u79d2`\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](https://blog.yuqiyu.com/images/post/apiboot-oauth-set-token-expire-time-1.png)\\n\\n`OAuth2`\u63d0\u4f9b\u7684`MySQL`\u7248\u672c\u7684\u5efa\u8868\u8bed\u53e5\u8bf7\u8bbf\u95ee[ApiBoot OAuth Starter](https://gitee.com/minbox-projects/api-boot/blob/master/api-boot-project/api-boot-starters/api-boot-starter-security-oauth-jwt/oauth-mysql.sql)\u67e5\u770b\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u4e0b\u9762\u6765\u6d4b\u8bd5\u4e0b\u4fee\u6539\u540e\u7684\u8fc7\u671f\u65f6\u95f4\u662f\u5426\u5df2\u7ecf\u751f\u6548\uff0c\u6211\u4eec\u5148\u6765\u542f\u52a8\u672c\u7ae0\u7684\u9879\u76ee\u793a\u4f8b\u3002\\n\\n\u901a\u8fc7`CURL`\u7684\u65b9\u5f0f\u83b7\u53d6`AccessToken`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\n\u279c ~ curl -X POST minbox:chapter@localhost:9090/oauth/token -d \'grant_type=password&username=yuqiyu&password=123123\'\\n{\\"access_token\\":\\"41127985-1b31-4413-ac9f-30d5e26f4aaf\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"0a39ca6a-8697-4f80-9bb1-ac59894a45dd\\",\\"expires_in\\":43199,\\"scope\\":\\"api\\"}\\n```\\n\\n\u901a\u8fc7`PostMan`\u65b9\u5f0f\u83b7\u53d6`AccessToken`\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](https://blog.yuqiyu.com/images/post/apiboot-oauth-set-token-expire-time-2.png)\\n\\n\u6211\u4eec\u6839\u636e\u7ed3\u679c\u53ef\u4ee5\u770b\u5230\uff0c\u7531\u539f\u672c\u9ed8\u8ba4\u7684`7200`\u4fee\u6539\u6210\u4e86\u6211\u4eec\u5728`application.yml`\u914d\u7f6e\u7684`43200`\uff08\u7ed3\u679c\u4e2d\u7684`43199`\u662f\u56e0\u4e3a\u751f\u6210token\u8017\u65f6\u5dee\u5bfc\u81f4\u7684\uff09\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot`\u7684\u5b97\u65e8\u5c31\u662f\u5316\u7e41\u4e3a\u7b80\uff0c\u80fd\u4f7f\u7528\u914d\u7f6e\u7b80\u5355\u641e\u5b9a\u7684\u4e8b\u60c5\uff0c\u7edd\u4e0d\u62d6\u6ce5\u5e26\u6c34\uff0c\u8d76\u5feb\u5206\u4eab\u4e0b\u672c\u7bc7\u6587\u7ae0\u5427\uff0c\u8ba9\u66f4\u591a\u4eba\u5f97\u5230\u5e2e\u52a9\uff0c\u975e\u5e38\u611f\u8c22~~~\\n\\n> `ApiBoot OAuth`\u53ef\u4ee5\u4e00\u6b21\u914d\u7f6e\u591a\u4e2a\u5ba2\u6237\u7aef\uff0c\u5e76\u4e14\u4e3a\u6bcf\u4e00\u4e2a\u5ba2\u6237\u7aef\u914d\u7f6e\u4e0d\u540c\u7684\u8fc7\u671f\u65f6\u95f4\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-oauth-set-token-expire-time`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-security-oauth-use-jwt","metadata":{"permalink":"/blog/apiboot-security-oauth-use-jwt","source":"@site/blog/security/apiboot-security-oauth-use-jwt.md","title":"\u8fd8\u4e0d\u4f1a\u4f7f\u7528JWT\u683c\u5f0f\u5316OAuth2\u4ee4\u724c\u5417\uff1f","description":"OAuth2\u9ed8\u8ba4\u7684AccessToken\u662f\u7531DefaultAccessTokenConverter\u751f\u6210\uff0c\u662f\u5177\u6709\u552f\u4e00\u6027\u7684UUID\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u5982\u679c\u60f3\u8981\u4f7f\u7528JWT\u6765\u683c\u5f0f\u5316AccessToken\u5c31\u9700\u8981\u4f7f\u7528JwtAccessTokenConverter\u6765\u8fdb\u884c\u683c\u5f0f\u5316\uff0c\u5f53\u7136\u5982\u679c\u4f60\u6709\u81ea\u5df1\u72ec\u7279\u7684\u4e1a\u52a1\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0AccessTokenConverter\u63a5\u53e3\uff0c\u5e76\u5c06\u5b9e\u73b0\u7c7b\u4ea4\u4ed8\u7ed9IOC\u6258\u7ba1\u5373\u53ef\u3002","date":"2019-12-09T15:53:47.000Z","formattedDate":"2019\u5e7412\u67089\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":4.565,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-security-oauth-use-jwt","title":"\u8fd8\u4e0d\u4f1a\u4f7f\u7528JWT\u683c\u5f0f\u5316OAuth2\u4ee4\u724c\u5417\uff1f","authors":"hengboy","tags":["Spring","Spring Security","OAuth2"],"date":"2019-12-09T15:53:47.000Z"},"prevItem":{"title":"OAuth2\u8bbe\u7f6eAccessToken\u7684\u8fc7\u671f\u65f6\u95f4","permalink":"/blog/apiboot-oauth-set-token-expire-time"},"nextItem":{"title":"\u539f\u6765SpringSecurity\u6574\u5408OAuth2\u540e\u5f00\u653e\u6743\u9650\u62e6\u622a\u8def\u5f84\u8fd8\u80fd\u8fd9\u4e48\u73a9\uff1f","permalink":"/blog/apiboot-security-open-paths-without-intercept"}},"content":"`OAuth2`\u9ed8\u8ba4\u7684`AccessToken`\u662f\u7531`DefaultAccessTokenConverter`\u751f\u6210\uff0c\u662f\u5177\u6709\u552f\u4e00\u6027\u7684`UUID`\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u5982\u679c\u60f3\u8981\u4f7f\u7528`JWT`\u6765\u683c\u5f0f\u5316`AccessToken`\u5c31\u9700\u8981\u4f7f\u7528`JwtAccessTokenConverter`\u6765\u8fdb\u884c\u683c\u5f0f\u5316\uff0c\u5f53\u7136\u5982\u679c\u4f60\u6709\u81ea\u5df1\u72ec\u7279\u7684\u4e1a\u52a1\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0`AccessTokenConverter`\u63a5\u53e3\uff0c\u5e76\u5c06\u5b9e\u73b0\u7c7b\u4ea4\u4ed8\u7ed9`IOC`\u6258\u7ba1\u5373\u53ef\u3002\\n\x3c!--truncate--\x3e\\n`ApiBoot`\u5185\u90e8\u96c6\u6210\u4e86`DefaultAccessTokenConverter`\uff08\u9ed8\u8ba4\uff09\u3001`JwtAccessTokenConverter`\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u914d\u7f6e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u76f8\u4e92\u8f6c\u6362\u3002\\n\\n## \u76f8\u5173\u6587\u6863\\n\\n- ApiBoot OAuth2\u5b98\u65b9\u6587\u6863\uff1a[https://apiboot.minbox.org/docs/components/api-boot-oauth.html](https://apiboot.minbox.org/docs/components/api-boot-oauth.html)\\n- ApiBoot \u5f00\u6e90\u6e90\u7801\uff1a[minbox-projects/api-boot](https://gitee.com/minbox-projects/api-boot)\\n\\n## JWT\u52a0\u5bc6\u79d8\u94a5\\n\u5bf9`JWT`\u4e86\u89e3\u7684\u540c\u5b66\u5e94\u8be5\u77e5\u9053\uff0c\u5b83\u5185\u90e8\u4e0d\u53ef\u9006\u7684\u90e8\u5206\u91c7\u7528\u7684\u662f`RSA`\u52a0\u5bc6\uff0c\u5728\u52a0\u5bc6\u8fc7\u7a0b\u4e2d\u9700\u8981\u4e00\u4e2a`\u79d8\u94a5`\uff0c\u5728`JwtAccessTokenConverter`\u5b9e\u73b0\u7c7b\u4e2d\u91c7\u7528\u4e86**6\u4f4d\u968f\u673a\u5b57\u7b26\u4e32**\u4f5c\u4e3a\u79d8\u94a5\uff0c\u76f8\u5173\u6e90\u7801\u5982\u4e0b\uff1a\\n```java\\n/**\\n * Helper that translates between JWT encoded token values and OAuth authentication\\n * information (in both directions). Also acts as a {@link TokenEnhancer} when tokens are\\n * granted.\\n *\\n * @see TokenEnhancer\\n * @see AccessTokenConverter\\n *\\n * @author Dave Syer\\n * @author Luke Taylor\\n */\\npublic class JwtAccessTokenConverter implements TokenEnhancer, AccessTokenConverter, InitializingBean {\\n  .....\\n\\n\\tprivate String verifierKey = new RandomValueStringGenerator().generate();\\n\\n\\tprivate Signer signer = new MacSigner(verifierKey);\\n\\n\\tprivate String signingKey = verifierKey;\\n}  \\n```\\n\\n\u8fd9\u79cd\u5f62\u5f0f\u867d\u7136\u5728\u67d0\u4e00\u4e9b\u5c42\u9762\u4e0a\u662f\u552f\u4e00\u7684\uff0c\u5b9e\u5728\u611f\u89c9\u4e0d\u592a\u4e25\u8c28\uff0c\u6240\u4ee5`ApiBoot`\u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2a\u52a0\u5bc6\u79d8\u94a5`signingKey`\u5b57\u6bb5\u3002\\n\\n## \u521b\u5efa\u793a\u4f8b\u9879\u76ee\\n\\n\u4e3a\u4e86\u672c\u7ae0\u7684\u6f14\u793a\u6548\u679c\uff0c\u6211\u4eec\u4f7f\u7528`IDEA`\u6765\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\uff0c`pom.xml`\u6587\u4ef6\u5185\u76f8\u5173\u7684\u4f9d\u8d56\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n  </dependency>\\n</dependencies>\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.0.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n\u4f9d\u8d56\u6dfb\u52a0\u5b8c\u6210\u540e\u4e0b\u9762\u6211\u4eec\u914d\u7f6e\u4e0b\u6d4b\u8bd5\u7684`\u7528\u6237`\u4ee5\u53ca`\u5ba2\u6237\u7aef\u4fe1\u606f`\u3002\\n\\n### \u914d\u7f6e\u5185\u5b58\u7528\u6237\\n\\n\u6211\u4eec\u5728\u83b7\u53d6`AccessToken`\u65f6\u4f7f\u7528\u7684`password`\u6388\u6743\u7c7b\u578b\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728`application.yml`\u6587\u4ef6\u5185\u914d\u7f6e`\u767b\u5f55\u7528\u6237`\u6240\u4f7f\u7528\u7684\u7528\u6237\u540d\u3001\u5bc6\u7801\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    security:\\n      users:\\n        - username: yuqiyu\\n          password: 123456\\n```\\n\\n> \u672c\u7ae0\u4e3a\u4e86\u6f14\u793a`JWT`\u683c\u5f0f\u5316`AccessToken`\uff0c\u9a8c\u8bc1\u7684\u7528\u6237\u91c7\u7528\u5185\u5b58\u65b9\u5f0f\u914d\u7f6e\uff0c[\u4e86\u89e3\u8be6\u60c5](https://apiboot.minbox.org/docs/components/api-boot-security.html)\u3002\\n\\n### \u5f00\u542fJWT\u8f6c\u6362\\n\\n`ApiBoot OAuth2`\u9ed8\u8ba4\u4f7f\u7528`DefaultAccessTokenConverter`\u5b9e\u73b0\u7c7b\u6765\u683c\u5f0f\u5316`AccessToken`\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5207\u6362\u5230`JwtAccessTokenConverter`\uff0c\u9700\u8981\u5728`application.yml`\u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    oauth:\\n      # \u542f\u7528JWT\uff0c\u7528\u4e8e\u683c\u5f0f\u5316AccessToken\\n      jwt:\\n        enable: true\\n```\\n\\n### \u914d\u7f6e\u52a0\u5bc6\u79d8\u94a5\\n\\n\u5728\u672c\u6587\u5f00\u5934\u8bf4\u5230\u4e86`JwtAccessTokenConverter`\u5b9e\u73b0\u7c7b\u5185\u91c7\u7528\u7684\u662f6\u4f4d\u968f\u673a\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u6765\u4f5c\u4e3a`RSA`\u52a0\u5bc6\u7684\u79d8\u94a5\uff0c`ApiBoot OAuth2`\u63d0\u4f9b\u4e86\u53c2\u6570\u914d\u7f6e\u53ef\u4ee5\u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    oauth:\\n      jwt:\\n        # \u52a0\u5bc6\u79d8\u94a5\\n        sign-key: \u6052\u5b87\u5c11\u5e74\\n```\\n\\n> \u79d8\u94a5\u683c\u5f0f\u4e0d\u9650\uff0c\u5982\uff1a`\u7279\u6b8a\u5b57\u7b26\u4e32`\u3001`\u6c49\u5b57`\u3001`\u6570\u5b57`\u3001`\u5b57\u6bcd`....\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b\u5230\u4e86\uff0c\u6211\u4eec\u901a\u8fc7`IDEA`\u7684`XxxApplication`\u65b9\u5f0f\u6765\u542f\u52a8\u672c\u7ae0\u9879\u76ee\uff0c\u5c1d\u8bd5\u4f7f\u7528`CURL`\u65b9\u5f0f\u83b7\u53d6`AccessToken`\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\n\u279c ~ curl ApiBoot:ApiBootSecret@localhost:9090/oauth/token -d \'grant_type=password&username=yuqiyu&password=123456\'\\n{\\n    \\"access_token\\": \\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiYXBpIl0sInVzZXJfbmFtZSI6Inl1cWl5dSIsInNjb3BlIjpbImFwaSJdLCJleHAiOjE1NzU5NTMwNDgsImF1dGhvcml0aWVzIjpbIlJPTEVfYXBpIl0sImp0aSI6ImQxMDNmNDYwLTk3YzMtNGNiZS05OWM4LWYzZjU2MmRhMDZhOCIsImNsaWVudF9pZCI6IkFwaUJvb3QifQ.HMHRBCIGPZNlkJPCnXaktMWxXEW-5roo7tdQR1JpCyY\\", \\n    \\"token_type\\": \\"bearer\\", \\n    \\"refresh_token\\": \\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiYXBpIl0sInVzZXJfbmFtZSI6Inl1cWl5dSIsInNjb3BlIjpbImFwaSJdLCJhdGkiOiJkMTAzZjQ2MC05N2MzLTRjYmUtOTljOC1mM2Y1NjJkYTA2YTgiLCJleHAiOjE1Nzg1Mzc4NDgsImF1dGhvcml0aWVzIjpbIlJPTEVfYXBpIl0sImp0aSI6ImY1NDMxZTMzLWE1YzMtNGVmNC1hZDM0LTk1MGQ3ODliYTRiZCIsImNsaWVudF9pZCI6IkFwaUJvb3QifQ.TfJ5vThvaibV2kVo2obHqnYzmYm-GsdtRLoB3RJbkrg\\", \\n    \\"expires_in\\": 6925, \\n    \\"scope\\": \\"api\\", \\n    \\"jti\\": \\"d103f460-97c3-4cbe-99c8-f3f562da06a8\\"\\n}\\n```\\n\\n> `ApiBoot OAuth`\u6709\u9ed8\u8ba4\u7684\u5ba2\u6237\u7aef\u914d\u7f6e\u4fe1\u606f\u4e3a`ApiBoot`\u3001`ApiBootSecret`\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6f14\u793a\uff0c\u8fd9\u91cc\u6ca1\u505a\u4fee\u6539\uff0c\u5982\u9700\u4fee\u6539\u8bf7\u67e5\u770b[ApiBoot OAuth\u6587\u6863](https://apiboot.minbox.org/docs/components/api-boot-oauth.html)\uff0c\u5982\u679c\u4f60\u611f\u89c9\u63a7\u5236\u53f0\u6253\u5370\u7684`json`\u4e0d\u7f8e\u89c2\uff0c\u9605\u8bfb\u6027\u592a\u5dee\uff0c\u53ef\u4ee5\u4f7f\u7528[\u5728\u7ebf\u683c\u5f0f\u5316JSON\u5de5\u5177](http://tools.yuqiyu.com/pages/formatter/json.html).\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n\u4f7f\u7528`ApiBoot`\u6765\u683c\u5f0f\u5316`OAuth2`\u7684`AccessToken`\u662f\u4e0d\u662f\u7279\u522b\u7b80\u5355\uff1f\u7701\u53bb\u4e86\u6211\u4eec\u81ea\u5df1\u53bb\u521b\u5efa`JwtAccessTokenConverter`\u5b9e\u4f8b\uff0c\u7136\u540e\u8fd8\u9700\u8981\u5c06\u5b9e\u4f8b\u653e\u5165`IOC`\u7e41\u7410\u7684\u6b65\u9aa4\uff0c\u66f4\u591a\u4f7f\u7528\u8be6\u89e3\u656c\u8bf7\u671f\u5f85~~\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-security-oauth-use-jwt`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-security-open-paths-without-intercept","metadata":{"permalink":"/blog/apiboot-security-open-paths-without-intercept","source":"@site/blog/security/apiboot-security-open-paths-without-intercept.md","title":"\u539f\u6765SpringSecurity\u6574\u5408OAuth2\u540e\u5f00\u653e\u6743\u9650\u62e6\u622a\u8def\u5f84\u8fd8\u80fd\u8fd9\u4e48\u73a9\uff1f","description":"\u5f53\u6211\u4eec\u6574\u5408\u4e86Spring Security\u4ee5\u53caOAuth2\u540e\u53d1\u73b0\uff0c\u6709\u4e00\u4e9b\u4e1a\u52a1\u8bf7\u6c42\u662f\u9700\u8981\u5f00\u653e\u7684\uff0c\u56e0\u4e3a\u79cd\u79cd\u539f\u56e0\u8fd9\u65f6\u8bbf\u95ee\u8005\u8fd8\u6ca1\u6709\u8eab\u4efd\u6807\u8bc6\uff08\u6bd4\u5982\uff1a\u7528\u6237\u521a\u6765\uff0c\u8fd8\u6ca1\u6709\u6ce8\u518c\uff0c\u9700\u8981\u8fdb\u884c\u65b0\u7528\u6237\u6ce8\u518c\uff0c\u8fd9\u65f6\u6ce8\u518c\u4e1a\u52a1\u76f8\u5173\u7684\u63a5\u53e3\u90fd\u5e94\u8be5\u662f\u5f00\u653e\u7684\uff09\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770bApiBoot\u662f\u600e\u4e48\u6392\u9664\u8def\u5f84\u4e0d\u8fdb\u884c\u6743\u9650\u62e6\u622a\u7684\u3002","date":"2019-12-07T09:18:47.000Z","formattedDate":"2019\u5e7412\u67087\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":5.645,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-security-open-paths-without-intercept","title":"\u539f\u6765SpringSecurity\u6574\u5408OAuth2\u540e\u5f00\u653e\u6743\u9650\u62e6\u622a\u8def\u5f84\u8fd8\u80fd\u8fd9\u4e48\u73a9\uff1f","authors":"hengboy","tags":["Spring","Spring Security","OAuth2"],"date":"2019-12-07T09:18:47.000Z"},"prevItem":{"title":"\u8fd8\u4e0d\u4f1a\u4f7f\u7528JWT\u683c\u5f0f\u5316OAuth2\u4ee4\u724c\u5417\uff1f","permalink":"/blog/apiboot-security-oauth-use-jwt"},"nextItem":{"title":"\u81ea\u5b9a\u4e49OAuth2\u77ed\u4fe1\u767b\u5f55GrantType","permalink":"/blog/apiboot-define-oauth-grant-type"}},"content":"\u5f53\u6211\u4eec\u6574\u5408\u4e86`Spring Security`\u4ee5\u53ca`OAuth2`\u540e\u53d1\u73b0\uff0c\u6709\u4e00\u4e9b\u4e1a\u52a1\u8bf7\u6c42\u662f\u9700\u8981\u5f00\u653e\u7684\uff0c\u56e0\u4e3a\u79cd\u79cd\u539f\u56e0\u8fd9\u65f6\u8bbf\u95ee\u8005\u8fd8\u6ca1\u6709\u8eab\u4efd\u6807\u8bc6\uff08`\u6bd4\u5982\uff1a\u7528\u6237\u521a\u6765\uff0c\u8fd8\u6ca1\u6709\u6ce8\u518c\uff0c\u9700\u8981\u8fdb\u884c\u65b0\u7528\u6237\u6ce8\u518c\uff0c\u8fd9\u65f6\u6ce8\u518c\u4e1a\u52a1\u76f8\u5173\u7684\u63a5\u53e3\u90fd\u5e94\u8be5\u662f\u5f00\u653e\u7684`\uff09\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b`ApiBoot`\u662f\u600e\u4e48\u6392\u9664\u8def\u5f84\u4e0d\u8fdb\u884c\u6743\u9650\u62e6\u622a\u7684\u3002\\n\x3c!--truncate--\x3e\\n## \u5b98\u65b9\u76f8\u5173\u6587\u6863\\n\\n\u76f8\u5173`ApiBoot Security`\u5b98\u65b9\u4f7f\u7528\u6587\u6863\uff0c\u8bf7\u8bbf\u95ee [ApiBoot Security](https://apiboot.minbox.org/docs/components/api-boot-security.html)\u3002\\n\\n\u5728\u6587\u6863\u7684\u7b2c`4. \u9ed8\u8ba4\u6392\u9664\u8def\u5f84`\u90e8\u5206\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u4e86`ApiBoot Security`\u4e3a\u4e86\u4e0e\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9\u6846\u67b6\u8fdb\u884c\u96c6\u6210\uff0c\u5728\u5185\u90e8\u5df2\u7ecf\u6dfb\u52a0\u4e86\u4e00\u4e9b`\u9ed8\u8ba4\u7684\u62e6\u622a\u8def\u5f84`\uff0c\u5f53\u6211\u4eec\u5728\u6dfb\u52a0`\u5f00\u653e\u8def\u5f84`\u65f6\u4f1a\u5728\u9ed8\u8ba4\u7684\u57fa\u7840\u4e0a**\u589e\u91cf\u6dfb\u52a0\uff0c\u4e0d\u4f1a\u8986\u76d6**\u3002\\n\\n## \u521b\u5efa\u9879\u76ee\\n\\n\u6211\u4eec\u4f7f\u7528`IDEA`\u5f00\u53d1\u5de5\u5177\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\uff0c\u5728`pom.xml`\u5185\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot Security OAuth\u5b89\u5168\u7ec4\u4ef6--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n  </dependency>\\n\\n</dependencies>\\n<dependencyManagement>\\n  <dependencies>\\n    \x3c!--ApiBoot\u7edf\u4e00\u7248\u672c\u4f9d\u8d56--\x3e\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.0.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n### \u6392\u9664\u8def\u5f84\u914d\u7f6e\\n\\n`ApiBoot Security OAuth`\u5b89\u5168\u7ec4\u4ef6\u9ed8\u8ba4\u62e6\u622a\u914d\u7f6e\u4e3a`/api/**`\uff0c\u4e5f\u5c31\u662f`/api`\u4e0b\u7684\u5168\u90e8\u8def\u5f84\u4ee5\u53ca\u5b50\u8def\u5f84\u90fd\u9700\u8981\u8ba4\u8bc1\u540e\u624d\u53ef\u4ee5\u8bbf\u95ee\u3002\\n\\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7`api.boot.security.auth-prefix`\u53c2\u6570\u914d\u7f6e\u4fee\u6539`\u4fdd\u62a4\u7684\u8def\u5f84\u5217\u8868`\uff0c`ApiBoot`\u8fd8\u63d0\u4f9b\u4e86\u53e6\u5916\u7684\u4e00\u4e2a\u53c2\u6570\u914d\u7f6e`api.boot.security.ignoring-urls`\uff0c\u7528\u4e8e\u914d\u7f6e`\u5f00\u653e\u7684\u8def\u5f84\u5217\u8868`\uff08\u5f00\u653e\u8def\u5f84\u53ef\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u8d70\u6743\u9650\u62e6\u622a\uff09\uff0c\u652f\u6301\u4f7f\u7528`Ant`\u98ce\u683c\uff0c`application.yml`\u914d\u7f6e\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\nspring:\\n  application:\\n    name: apiboot-security-open-paths-without-intercept\\nserver:\\n  port: 9090\\n\\napi:\\n  boot:\\n    # ApiBoot Security\u5b89\u5168\u914d\u7f6e\\n    security:\\n      # \u6743\u9650\u62e6\u622a\u7684\u8def\u5f84\u524d\u7f00\\n      auth-prefix: /**\\n      # \u6392\u9664\u4e0d\u62e6\u622a\u7684\u8def\u5f84\\n      ignoring-urls:\\n        - /index/**\\n```\\n\\n\u6211\u4eec\u5728`application.yml`\u6587\u4ef6\u5185\u914d\u7f6e`api.boot.security.ignoring-urls`\u7684\u503c\u4e3a`/index/**`\uff0c\u8fd9\u65f6\u6211\u4eec\u5728\u8bbf\u95ee`/index`\u3001`/index/xxx`\u8def\u5f84\u65f6\u90fd\u4e0d\u4f1a\u7ecf\u8fc7\u6743\u9650\u7684\u62e6\u622a\uff0c\u76f4\u63a5\u53ef\u4ee5\u8bbf\u95ee\u5230\u3002\\n\\n### \u793a\u4f8b\u8bf7\u6c42\\n\\n\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`IndexController`\u7684\u793a\u4f8b\u63a7\u5236\u5668\uff0c\u6765\u9a8c\u8bc1\u6211\u4eec\u5f00\u653e\u7684\u8def\u5f84\u662f\u5426\u5df2\u7ecf\u751f\u6548\u4e86\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n\\n/**\\n * \u793a\u4f8b\uff1a\u63a7\u5236\u5668\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/index\\")\\npublic class IndexController {\\n    /**\\n     * \u793a\u4f8b\uff1a\u9996\u9875\u5730\u5740\\n     * /index\\n     *\\n     * @return\\n     */\\n    @GetMapping\\n    public String index() {\\n        return \\"this is index page.\\";\\n    }\\n\\n    /**\\n     * \u793a\u4f8b\uff1a\u9996\u9875\u5730\u5740\u5b50\u9875\u9762\\n     * /index/sub\\n     *\\n     * @return\\n     */\\n    @GetMapping(value = \\"/sub\\")\\n    public String indexSub() {\\n        return \\"this is sub index page.\\";\\n    }\\n}\\n```\\n\\n\u5728`application.yml`\u6211\u4eec\u914d\u7f6e\u7684\u5f00\u653e\u5730\u5740\u4e3a`/index/**`\uff0c\u6240\u4ee5`IndexController`\u63a7\u5236\u5668\u5185\u7684\u4e24\u4e2a\u5730\u5740`/index`\u3001`/index/sub`\u90fd\u4f1a\u88ab\u5f00\u653e\uff0c\u4e0d\u8d70\u6743\u9650\u62e6\u622a\uff0c\u76f4\u63a5\u653e\u884c\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u6211\u4eec\u4f7f\u7528`IDEA`\u901a\u8fc7`XxxApplication`\u5165\u53e3\u7c7b\u7684\u65b9\u5f0f\u6765\u542f\u52a8\u672c\u7ae0\u9879\u76ee\u6e90\u7801\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u8981\u9a8c\u8bc1\u7684\u6d4b\u8bd5\u70b9\u3002\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u5f00\u653e\u8def\u5f84\\n\\n\u6211\u4eec\u5148\u6765\u8bbf\u95ee\u4e0b`http://localhost:9090/index`\uff0c\u6548\u679c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```\\n\u279c ~ curl http://localhost:9090/index    \\nthis is index page.\\n```\\n\\n\u76f4\u63a5\u8bbf\u95ee`/index`\u662f\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u63a5\u53e3\u8fd4\u56de\u7684\u5185\u5bb9\uff0c\u8fd9\u4e5f\u8bc1\u660e\u4e86\u4e00\u70b9\uff0c\u8fd9\u4e2a\u5730\u5740\u88ab\u5f00\u653e\u4e86\uff0c\u4e0d\u518d\u88ab\u6743\u9650\u62e6\u622a\u3002\\n\\n\u5728\u4e4b\u524d\u8bf4\u5230`ApiBoot Security OAuth`\u5f00\u653e\u5730\u5740\u652f\u6301`Ant`\u98ce\u683c\uff0c\u6211\u4eec\u914d\u7f6e\u7684\u5f00\u653e\u5730\u5740\u4e3a`/index/**`\uff0c\u6240\u4ee5`/index/sub`\u8fd9\u4e2a\u8bf7\u6c42\u5730\u5740\u4e5f\u5e94\u8be5\u5df2\u7ecf\u88ab\u5f00\u653e\u4e86\uff0c\u6548\u679c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```\\n\u279c ~ curl http://localhost:9090/index/sub\\nthis is sub index page.\\n```\\n\\n> \u5982\u679c\u6211\u4eec\u4fee\u6539`api.boot.security.ignoring-urls`\u914d\u7f6e\u4e3a`/index`\uff0c\u6211\u4eec\u5728\u8bbf\u95ee`/index/sub`\u8fd9\u4e2a\u5730\u5740\u65f6\u662f\u6ca1\u6709\u6743\u9650\u7684\uff0c\u9700\u8981\u643a\u5e26\u6709\u6548\u7684`AccessToken`\u624d\u53ef\u4ee5\u8bbf\u95ee\u5230\u3002\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u672a\u5f00\u653e\u8def\u5f84\u7684\u62e6\u622a\\n\\n\u4e0b\u9762\u6211\u4eec\u6765\u5b8c\u6210\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\u7684\u6d4b\u8bd5\u70b9\uff0c\u8bbf\u95ee\u4e00\u4e2a\u5e76\u6ca1\u6709\u5728\u540e\u53f0\u5b9a\u4e49\u7684\u8def\u5f84\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\n\u279c ~ curl http://localhost:9090/index/11\\n{\\"error\\":\\"unauthorized\\",\\"error_description\\":\\"Full authentication is required to access this resource\\"}\\n```\\n\\n\u6211\u4eec\u5e76\u6ca1\u6709\u6dfb\u52a0`/index/xx`\u8fd9\u4e2a\u8bf7\u6c42\u5730\u5740\u7684\u5b9e\u73b0\uff0c\u5f53\u8bbf\u95ee\u65f6\u540c\u6837\u4e5f\u4f1a\u88ab\u62e6\u622a\uff0c\u8fd9\u8bc1\u660e\u4e86\u6211\u4eec\u53d1\u8d77\u7684\u8bf7\u6c42\u5e76\u6ca1\u6709\u5230\u8fbe\u89e3\u6790\u8bf7\u6c42\u5c31\u5df2\u7ecf\u88ab\u6743\u9650\u62e6\u622a\u4e86\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n\u9664\u4e86\u88ab\u5f00\u653e\u7684\u8def\u5f84\u90fd\u9700\u8981\u63d0\u4f9b\u6709\u6548\u7684AccessToken\u624d\u53ef\u4ee5\u8bbf\u95ee\uff0c\u65e0\u8bba\u8fd9\u4e2a\u5730\u5740\u662f\u5426\u5b58\u5728\uff0c\u672c\u7ae0\u4e3a\u4e86\u793a\u4f8b\u8bb2\u89e3\u65b9\u4fbf\u6211\u8fd9\u91cc\u914d\u7f6e\u7684\u6743\u9650\u62e6\u622a\u6839\u5730\u5740\u4e3a`/**`\uff0c`api.boot.security.auth-paths`\u53c2\u6570\u6e90\u7801\u662f\u4e00\u4e2a\u6570\u7ec4\uff08\u8be6\u89c1\uff1a`org.minbox.framework.api.boot.autoconfigure.security.ApiBootSecurityProperties`\uff09\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u5730\u5740\uff0c\u6bd4\u5982\uff1a`/user/**`\u3001`/order/**`\uff0c`api.boot.security.ignoring-urls`\u540c\u6837\u652f\u6301\u6570\u7ec4\u5f62\u5f0f\u914d\u7f6e\u591a\u4e2a\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-security-open-paths-without-intercept`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-define-oauth-grant-type","metadata":{"permalink":"/blog/apiboot-define-oauth-grant-type","source":"@site/blog/security/apiboot-define-oauth-grant-type.md","title":"\u81ea\u5b9a\u4e49OAuth2\u77ed\u4fe1\u767b\u5f55GrantType","description":"Spring\u63d0\u4f9b\u7684\u539f\u751f\u7684OAuth2\u4f9d\u8d56\u5185\u7f6e\u4e86\u51e0\u79cd\u6bd4\u8f83\u5e38\u7528\u7684\u6388\u6743\u65b9\u5f0f\uff1apassword\u3001authorization-code\u3001clientcredentials\u3001refreshtoken\u3001implicit\u7b49\uff0c\u867d\u7136\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u65e5\u5e38\u7684\u9700\u6c42\uff0c\u4e0d\u8fc7\u9488\u5bf9\u4e00\u4e9b\u7279\u6b8a\u7684\u9700\u6c42\u8fd8\u662f\u6349\u895f\u89c1\u8098\uff0c\u6709\u70b9\u65e0\u5948\uff0c\u6bd4\u5982\uff1a\u5fae\u4fe1\u767b\u5f55\u3001\u77ed\u4fe1\u767b\u5f55...\uff0c\u9488\u5bf9\u8fd9\u4e00\u70b9ApiBoot\u901a\u8fc7\u4fee\u6539Spring OAuth2\u4f9d\u8d56\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u8fdb\u884c\u81ea\u5b9a\u4e49\u6dfb\u52a0grantType\u3002","date":"2019-12-04T09:18:26.000Z","formattedDate":"2019\u5e7412\u67084\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":9.39,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-define-oauth-grant-type","title":"\u81ea\u5b9a\u4e49OAuth2\u77ed\u4fe1\u767b\u5f55GrantType","authors":"hengboy","tags":["Spring","Spring Security","OAuth2"],"date":"2019-12-04T09:18:26.000Z"},"prevItem":{"title":"\u539f\u6765SpringSecurity\u6574\u5408OAuth2\u540e\u5f00\u653e\u6743\u9650\u62e6\u622a\u8def\u5f84\u8fd8\u80fd\u8fd9\u4e48\u73a9\uff1f","permalink":"/blog/apiboot-security-open-paths-without-intercept"},"nextItem":{"title":"\u89c1\u8fc7\u8fd9\u4e48\u7b80\u5355\u7684\u65b9\u5f0f\u6574\u5408SpringSecurity & OAuth2\u7684\u81ea\u5b9a\u4e49\u67e5\u8be2\u7528\u6237\u5417\uff1f","permalink":"/blog/apiboot-security-oauth-custom-certification-user"}},"content":"`Spring`\u63d0\u4f9b\u7684\u539f\u751f\u7684`OAuth2`\u4f9d\u8d56\u5185\u7f6e\u4e86\u51e0\u79cd\u6bd4\u8f83\u5e38\u7528\u7684\u6388\u6743\u65b9\u5f0f\uff1a`password`\u3001`authorization-code`\u3001`client_credentials`\u3001`refresh_token`\u3001`implicit`\u7b49\uff0c\u867d\u7136\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u65e5\u5e38\u7684\u9700\u6c42\uff0c\u4e0d\u8fc7\u9488\u5bf9\u4e00\u4e9b\u7279\u6b8a\u7684\u9700\u6c42\u8fd8\u662f\u6349\u895f\u89c1\u8098\uff0c\u6709\u70b9\u65e0\u5948\uff0c\u6bd4\u5982\uff1a`\u5fae\u4fe1\u767b\u5f55`\u3001`\u77ed\u4fe1\u767b\u5f55`...\uff0c\u9488\u5bf9\u8fd9\u4e00\u70b9`ApiBoot`\u901a\u8fc7\u4fee\u6539`Spring OAuth2`\u4f9d\u8d56\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u8fdb\u884c\u81ea\u5b9a\u4e49\u6dfb\u52a0`grantType`\u3002\\n\x3c!--truncate--\x3e\\n\\n- ApiBoot\u5b98\u65b9\u6587\u6863\uff1a[https://apiboot.minbox.org](https://apiboot.minbox.org)\\n\\n## \u521b\u5efa\u9879\u76ee\\n\\n\u6211\u4eec\u5148\u6765\u4f7f\u7528`IDEA`\u521b\u5efa\u672c\u7ae0\u7684\u9879\u76ee\uff0c`pom.xml`\u6dfb\u52a0\u7684\u4f9d\u8d56\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>mysql</groupId>\\n    <artifactId>mysql-connector-java</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>com.zaxxer</groupId>\\n    <artifactId>HikariCP</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-mybatis-enhance</artifactId>\\n  </dependency>\\n</dependencies>\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.0.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n`ApiBoot MyBatis Enhance`\u4f7f\u7528\u6587\u6863\u8be6\u89c1[ApiBoot Mybatis Enhance\u5b98\u7f51\u6587\u6863](https://apiboot.minbox.org/docs/components/api-boot-mybatis-enhance.html)\u3002\\n\\n\u672c\u7ae0\u7684\u6e90\u7801\u5728[ApiBoot\u96f6\u4ee3\u7801\u6574\u5408Spring Security\u7684JDBC\u65b9\u5f0f\u83b7\u53d6AccessToken](https://blog.yuqiyu.com/apiboot-security-customize-select-user.html)\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5c06\u4e4b\u524d\u7ae0\u8282\u6e90\u7801\u7684`application.yml`\u3001`SystemUser`\u3001`SystemUserEnhanceMppaer`\u3001`UserService`\u6587\u4ef6\u590d\u5236\u5230\u672c\u7ae0\u9879\u76ee\u5bf9\u5e94\u7684\u76ee\u5f55\u5185\u3002\\n\\n## \u9a8c\u8bc1\u7801\u767b\u5f55\u903b\u8f91\\n\\n\u672c\u7ae0\u6765\u8bb2\u4e0b\u4f7f\u7528`ApiBoot`\u600e\u4e48\u5b8c\u6210\u81ea\u5b9a\u4e49`\u77ed\u4fe1\u9a8c\u8bc1\u7801`\u767b\u5f55\u7684\u6388\u6743\u65b9\u5f0f\u3002\\n\\n\u5728\u77ed\u4fe1\u9a8c\u8bc1\u7801\u767b\u5f55\u7684\u903b\u8f91\u4e2d\uff0c\u5927\u81f4\u7684\u6d41\u7a0b\u5982\u4e0b\u6240\u793a\uff1a\\n\\n1. `\u7528\u6237\u5728\u83b7\u53d6\u9a8c\u8bc1\u7801\u65f6\uff0c\u7cfb\u7edf\u4f1a\u5c06\u9a8c\u8bc1\u7801\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u5185`\\n2. `\u5f53\u7528\u6237\u8f93\u5165\u9a8c\u8bc1\u7801\u540e\u63d0\u4ea4\u767b\u5f55\u65f6\uff0c\u8bfb\u53d6\u9a8c\u8bc1\u7801\u5e76\u5224\u65ad\u6709\u6548\u6027\u540e`\\n3. `\u6700\u540e\u83b7\u53d6\u624b\u673a\u53f7\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\u5b8c\u6210\u767b\u5f55\u903b\u8f91\u3002`\\n4. `\u8fd4\u56de\u8bf7\u6c42\u4ee4\u724c`\\n\\n\u6839\u636e`\u9a8c\u8bc1\u7801\u767b\u5f55`\u7684\u6d41\u7a0b\u6765\u770b\u6211\u4eec\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a`\u9a8c\u8bc1\u7801\u6570\u636e\u8868`\uff0c\u7528\u6765\u4fdd\u5b58\u7528\u6237\u53d1\u9001\u7684\u9a8c\u8bc1\u7801\u6570\u636e\uff0c\u5728`\u7b2c3\u6b65`\u4e2d\u9700\u8981\u901a\u8fc7\u624b\u673a\u53f7\u83b7\u53d6\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u4fee\u6539\u4e4b\u524d\u7ae0\u8282\u521b\u5efa\u7684\u8868\u7ed3\u6784\uff0c\u6dfb\u52a0\u4e00\u5217\uff0c\u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u8fdb\u884c\u6539\u9020\u3002\\n\\n### \u9a8c\u8bc1\u7801\u8868\u7ed3\u6784\\n\\n\u5728\u6570\u636e\u5e93\u5185\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`phone_code`\u7684\u6570\u636e\u8868\uff0c\u5e76\u521d\u59cb\u5316\u4e00\u6761\u9a8c\u8bc1\u7801\u6570\u636e\uff08\u6a21\u62df\u5df2\u7ecf\u7528\u6237\u5df2\u7ecf\u53d1\u9001\u4e86\u9a8c\u8bc1\u7801\uff09\uff0c`SQL`\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```sql\\nCREATE TABLE `phone_code` (\\n  `pc_id` int(11) NOT NULL AUTO_INCREMENT COMMENT \'\u4e3b\u952e\u81ea\u589e\',\\n  `pc_phone` varchar(11) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u624b\u673a\u53f7\',\\n  `pc_code` varchar(6) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u9a8c\u8bc1\u7801\u5185\u5bb9\',\\n  `pc_create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT \'\u9a8c\u8bc1\u7801\u751f\u6210\u65f6\u95f4\',\\n  PRIMARY KEY (`pc_id`)\\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT=\'\u624b\u673a\u53f7\u9a8c\u8bc1\u7801\u4fe1\u606f\u8868\';\\n-- \u521d\u59cb\u5316\u9a8c\u8bc1\u7801\u6570\u636e\\nINSERT INTO `phone_code` VALUES (1,\'17111111111\',\'123123\',\'2019-12-04 03:01:05\');\\n```\\n\\n### \u9a8c\u8bc1\u7801\u5b9e\u4f53\\n\\n\u5bf9\u5e94`phone_code`\u8868\u7ed3\u6784\u7f16\u5199\u4e00\u4e2a\u6570\u636e\u5b9e\u4f53\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n\\n/**\\n * \u624b\u673a\u53f7\u9a8c\u8bc1\u7801\u4fe1\u606f\u8868\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@Data\\n@Table(name = \\"phone_code\\")\\npublic class PhoneCode {\\n    /**\\n     * \u9a8c\u8bc1\u7801\u4e3b\u952e\\n     */\\n    @Column(name = \\"pc_id\\")\\n    @Id(generatorType = KeyGeneratorTypeEnum.AUTO)\\n    private Integer id;\\n    /**\\n     * \u624b\u673a\u53f7\\n     */\\n    @Column(name = \\"pc_phone\\")\\n    private String phone;\\n    /**\\n     * \u9a8c\u8bc1\u7801\u5185\u5bb9\\n     */\\n    @Column(name = \\"pc_code\\")\\n    private String code;\\n    /**\\n     * \u521b\u5efa\u65f6\u95f4\\n     */\\n    @Column(name = \\"pc_create_time\\")\\n    private Timestamp createTime;\\n}\\n```\\n\\n### \u9a8c\u8bc1\u7801\u6570\u636e\u63a5\u53e3\\n\\n\u4e3a`PhoneCode`\u9a8c\u8bc1\u7801\u6570\u636e\u5b9e\u4f53\u6dfb\u52a0\u4e00\u4e2a\u67e5\u8be2\u7684\u6570\u636e\u63a5\u53e3\uff0c\u5b9e\u73b0`ApiBoot MyBatis Enhance`\u63d0\u4f9b\u7684`EnhanceMapper<Entity,ID>`\u63a5\u53e3\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u624b\u673a\u53f7\u9a8c\u8bc1\u7801\u6570\u636e\u63a5\u53e3\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\npublic interface PhoneCodeEnhanceMapper extends EnhanceMapper<PhoneCode, Integer> {\\n    /**\\n     * \u67e5\u8be2\u624b\u673a\u53f7\u9a8c\u8bc1\u7801\u4fe1\u606f\\n     *\\n     * @param phone {@link PhoneCode#getPhone()}\\n     * @param code  {@link PhoneCode#getCode()}\\n     * @return {@link PhoneCode}\\n     */\\n    PhoneCode findByPhoneAndCode(@Param(\\"phone\\") String phone, @Param(\\"code\\") String code);\\n}\\n```\\n\\n\u901a\u8fc7`ApiBoot MyBatis Enhance`\u63d0\u4f9b\u7684\u65b9\u6cd5\u547d\u540d\u89c4\u5219\u67e5\u8be2\u8bed\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u6307\u5b9a\u7684`phone`\u3001`code`\u67e5\u8be2\u51fa\u5bf9\u5e94\u7684\u8bb0\u5f55\u3002\\n\\n### \u9a8c\u8bc1\u7801\u4e1a\u52a1\u903b\u8f91\\n\\n\u4e3a\u9a8c\u8bc1\u7801\u67e5\u8be2\u63d0\u4f9b\u4e00\u4e2a\u4e1a\u52a1\u903b\u8f91\u5b9e\u73b0\u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u9a8c\u8bc1\u7801\u4e1a\u52a1\u903b\u8f91\u5b9e\u73b0\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@Service\\npublic class PhoneCodeService {\\n    /**\\n     * \u624b\u673a\u53f7\u9a8c\u8bc1\u7801\u6570\u636e\u63a5\u53e3\\n     */\\n    @Autowired\\n    private PhoneCodeEnhanceMapper mapper;\\n\\n    /**\\n     * \u67e5\u8be2\u624b\u673a\u53f7\u9a8c\u8bc1\u7801\\n     *\\n     * @param phone {@link PhoneCode#getPhone()}\\n     * @param code  {@link PhoneCode#getCode()}\\n     * @return\\n     */\\n    public PhoneCode findPhoneCode(String phone, String code) {\\n        return mapper.findByPhoneAndCode(phone, code);\\n    }\\n}\\n```\\n\\n### \u4fee\u6539\u7528\u6237\u8868\u7ed3\u6784\\n\\n\u6211\u4eec\u5728[ApiBoot\u96f6\u4ee3\u7801\u6574\u5408Spring Security\u7684JDBC\u65b9\u5f0f\u83b7\u53d6AccessToken](https://blog.yuqiyu.com/apiboot-security-customize-select-user.html)\u6587\u7ae0\u5185\u521b\u5efa\u7684`system_user`\u7528\u6237\u8868\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```sql\\nalter table system_user\\n\\tadd su_phone varchar(11) null comment \'\u624b\u673a\u53f7\';\\n```\\n\\n\u5b57\u6bb5\u6dfb\u52a0\u540e\u521d\u59cb\u5316\u8868\u5185`yuqiyu`\u8fd9\u6761\u6570\u636e\u7684\u5217\u503c\uff0c\u6211\u5728`phone_code`\u8868\u5185\u6dfb\u52a0\u7684\u624b\u673a\u53f7\u4e3a`17111111111`\uff0c\u6240\u4ee5\u6211\u9700\u8981\u66f4\u65b0`su_phone`\u5b57\u6bb5\u7684\u503c\u4e3a`17111111111`\u3002\\n\\n## \u4e86\u89e3ApiBootOauthTokenGranter\\n\\n\u57fa\u7840\u7684\u4ee3\u7801\u5b9e\u73b0\u6211\u4eec\u90fd\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u4ecb\u7ecd\u4e0b\u672c\u7ae0\u7684\u4e3b\u89d2`ApiBootOauthTokenGranter`\u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u4e3a\u81ea\u5b9a\u4e49`GrantType`\u800c\u751f\uff0c\u7531`ApiBoot OAuth2`\u63d0\u4f9b\uff0c\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * ApiBoot Integrates Oauth2 to Realize Custom Authorization to Acquire Token\\n *\\n * @author\uff1a\u6052\u5b87\u5c11\u5e74 - \u4e8e\u8d77\u5b87\\n * <p>\\n * DateTime\uff1a2019-05-28 09:57\\n * Blog\uff1ahttp://blog.yuqiyu.com\\n * WebSite\uff1ahttp://www.jianshu.com/u/092df3f77bca\\n * Gitee\uff1ahttps://gitee.com/hengboy\\n * GitHub\uff1ahttps://github.com/hengboy\\n */\\npublic interface ApiBootOauthTokenGranter extends Serializable {\\n    /**\\n     * oauth2 grant type for ApiBoot\\n     *\\n     * @return grant type\\n     */\\n    String grantType();\\n\\n    /**\\n     * load userDetails by parameter\\n     *\\n     * @param parameters parameter map\\n     * @return UserDetails\\n     * @throws ApiBootTokenException\\n     * @see UserDetails\\n     */\\n    UserDetails loadByParameter(Map<String, String> parameters) throws ApiBootTokenException;\\n}\\n```\\n\\n- `grantType()`\uff1a\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7528\u4e8e\u544a\u77e5`OAuth2`\u81ea\u5b9a\u4e49\u7684`GrantType`\u662f\u4ec0\u4e48\uff0c\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u800c\u5b9a\u3002\\n- `loadByParameter`\uff1a\u8be5\u65b9\u6cd5\u662f\u81ea\u5b9a\u4e49`GrantType`\u7684\u4e1a\u52a1\u5b9e\u73b0\uff0c`parameters`\u53c2\u6570\u5185\u5305\u542b\u4e86\u81ea\u5b9a\u4e49\u6388\u6743\u8bf7\u6c42`/oauth/token`\u65f6\u6240\u643a\u5e26\u7684\u5168\u90e8\u53c2\u6570\uff0c\u5982\uff1a`/oauth/token?grant_type=phone_code&phone=xx&code=xx`\uff0c\u4f1a\u628a`phone`\u3001`code`\u53c2\u6570\u4e00\u5e76\u4f20\u9012\u7ed9\u8be5\u65b9\u6cd5\u3002\\n\\n## \u5b9e\u73b0\u77ed\u4fe1\u9a8c\u8bc1\u7801\u6388\u6743\u65b9\u5f0f\\n\\n\u4e0b\u9762\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`PhoneCodeGrantType`\u7684\u81ea\u5b9a\u4e49\u6388\u6743\u7c7b\uff0c\u5b9e\u73b0`ApiBootOauthTokenGranter`\u63a5\u53e3\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n\\n/**\\n * \u624b\u673a\u9a8c\u8bc1\u7801OAuth2\u7684\u8ba4\u8bc1\u65b9\u5f0f\u5b9e\u73b0\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n * @see ApiBootOauthTokenGranter\\n */\\n@Component\\npublic class PhoneCodeGrantType implements ApiBootOauthTokenGranter {\\n    /**\\n     * \u624b\u673a\u53f7\u9a8c\u8bc1\u7801\u65b9\u5f0f\u7684\u6388\u6743\u65b9\u5f0f\\n     */\\n    private static final String GRANT_TYPE_PHONE_CODE = \\"phone_code\\";\\n    /**\\n     * \u6388\u6743\u53c2\u6570\uff1a\u624b\u673a\u53f7\\n     */\\n    private static final String PARAM_PHONE = \\"phone\\";\\n    /**\\n     * \u6388\u6743\u53c2\u6570\uff1a\u9a8c\u8bc1\u7801\\n     */\\n    private static final String PARAM_CODE = \\"code\\";\\n    /**\\n     * \u624b\u673a\u53f7\u9a8c\u8bc1\u7801\u4e1a\u52a1\u903b\u8f91\\n     */\\n    @Autowired\\n    private PhoneCodeService phoneCodeService;\\n    /**\\n     * \u7cfb\u7edf\u7528\u6237\u4e1a\u52a1\u903b\u8f91\\n     */\\n    @Autowired\\n    private UserService userService;\\n\\n    @Override\\n    public String grantType() {\\n        return GRANT_TYPE_PHONE_CODE;\\n    }\\n\\n    /**\\n     * \u6839\u636e\u81ea\u5b9a\u4e49\u7684\u6388\u6743\u53c2\u6570\u8fdb\u884c\u67e5\u8be2\u7528\u6237\u4fe1\u606f\\n     *\\n     * @param parameters\\n     * @return\\n     * @throws ApiBootTokenException\\n     */\\n    @Override\\n    public UserDetails loadByParameter(Map<String, String> parameters) throws ApiBootTokenException {\\n        String phone = parameters.get(PARAM_PHONE);\\n        String code = parameters.get(PARAM_CODE);\\n        PhoneCode phoneCode = phoneCodeService.findPhoneCode(phone, code);\\n        if (ObjectUtils.isEmpty(phoneCode)) {\\n            throw new ApiBootTokenException(\\"\u767b\u5f55\u5931\u8d25\uff0c\u9a8c\u8bc1\u7801\uff1a\\" + code + \\"\uff0c\u5df2\u8fc7\u671f.\\");\\n        }\\n        UserDetails userDetails = userService.findByPhone(phone);\\n        if (ObjectUtils.isEmpty(userDetails)) {\\n            throw new ApiBootTokenException(\\"\u7528\u6237\uff1a\\" + phone + \\"\uff0c\u4e0d\u5b58\u5728.\\");\\n        }\\n        return userDetails;\\n    }\\n}\\n```\\n\\n\u5728`loadByParameter`\u65b9\u6cd5\u5185\uff0c\u6211\u4eec\u9996\u5148\u83b7\u53d6\u5230\u4e86\u672c\u6b21\u767b\u5f55\u7684\u624b\u673a\u53f7\uff08`phone`\uff09\u3001\u9a8c\u8bc1\u7801\uff08`code`\uff09\u8fd9\u4e24\u4e2a\u53c2\u6570\uff0c\u67e5\u8be2\u662f\u5426\u5b58\u5728\u8fd9\u6761\u9a8c\u8bc1\u7801\u7684\u8bb0\u5f55\uff08`PS\uff1a\u8fd9\u91cc\u6ca1\u505a\u9a8c\u8bc1\u7801\u8fc7\u671f\u65f6\u95f4\u9650\u5236\uff0c\u81ea\u5df1\u7684\u4e1a\u52a1\u8bf7\u628a\u8fd9\u5757\u52a0\u4e0a`\uff09\uff0c\u9a8c\u8bc1\u7801\u9a8c\u8bc1\u901a\u8fc7\u540e\u67e5\u8be2\u51fa\u624b\u673a\u53f7\u5bf9\u5e94\u7684\u7528\u6237\u4fe1\u606f\u5e76\u5c06\u7528\u6237\u8fd4\u56de\u4ea4\u4ed8\u7ed9`ApiBoot OAuth2`\u6846\u67b6\u6765\u5b8c\u6210\u9a8c\u8bc1\u3002\\n\\n\u5728\u9a8c\u8bc1\u4e1a\u52a1\u903b\u8f91\u65b9\u6cd5\u5185\u5982\u679c\u51fa\u73b0\u5f02\u5e38\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528`ApiBootTokenException`\u5f02\u5e38\u8fdb\u884c\u629b\u51fa\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u5c06\u6211\u4eec\u7684\u9879\u76ee\u8fd0\u884c\u8d77\u6765\uff0c\u4e0b\u9762\u901a\u8fc7`CURL`\u7684\u65b9\u5f0f\u5c1d\u8bd5\u83b7\u53d6`AccessToken`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\n\u279c ~ curl -X POST hengboy:chapter@localhost:9090/oauth/token -d \'grant_type=phone_code&phone=17111111111&code=123123\'\\n{\\"access_token\\":\\"30e3f7d0-8c53-4dfe-b1ff-523a1db7b9eb\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"4b1f0ad5-f869-46ca-8b45-0231e69316b3\\",\\"expires_in\\":7194,\\"scope\\":\\"api\\"}\\n```\\n\\n\u4f7f\u7528`postman`\u65b9\u5f0f\u83b7\u53d6`AccessToken`\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](/img/post/apiboot-define-oauth-grant-type-1.png)\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n\u672c\u7ae0\u6839\u636e`\u77ed\u4fe1\u9a8c\u8bc1\u7801\u767b\u5f55`\u7684\u4f8b\u5b50\u6765\u7ed9\u5927\u5bb6\u8bb2\u89e3\u4e86\u4f7f\u7528`ApiBoot OAuth2`\u600e\u4e48\u8fdb\u884c\u81ea\u5b9a\u4e49\u6388\u6743\u65b9\u5f0f\u6765\u83b7\u53d6`AccessToken`\uff0c\u4f8b\u5b50\u8bb2\u89e3\u6ce8\u91cd\u70b9\u662f\u5728\u81ea\u5b9a\u4e49`GrantType`\uff0c\u5728\u751f\u4ea7\u4f7f\u7528\u65f6\u8fd8\u8bf7\u6839\u636e\u5404\u79cd\u60c5\u51b5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u5b89\u5168\u6027\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-define-oauth-grant-type`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-security-oauth-custom-certification-user","metadata":{"permalink":"/blog/apiboot-security-oauth-custom-certification-user","source":"@site/blog/security/apiboot-security-oauth-custom-certification-user.md","title":"\u89c1\u8fc7\u8fd9\u4e48\u7b80\u5355\u7684\u65b9\u5f0f\u6574\u5408SpringSecurity & OAuth2\u7684\u81ea\u5b9a\u4e49\u67e5\u8be2\u7528\u6237\u5417\uff1f","description":"SpringSecurity\u6574\u5408OAuth2\u662f\u5f00\u53d1\u8005\u516c\u8ba4\u7684\u8d44\u6e90\u4fdd\u62a4\u3001\u670d\u52a1\u8ba4\u8bc1\u7684\u6700\u4f73\u642d\u914d\u4f19\u4f34\uff0c\u8fd9\u5bf9\u597d\u57fa\u53cb\u4e00\u76f4\u5728\u9ed8\u9ed8\u7684\u5b88\u62a4\u7740\u5e94\u7528\u670d\u52a1\u7684\u5b89\u5168\uff0c\u6839\u636e\u8bbf\u95ee\u8005\u7684\u4e0d\u540c\u89d2\u8272\u53ef\u4ee5\u9897\u7c92\u5ea6\u63a7\u5236\u5230\u5177\u4f53\u7684\u63a5\u53e3\uff0c\u4ece\u800c\u5b9e\u73b0\u6743\u9650\u7684\u7ec6\u5fae\u5212\u5206\u3002","date":"2019-12-02T14:51:51.000Z","formattedDate":"2019\u5e7412\u67082\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":12.24,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-security-oauth-custom-certification-user","title":"\u89c1\u8fc7\u8fd9\u4e48\u7b80\u5355\u7684\u65b9\u5f0f\u6574\u5408SpringSecurity & OAuth2\u7684\u81ea\u5b9a\u4e49\u67e5\u8be2\u7528\u6237\u5417\uff1f","authors":"hengboy","tags":["Spring","Spring Security","OAuth2"],"date":"2019-12-02T14:51:51.000Z"},"prevItem":{"title":"\u81ea\u5b9a\u4e49OAuth2\u77ed\u4fe1\u767b\u5f55GrantType","permalink":"/blog/apiboot-define-oauth-grant-type"},"nextItem":{"title":"ApiBoot\u96f6\u4ee3\u7801\u6574\u5408Spring Security\u7684JDBC\u65b9\u5f0f\u83b7\u53d6AccessToken","permalink":"/blog/apiboot-security-customize-select-user"}},"content":"`SpringSecurity`\u6574\u5408`OAuth2`\u662f\u5f00\u53d1\u8005\u516c\u8ba4\u7684`\u8d44\u6e90\u4fdd\u62a4`\u3001`\u670d\u52a1\u8ba4\u8bc1`\u7684\u6700\u4f73\u642d\u914d\u4f19\u4f34\uff0c\u8fd9\u5bf9\u597d\u57fa\u53cb\u4e00\u76f4\u5728\u9ed8\u9ed8\u7684\u5b88\u62a4\u7740\u5e94\u7528\u670d\u52a1\u7684\u5b89\u5168\uff0c\u6839\u636e\u8bbf\u95ee\u8005\u7684\u4e0d\u540c\u89d2\u8272\u53ef\u4ee5\u9897\u7c92\u5ea6\u63a7\u5236\u5230\u5177\u4f53\u7684\u63a5\u53e3\uff0c\u4ece\u800c\u5b9e\u73b0\u6743\u9650\u7684\u7ec6\u5fae\u5212\u5206\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n\u800c`SpringSecurity`\u6846\u67b6\u5728\u5b89\u5168\u6846\u67b6\u7684\u961f\u4f0d\u4e2d\u7b97\u662f\u5165\u95e8\u6bd4\u8f83\u9ad8\u7684\uff0c\u867d\u7136`Spring`\u901a\u8fc7`SpringBoot`\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4f46\u662f\u4f7f\u7528\u8d77\u6765\u8fd8\u662f\u6709\u5f88\u591a\u5bb9\u6613\u9057\u6f0f\u7684\u914d\u7f6e\uff0c\u56e0\u4e3a\u914d\u7f6e\u6bd4\u8f83\u591a\uff0c\u8ba9\u521d\u5b66\u8005\u7406\u89e3\u8d77\u6765\u4e5f\u6bd4\u8f83\u56f0\u96be\uff0c\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898`ApiBoot`\u5bf9`SpringSecurity`\u4ee5\u53ca`OAuth2`\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u5728\u57fa\u7840\u4e0a\u6781\u5927\u7684\u7b80\u5316\u4e86\u914d\u7f6e\uff08\u53ea\u505a\u7b80\u5316\u3001\u589e\u5f3a\uff0c`SpringSecurity`\u7684\u57fa\u7840\u8bed\u6cd5\u3001\u914d\u7f6e\u8fd8\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff09\\n\\n## ApiBoot Security \u7cfb\u5217\u6587\u7ae0\\n\\n- [ApiBoot\u5b9e\u73b0\u96f6\u4ee3\u7801\u6574\u5408Spring Security & OAuth2](https://blog.yuqiyu.com/apiboot-security-oauth-zero-code-integration.html)\\n- [ApiBoot\u96f6\u4ee3\u7801\u6574\u5408Spring Security\u7684JDBC\u65b9\u5f0f\u83b7\u53d6AccessToken](https://blog.yuqiyu.com/apiboot-security-customize-select-user.html)\\n\\n## \u521b\u5efa\u9879\u76ee\\n\u4f7f\u7528`IDEA`\u5f00\u53d1\u5de5\u5177\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\u3002\\n\\n> `ApiBoot`\u7684\u5e95\u5c42\u662f`SpringBoot`\uff0c\u800c\u4e14`ApiBoot`\u4e3a\u4e86\u652f\u6301`SpringBoot`\u7684`2.2.x`\u5206\u652f\uff0c\u4e5f\u5bf9\u5e94\u7684\u521b\u5efa\u4e86`2.2.x`\u5206\u652f\u7248\u672c\u3002\\n\\n### \u6dfb\u52a0ApiBoot\u7edf\u4e00\u4f9d\u8d56\\n\\n\u521b\u5efa\u5b8c\u9879\u76ee\u540e\u6211\u4eec\u9700\u8981\u5728`pom.xml`\u6dfb\u52a0`ApiBoot`\u7684\u7edf\u4e00\u7248\u672c\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.2.0.RELEASE</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n### \u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\\n\\n\u672c\u7ae0\u6211\u4eec\u9700\u8981\u67e5\u8be2\u6570\u636e\u5e93\u5185\u7684\u7528\u6237\u4fe1\u606f\u8fdb\u884c\u8ba4\u8bc1\uff0c\u6240\u4ee5\u9700\u8981\u5728`pom.xml`\u6dfb\u52a0\u6570\u636e\u5e93\u76f8\u5173\u7684\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>mysql</groupId>\\n    <artifactId>mysql-connector-java</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>com.zaxxer</groupId>\\n    <artifactId>HikariCP</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-mybatis-enhance</artifactId>\\n  </dependency>\\n</dependencies>\\n```\\n\\n\u5728\u672c\u7ae0\u4f7f\u7528\u5230\u4e86`ApiBoot Mybatis Enhance`\uff0c\u5177\u4f53\u7684\u4f7f\u7528\u8bf7\u8bbf\u95ee\u5b98\u65b9\u6587\u6863[ApiBoot MyBatis Enhance\u4f7f\u7528\u6587\u6863](https://apiboot.minbox.org/docs/components/api-boot-mybatis-enhance.html)\\n\\n### \u914d\u7f6e\u6570\u636e\u6e90\\n\\n\u6dfb\u52a0\u6570\u636e\u5e93\u76f8\u5173\u7684\u4f9d\u8d56\u540e\uff0c\u5728`application.yml`\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u4fe1\u606f\uff1a\\n\\n```yaml\\nspring:\\n  application:\\n    name: apiboot-security-oauth-custom-certification-user\\n  # \u6570\u636e\u6e90\u914d\u7f6e\\n  datasource:\\n    type: com.zaxxer.hikari.HikariDataSource\\n    url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf8&serverTimezone=Asia/Shanghai\\n    username: root\\n    password: 123456\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\nserver:\\n  port: 9090\\n```\\n\\n\\n\\n### \u914d\u7f6eApiBoot Security\\n\\n`ApiBoot Security`\u9ed8\u8ba4\u91c7\u7528\u7684\u662f`\u5185\u5b58\u65b9\u5f0f`\uff08memory\uff09\u8bfb\u53d6\u7528\u6237\u4fe1\u606f\uff0c\u6211\u4eec\u672c\u7ae0\u9700\u8981\u4fee\u6539\u4e3a`JDBC`\u65b9\u5f0f\uff0c\u5e76\u4e14`\u7981\u7528\u9ed8\u8ba4\u8bfb\u53d6\u7528\u6237\u4fe1\u606f`\uff08`ApiBoot Security`\u5185\u90e8\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u7684\u8868\u7ed3\u6784\uff0c\u5efa\u8868\u540e\u6dfb\u52a0\u6570\u636e\u5373\u53ef\u76f4\u63a5\u4f7f\u7528\u7528\u6237\u4fe1\u606f\u8fdb\u884c\u8ba4\u8bc1\uff0c\u8be6\u89c1\uff1a[ApiBoot Security\u4f7f\u7528\u6587\u6863](https://apiboot.minbox.org/docs/components/api-boot-security.html)\uff09\u3002\\n\\n\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a\\n\\n```yaml\\n# ApiBoot\u914d\u7f6e\\napi:\\n  boot:\\n    security:\\n      # ApiBoot Security \u4f7f\u7528JDBC\u65b9\u5f0f\u8bfb\u53d6\u7528\u6237\\n      away: jdbc\\n      # \u7981\u7528\u9ed8\u8ba4\u7684\u8bfb\u53d6\u7528\u6237\u65b9\u5f0f\\n      enable-default-store-delegate: false\\n```\\n\\n`api.boot.security.enable-default-store-delegate`\u914d\u7f6e\u53c2\u6570\u9ed8\u8ba4\u503c\u4e3a`true`\uff0c\u4e5f\u5c31\u662f\u4f1a\u81ea\u52a8\u8bfb\u53d6\u6570\u636e\u6e90\u5bf9\u5e94\u6570\u636e\u5e93\u5185\u7684`api_boot_user_info`\u7528\u6237\u4fe1\u606f\u8868\uff0c\u5f53\u6211\u4eec\u8bbe\u7f6e\u4e3a`false`\u540e\u9700\u8981\u901a\u8fc7\u5b9e\u73b0`ApiBootStoreDelegate`\u63a5\u53e3\u6765\u8fdb\u884c\u81ea\u5b9a\u4e49\u67e5\u8be2\u7684\u7528\u6237\u4fe1\u606f\u3002\\n\\n### \u914d\u7f6eApiBoot OAuth\\n\\n`api-boot-starter-security-oauth-jwt`\u8fd9\u4e2a\u4f9d\u8d56\u5185\u90e8\u4e5f\u9ed8\u8ba4\u96c6\u6210\u4e86`OAuth2`\uff0c\u800c\u4e14\u9ed8\u8ba4\u7684\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u4e0e`Spring Security`\u4e00\u81f4\u4e5f\u662f\u5185\u5b58\u65b9\u5f0f\uff08`memory`\uff09\uff0c\u6211\u4eec\u672c\u7ae0\u7684\u4e3b\u8981\u76ee\u7684\u662f\u67e5\u8be2`\u8ba4\u8bc1\u7528\u6237\u4fe1\u606f`\uff0c\u800c\u4e0d\u662f`\u5ba2\u6237\u7aef\u4fe1\u606f`\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u91c7\u7528\u9ed8\u8ba4\u7684\u5185\u5b58\u65b9\u5f0f\uff0c\u4e0d\u8fc7\u4fee\u6539\u4e0b\u5ba2\u6237\u7aef\u7684\u9ed8\u8ba4\u914d\u7f6e\u4fe1\u606f\uff0c\u5728`application.yml`\u6587\u4ef6\u5185\u6dfb\u52a0\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# ApiBoot\u914d\u7f6e\\napi:\\n  boot:\\n    oauth:\\n      # ApiBoot OAuth2\u7684\u5ba2\u6237\u7aef\u5217\u8868\\n      clients:\\n        - clientId: hengboy\\n          clientSecret: chapter\\n          grantTypes: password,refresh_token\\n```\\n\\n> \u5728`ApiBoot`\u4e2d`OAuth2`\u9ed8\u8ba4\u7684\u5ba2\u6237\u7aef\u914d\u7f6e\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b`org.minbox.framework.api.boot.autoconfigure.oauth.ApiBootOauthProperties.Client`\u6e90\u7801\u4e86\u89e3\u8be6\u60c5\u3002\\n\\n## \u7528\u6237\u8ba4\u8bc1\\n\\n\u914d\u7f6e\u5df2\u7ecf\u5b8c\u6210\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u7f16\u5199\u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u5c06\u7528\u6237\u4fe1\u606f\u4ea4\u7ed9`ApiBoot Security`\u6846\u67b6\u8fdb\u884c`\u8ba4\u8bc1`\u3001`\u751f\u6210AccessToken`\u7b49\u64cd\u4f5c\u3002\\n\\n\u672c\u7ae0\u4f7f\u7528\u7684\u6301\u4e45\u5316\u6846\u67b6\u662f`ApiBoot MyBatis Enhance`\uff0c\u5177\u4f53\u7684\u4f7f\u7528\u65b9\u6cd5\u8bf7\u67e5\u770b[\u5b98\u65b9\u6587\u6863](https://apiboot.minbox.org/docs/components/api-boot-mybatis-enhance.html)\u3002\\n\\n### \u521b\u5efa\u7528\u6237\u8868\\n\\n\u6211\u4eec\u5728\u6570\u636e\u5e93\u5185\u521b\u5efa\u4e00\u5f20\u540d\u4e3a`system_user`\u7684\u7cfb\u7edf\u7528\u6237\u4fe1\u606f\u8868\uff0c\u8868\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```sql\\nCREATE TABLE `system_user` (\\n  `su_id` varchar(36) COLLATE utf8mb4_general_ci NOT NULL COMMENT \'\u7528\u6237\u7f16\u53f7\',\\n  `su_login_name` varchar(30) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u767b\u5f55\u540d\',\\n  `su_nick_name` varchar(30) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u6635\u79f0\',\\n  `su_password` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u7528\u6237\u5bc6\u7801\',\\n  `su_create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT \'\u521b\u5efa\u65f6\u95f4\',\\n  `su_status` int(11) DEFAULT \'1\' COMMENT \'\u7528\u6237\u72b6\u6001\uff0c1\uff1a\u6b63\u5e38\uff0c0\uff1a\u51bb\u7ed3\uff0c-1\uff1a\u5df2\u5220\u9664\',\\n  PRIMARY KEY (`su_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT=\'\u7cfb\u7edf\u7528\u6237\u4fe1\u606f\u8868\';\\n```\\n\\n`system_user`\u7528\u6237\u8868\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5f80\u8fd9\u5f20\u8868\u5185\u6dfb\u52a0\u4e00\u6761\u7528\u6237\u6570\u636e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```sql\\nINSERT INTO `system_user` VALUES (\'9b69fd26-14db-11ea-b743-dcd28627348e\',\'yuqiyu\',\'\u6052\u5b87\u5c11\u5e74 - \u4e8e\u8d77\u5b87\',\'$2a$10$RbJGpi.v3PwkjrYENzOzTuMxazuanX3Qa2hwI/f55cYsZhFT/nX3.\',\'2019-12-02 08:13:22\',1);\\n```\\n\\n\u6211\u4eec\u5728\u767b\u5f55\u65f6\u7528\u6237\u540d\u5bf9\u5e94`su_login_name`\u5b57\u6bb5\uff0c\u800c\u5bc6\u7801\u5219\u662f\u5bf9\u5e94`su_password`\u5b57\u6bb5\uff0c`yuqiyu`\u8fd9\u4e2a\u7528\u6237\u7684\u5bc6\u7801\u521d\u59cb\u5316\u4e3a`123456`\uff0c\u5bc6\u7801\u7684\u683c\u5f0f\u5fc5\u987b\u4e3a`BCryptPasswordEncoder`\u52a0\u5bc6\u540e\u7684\u5bc6\u6587\u3002\\n\\n### \u521b\u5efa\u7528\u6237\u5b9e\u4f53\\n\\n\u9488\u5bf9`system_user`\u8868\u6211\u4eec\u9700\u8981\u6765\u521b\u5efa\u4e00\u4e2a`ApiBoot MyBatis Enhance`\u4f7f\u7528\u7684\u5b9e\u4f53\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`SystemUser`\u7684\u5b9e\u4f53\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n\\n/**\\n * \u7cfb\u7edf\u7528\u6237\u57fa\u672c\u4fe1\u606f\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@Data\\n@Table(name = \\"system_user\\")\\npublic class SystemUser implements UserDetails {\\n    /**\\n     * \u7528\u6237\u7f16\u53f7\\n     */\\n    @Id(generatorType = KeyGeneratorTypeEnum.UUID)\\n    @Column(name = \\"su_id\\")\\n    private String userId;\\n    /**\\n     * \u767b\u5f55\u540d\\n     */\\n    @Column(name = \\"su_login_name\\")\\n    private String loginName;\\n    /**\\n     * \u6635\u79f0\\n     */\\n    @Column(name = \\"su_nick_name\\")\\n    private String nickName;\\n    /**\\n     * \u5bc6\u7801\\n     */\\n    @Column(name = \\"su_password\\")\\n    private String password;\\n    /**\\n     * \u521b\u5efa\u65f6\u95f4\\n     */\\n    @Column(name = \\"su_create_time\\")\\n    private String createTime;\\n    /**\\n     * \u7528\u6237\u72b6\u6001\\n     * 1\uff1a\u6b63\u5e38\uff0c0\uff1a\u5df2\u51bb\u7ed3\uff0c-1\uff1a\u5df2\u5220\u9664\\n     */\\n    @Column(name = \\"su_status\\")\\n    private Integer status;\\n\\n    @Override\\n    public Collection<? extends GrantedAuthority> getAuthorities() {\\n        return Collections.EMPTY_LIST;\\n    }\\n\\n    @Override\\n    public String getUsername() {\\n        return this.loginName;\\n    }\\n\\n    @Override\\n    public String getPassword() {\\n        return this.password;\\n    }\\n\\n    /**\\n     * UserDetails\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u7528\u6237\u662f\u5426\u672a\u8fc7\u671f\\n     * \u53ef\u6839\u636e\u81ea\u5df1\u7528\u6237\u6570\u636e\u8868\u5185\u7684\u5b57\u6bb5\u8fdb\u884c\u6269\u5c55\uff0c\u8fd9\u91cc\u4e3a\u4e86\u6f14\u793a\u914d\u7f6e\u4e3atrue\\n     *\\n     * @return\\n     */\\n    @Override\\n    public boolean isAccountNonExpired() {\\n        return true;\\n    }\\n\\n    /**\\n     * UserDetails\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u7528\u6237\u662f\u5426\u672a\u9501\u5b9a\\n     * \u53ef\u6839\u636e\u81ea\u5df1\u7528\u6237\u6570\u636e\u8868\u5185\u7684\u5b57\u6bb5\u8fdb\u884c\u6269\u5c55\uff0c\u8fd9\u91cc\u4e3a\u4e86\u6f14\u793a\u914d\u7f6e\u4e3atrue\\n     *\\n     * @return\\n     */\\n    @Override\\n    public boolean isAccountNonLocked() {\\n        return true;\\n    }\\n\\n    /**\\n     * UserDetails\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u51ed\u8bc1\u662f\u5426\u672a\u8fc7\u671f\\n     * \u53ef\u6839\u636e\u81ea\u5df1\u7528\u6237\u6570\u636e\u8868\u5185\u7684\u5b57\u6bb5\u8fdb\u884c\u6269\u5c55\uff0c\u8fd9\u91cc\u4e3a\u4e86\u6f14\u793a\u914d\u7f6e\u4e3atrue\\n     *\\n     * @return\\n     */\\n    @Override\\n    public boolean isCredentialsNonExpired() {\\n        return true;\\n    }\\n\\n    /**\\n     * UserDetails\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u662f\u5426\u542f\u7528\\n     *\\n     * @return\\n     */\\n    @Override\\n    public boolean isEnabled() {\\n        return this.status == 1;\\n    }\\n}\\n```\\n\\n\u5177\u4f53\u7684\u6ce8\u89e3\u4f7f\u7528\u8be6\u89c1`ApiBoot MyBatis Enhance`\u6587\u6863\uff0c\u8fd9\u91cc\u8fd8\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c`SystemUser`\u5b9e\u73b0\u4e86`UserDetails`\u63a5\u53e3\uff0c\u5982\u679c\u4f7f\u7528\u8fc7`Spring Security`\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u77e5\u9053\u8fd9\u662f`Spring Security`\u63d0\u4f9b\u7684\u7528\u6237\u8be6\u60c5\u63a5\u53e3\u5b9a\u4e49\uff0c\u6211\u4eec\u5982\u679c`\u81ea\u5b9a\u4e49\u67e5\u8be2\u7528\u6237`\u5c31\u5e94\u8be5\u8ba9\u6211\u4eec`\u81ea\u5b9a\u4e49\u7684\u7528\u6237\u5b9e\u4f53`\uff08\u6ce8\uff1a\u8fd9\u662f\u7684\u81ea\u5b9a\u4e49\u7528\u6237\u5b9e\u4f53\u4e5f\u5c31\u662fSystemUser\u5b9e\u4f53\uff09\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u5e76\u5168\u90e8\u5b9e\u73b0`UserDetails`\u63a5\u53e3\u5185\u63d0\u4f9b\u7684\u65b9\u6cd5\u3002\\n\\n### \u521b\u5efa\u7528\u6237\u6570\u636e\u63a5\u53e3\\n\\n\u7528\u6237\u7684\u5b9e\u4f53\u5df2\u7ecf\u521b\u5efa\u5b8c\u6210\uff0c\u6211\u4eec\u672c\u7ae0\u9700\u8981\u4e00\u4e2a\u6839\u636e\u7528\u6237\u7684`\u767b\u5f55\u540d`\u6765\u67e5\u8be2\u7528\u6237\u57fa\u672c\u7684\u6570\u636e\u63a5\u53e3\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`SystemUserEnhanceMapper`\u7684\u63a5\u53e3\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * ApiBoot Enhance\u63d0\u4f9b\u7684\u589e\u5f3aMapper\\n * \u81ea\u52a8\u88ab\u626b\u63cf\u5e76\u4e14\u6ce8\u518c\u5230IOC\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n * @see org.minbox.framework.api.boot.autoconfigure.enhance.ApiBootMyBatisEnhanceAutoConfiguration\\n */\\npublic interface SystemUserEnhanceMapper extends EnhanceMapper<SystemUser, Integer> {\\n    /**\\n     * \u6839\u636e\u7528\u6237\u767b\u5f55\u540d\u67e5\u8be2\u7528\u6237\u4fe1\u606f\\n     *\\n     * @param loginName {@link SystemUser#getLoginName()}\\n     * @return {@link SystemUser}\\n     */\\n    SystemUser findByLoginName(@Param(\\"loginName\\") String loginName);\\n}\\n```\\n\\n\u8be5\u63a5\u53e3\u7ee7\u627f\u4e86`EnhanceMapper<Entity,ID>`\u63a5\u53e3\uff0c\u53ef\u4ee5\u81ea\u52a8\u88ab\u626b\u63cf\u5230`\u521b\u5efa\u4ee3\u7406\u7684\u5b9e\u4f8b`\u540e\u5e76\u4e14\u52a0\u5165`IOC`\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u9879\u76ee\u5176\u4ed6\u7684\u5730\u65b9\u53ef\u4ee5\u76f4\u63a5\u6ce8\u5165\u4f7f\u7528\u3002\\n\\n> \u6ce8\u610f\uff1a`findByXxx`\u65b9\u6cd5\u662f`ApiBoot MyBatis Enhance`\u63d0\u4f9b\u7684\u65b9\u6cd5\u547d\u540d\u89c4\u5219\u67e5\u8be2\uff0c\u591a\u4e2a\u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u4f7f\u7528`And`\u6216\u8005`Or`\u8ffd\u52a0\uff0c\u4f1a\u81ea\u52a8\u6839\u636e\u65b9\u6cd5\u7684\u89c4\u5219\u751f\u6210\u5bf9\u5e94\u7684`SQL`\u3002\\n\\n### \u5b9e\u73b0ApiBootStoreDelegate\u63a5\u53e3\\n\\n`ApiBoot Security`\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3`ApiBootStoreDelegate`\uff0c\u8fd9\u4e2a\u63a5\u53e3\u4e3b\u8981\u662f\u7528\u6765\u67e5\u8be2\u767b\u5f55\u7528\u6237\u7684\u5177\u4f53\u4fe1\u606f\u7684\u4f5c\u7528\uff0c\u5f53\u6211\u4eec\u901a\u8fc7`grant_type=password&username=xxx`\u7684\u65b9\u5f0f\u8fdb\u884c\u83b7\u53d6`AccessToken`\u65f6\uff0c`ApiBoot Security`\u4f1a\u76f4\u63a5\u628a`username`\u7684\u53c2\u6570\u503c\u4f20\u9012\u7ed9`ApiBootStoreDelegate#loadUserByUsername`\u7684\u65b9\u6cd5\u5185\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e`username`\u8fdb\u884c\u67e5\u8be2\u7528\u6237\u5e76\u8fd4\u56de\u7ed9`ApiBoot Security`\u505a\u540e\u7eed\u7684\u8ba4\u8bc1\u64cd\u4f5c\u3002\\n\\n\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`UserService`\u7684\u7c7b\u5e76\u5b9e\u73b0`ApiBootStoreDelegate`\u63a5\u53e3\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n\\n/**\\n * \u81ea\u5b9a\u4e49\u8bfb\u53d6\u7528\u6237\u4fe1\u606f\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@Service\\npublic class UserService implements ApiBootStoreDelegate {\\n    /**\\n     * logger instance\\n     */\\n    static Logger logger = LoggerFactory.getLogger(UserService.class);\\n    /**\\n     * \u7528\u6237\u6570\u636e\u63a5\u53e3\\n     */\\n    @Autowired\\n    private SystemUserEnhanceMapper mapper;\\n\\n    @Override\\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\\n        UserDetails userDetails = mapper.findByLoginName(username);\\n        if (ObjectUtils.isEmpty(userDetails)) {\\n            throw new UsernameNotFoundException(\\"\u7528\u6237\uff1a\\" + username + \\"\uff0c\u4e0d\u5b58\u5728.\\");\\n        }\\n        logger.info(\\"\u767b\u5f55\u7528\u6237\u7684\u4fe1\u606f\uff1a{}\\", JSON.toJSONString(userDetails));\\n        return userDetails;\\n    }\\n}\\n```\\n\\n`loadUserByUsername`\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u662f`UserDetails`\u63a5\u53e3\u7c7b\u578b\uff0c\u5728\u4e4b\u524d\u6211\u4eec\u5df2\u7ecf\u5c06`SystemUser`\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06`SystemUser`\u5b9e\u4f8b\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u4ee3\u7801\u4e00\u5207\u5c31\u7eea\uff0c\u901a\u8fc7`XxxxApplication`\u7684\u65b9\u5f0f\u6765\u542f\u52a8\u9879\u76ee\u3002\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u83b7\u53d6AccessToken\\n\\n\u5728\u83b7\u53d6`AccessToken`\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u786e\u8ba4`application.yml`\u6587\u4ef6\u5185\u914d\u7f6e\u7684`api.boot.oauth.clients`\u7684\u5ba2\u6237\u7aef\u7684`clientId`\u3001`clientSecret`\u914d\u7f6e\u5185\u5bb9\uff0c\u4e0b\u9762\u662f\u901a\u8fc7`CURL`\u7684\u65b9\u5f0f\uff1a\\n\\n```json\\n\u279c ~ curl hengboy:chapter@localhost:9090/oauth/token -d \'grant_type=password&username=yuqiyu&password=123456\'\\n{\\"access_token\\":\\"3beb1bee-9ca6-45e1-9fb8-5fc181670f63\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"d2243e18-8ab3-4842-a98f-ebd79da94e2e\\",\\"expires_in\\":7199,\\"scope\\":\\"api\\"}\\n```\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u5237\u65b0AccessToken\\n\\n\u590d\u5236\u4e0a\u9762\u83b7\u53d6\u5230\u7684`refresh_token`\u7684\u503c\u8fdb\u884c\u5237\u65b0\uff0c\u4e0b\u9762\u662f\u5237\u65b0`AccessToken`\u7684`CURL`\u65b9\u5f0f\uff1a\\n\\n```json\\n\u279c ~ curl hengboy:chapter@localhost:9090/oauth/token -d \'grant_type=refresh_token&refresh_token=d2243e18-8ab3-4842-a98f-ebd79da94e2e\'\\n{\\"access_token\\":\\"e842c2ee-5672-49db-a530-329186f36492\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"d2243e18-8ab3-4842-a98f-ebd79da94e2e\\",\\"expires_in\\":7199,\\"scope\\":\\"api\\"}\\n```\\n\\n\\n\\n> `hengboy`\u8fd9\u4e2a`OAuth2`\u5ba2\u6237\u7aef\u5728`application.yml`\u4e2d\u901a\u8fc7\u914d\u7f6e`grantTypes`\u6388\u6743\u4e86\u4e24\u79cd`grant_type`\uff0c\u5206\u522b\u662f`password`\u3001`refresh_token`\uff0c\u5982\u679c\u9700\u8981\u522b\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u5185\u5bf9\u5e94\u6dfb\u52a0\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot`\u6574\u5408`Spring Security`\u4ee5\u53ca`OAuth2`\u540e\u8bfb\u53d6\u81ea\u5b9a\u4e49\u7528\u6237\u4fe1\u606f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u5177\u4f53\u600e\u4e48\u8bfb\u53d6\u7528\u6237\u4fe1\u606f\uff0c\u4e4b\u524d\u90a3\u4e9b\u61f5\u61f5\u61c2\u61c2\u7684\u4ee3\u7801\u914d\u7f6e\u90fd\u53ef\u4ee5\u901a\u8fc7`\u914d\u7f6e\u6587\u4ef6`\u7684\u65b9\u5f0f**\u4ee3\u66ff**\uff0c\u672c\u7ae0\u7684\u4e3b\u8981\u5185\u5bb9\u662f`ApiBootStoreDelegate`\u8fd9\u4e2a\u63a5\u53e3\uff0c`ApiBoot`\u6240\u63d0\u4f9b\u7684\u529f\u80fd\u8fd8\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u4f1a\u9646\u7eed\u5206\u4eab\u7ed9\u5927\u5bb6\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-security-oauth-custom-certification-user`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-security-customize-select-user","metadata":{"permalink":"/blog/apiboot-security-customize-select-user","source":"@site/blog/security/apiboot-security-customize-select-user.md","title":"ApiBoot\u96f6\u4ee3\u7801\u6574\u5408Spring Security\u7684JDBC\u65b9\u5f0f\u83b7\u53d6AccessToken","description":"ApiBoot Security\u5185\u90e8\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u8bfb\u53d6\u9700\u8981\u8ba4\u8bc1\u7684\u7528\u6237\u4fe1\u606f\uff0c\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u8bb2\u5230\u8fc7ApiBoot Security\u4f7f\u7528\u5185\u5b58\u65b9\u5f0f\uff08memory\uff09\u4e0d\u5199\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7528\u6237\u7684\u8ba4\u8bc1\u5e76\u83b7\u53d6AccessToken\uff0c\u90a3\u6211\u4eec\u4f7f\u7528JDBC\u65b9\u5f0f\u662f\u4e0d\u662f\u4e5f\u662f\u8fd9\u4e48\u7684\u7b80\u5355\u5462\uff1f","date":"2019-11-29T12:34:41.000Z","formattedDate":"2019\u5e7411\u670829\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":5.725,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-security-customize-select-user","title":"ApiBoot\u96f6\u4ee3\u7801\u6574\u5408Spring Security\u7684JDBC\u65b9\u5f0f\u83b7\u53d6AccessToken","authors":"hengboy","tags":["Spring","Spring Security","OAuth2"],"date":"2019-11-29T12:34:41.000Z"},"prevItem":{"title":"\u89c1\u8fc7\u8fd9\u4e48\u7b80\u5355\u7684\u65b9\u5f0f\u6574\u5408SpringSecurity & OAuth2\u7684\u81ea\u5b9a\u4e49\u67e5\u8be2\u7528\u6237\u5417\uff1f","permalink":"/blog/apiboot-security-oauth-custom-certification-user"},"nextItem":{"title":"\u96f6\u4ee3\u7801\u6574\u5408Spring Security & OAuth2","permalink":"/blog/apiboot-security-oauth-zero-code-integration"}},"content":"`ApiBoot Security`\u5185\u90e8\u63d0\u4f9b\u4e86**\u4e24\u79cd\u65b9\u5f0f**\u8fdb\u884c\u8bfb\u53d6\u9700\u8981\u8ba4\u8bc1\u7684\u7528\u6237\u4fe1\u606f\uff0c\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u8bb2\u5230\u8fc7`ApiBoot Security`\u4f7f\u7528`\u5185\u5b58\u65b9\u5f0f\uff08memory\uff09`**\u4e0d\u5199\u4e00\u884c\u4ee3\u7801**\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7528\u6237\u7684\u8ba4\u8bc1\u5e76\u83b7\u53d6`AccessToken`\uff0c\u90a3\u6211\u4eec\u4f7f\u7528`JDBC`\u65b9\u5f0f\u662f\u4e0d\u662f\u4e5f\u662f\u8fd9\u4e48\u7684\u7b80\u5355\u5462\uff1f\\n\x3c!--truncate--\x3e\\n\u5982\u679c\u4f60\u8fd8\u5bf9`ApiBoot`\u4e0d\u4e86\u89e3\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u9014\u5f84\u6765\u83b7\u53d6\u5e2e\u52a9\u3002\\n- \u5b98\u65b9\u6587\u6863\uff1a[https://apiboot.minbox.org](https://apiboot.minbox.org/zh-cn/index.html)\\n- \u6e90\u7801\uff1a[https://gitee.com/minbox-projects/api-boot](https://gitee.com/minbox-projects/api-boot)\\n\\n## ApiBoot Security\u7684\u8ba4\u8bc1\u65b9\u5f0f\\n\u6709\u4e00\u4e9b\u540c\u5b66\u53ef\u80fd\u5bf9`ApiBoot Security`\u7684\u4e24\u79cd\u8ba4\u8bc1\u65b9\u5f0f\u8fd8\u4e0d\u592a\u4e86\u89e3\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e0b\u8fd9\u4e24\u79cd\u8ba4\u8bc1\u65b9\u5f0f\u7684\u533a\u522b\u3002\\n### \u5185\u5b58\u65b9\u5f0f\\n`\u5185\u5b58\u65b9\u5f0f\uff08memory\uff09`\u662f\u5c06\u7528\u6237\u4fe1\u606f\uff08\u7528\u6237\u540d\u3001\u5bc6\u7801\u3001\u89d2\u8272\u5217\u8868\uff09\u5728`application.yml`\u6587\u4ef6\u5185\u914d\u7f6e\uff0c\u53ef\u914d\u7f6e\u591a\u4e2a\u7528\u6237\uff0c\u9879\u76ee\u542f\u52a8\u540e\u5c06\u7528\u6237\u4fe1\u606f\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u7528\u4e8e\u83b7\u53d6`AccessToken`\u65f6\u7684\u8ba4\u8bc1\u3002\\n### \u6570\u636e\u5e93\u65b9\u5f0f\\n`\u6570\u636e\u5e93\u65b9\u5f0f\uff08jdbc\uff09`\u662f\u5c06\u7528\u6237\u4fe1\u606f\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u5185\uff0c`ApiBoot Security`\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u8868\u7ed3\u6784\u7684`\u7528\u6237\u4fe1\u606f\u6570\u636e\u8868`\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5b98\u7f51\u627e\u5230[\u5efa\u8868\u8bed\u53e5](https://apiboot.minbox.org/docs/components/api-boot-security.html)\u76f4\u63a5\u5728\u81ea\u5df1\u7684\u6570\u636e\u5e93\u5185\u521b\u5efa\u5373\u53ef\uff0c\u5f53\u7136\u5982\u679c\u4e0d\u4f7f\u7528\u9ed8\u8ba4\u7684\u8868\u7ed3\u6784\u53ef\u4ee5\u8fdb\u884c\u81ea\u5b9a\u4e49\u8bfb\u53d6\u7528\u6237\u4fe1\u606f\u3002\\n\\n> \u6ce8\u610f\uff1a\u5728\u6570\u636e\u5e93\u5185\u5b58\u653e\u7528\u6237\u7684`\u5bc6\u7801`\u5fc5\u987b\u662f\u901a\u8fc7`BCryptPasswordEncoder`\u52a0\u5bc6\u540e\u7684\u5bc6\u6587\u5b57\u7b26\u4e32\u3002\\n\\n## \u521b\u5efa\u9879\u76ee\\n\u5bf9`ApiBoot Security`\u7684\u4e24\u79cd\u8ba4\u8bc1\u65b9\u5f0f\u6982\u5ff5\u660e\u767d\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u8bf4\u4e0b\u600e\u4e48\u624d\u80fd\u4f7f\u7528`JDBC`\u65b9\u5f0f\u8fdb\u884c\u7528\u6237\u8ba4\u8bc1\uff0c\u6211\u4eec\u5148\u6765\u4f7f\u7528`IDEA`\u5f00\u53d1\u5de5\u5177\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\u3002\\n### \u6dfb\u52a0ApiBoot\u7edf\u4e00\u7248\u672c\\n\u5728\u4f7f\u7528`ApiBoot`\u5185\u63d0\u4f9b\u7684\u7ec4\u4ef6\u4f9d\u8d56\u65f6\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5728`pom.xml`\u6587\u4ef6\u5185\u6dfb\u52a0`ApiBoot\u7edf\u4e00\u7248\u672c`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n```xml\\n<properties>\\n    <java.version>1.8</java.version>\\n    \x3c!--ApiBoot\u7248\u672c\u53f7--\x3e\\n    <apiboot.version>2.1.5.RELEASE</apiboot.version>\\n</properties>\\n<dependencyManagement>\\n    <dependencies>\\n        \x3c!--ApiBoot\u7248\u672c\u4f9d\u8d56--\x3e\\n        <dependency>\\n            <groupId>org.minbox.framework</groupId>\\n            <artifactId>api-boot-dependencies</artifactId>\\n            <version>${apiboot.version}</version>\\n            <type>pom</type>\\n            <scope>import</scope>\\n        </dependency>\\n    </dependencies>\\n</dependencyManagement>\\n```\\n### \u6dfb\u52a0ApiBoot Security\u4f9d\u8d56\\n\u5728\u9879\u76ee`pom.xml`\u6587\u4ef6\u6dfb\u52a0`ApiBoot Security`\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n```xml\\n\x3c!--ApiBoot Security OAuth--\x3e\\n<dependency>\\n  <groupId>org.minbox.framework</groupId>\\n  <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n</dependency>\\n```\\n### \u6dfb\u52a0JDBC\u76f8\u5173\u4f9d\u8d56\\n\\n\u6211\u4eec\u672c\u7ae0\u4f7f\u7528`MySQL`\u6570\u636e\u5e93\u505a\u6f14\u793a\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u76f8\u5173\u7684`\u6570\u636e\u5e93\u4f9d\u8d56`\u4ee5\u53ca\u6570\u636e\u5e93`\u8fde\u63a5\u6c60\u4f9d\u8d56`\uff0c\u7531\u4e8e`ApiBoot Security`\u8bfb\u53d6\u5185\u7f6e\u7684\u9ed8\u8ba4\u7528\u6237\u8868\u7ed3\u6784\u4f7f\u7528\u7684\u662f`DataSource`\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u53ef\u4ee5\u5b9e\u4f8b\u5316`DataSource`\u7684\u4f9d\u8d56\uff0c\u53ef\u4ee5\u9009\u62e9`api-boot-starter-mybatis-enhance`\u6216\u8005`spring-boot-starter-jdbc`\uff0c\u5728`pom.xml`\u6dfb\u52a0\u4f9d\u8d56\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n\x3c!--SpringBoot Web--\x3e\\n<dependency>\\n  <groupId>org.springframework.boot</groupId>\\n  <artifactId>spring-boot-starter-web</artifactId>\\n</dependency>\\n\x3c!--MySQL--\x3e\\n<dependency>\\n  <groupId>mysql</groupId>\\n  <artifactId>mysql-connector-java</artifactId>\\n</dependency>\\n\\n\x3c!--Hikari--\x3e\\n<dependency>\\n  <groupId>com.zaxxer</groupId>\\n  <artifactId>HikariCP</artifactId>\\n</dependency>\\n\x3c!--SpringBoot JDBC--\x3e\\n<dependency>\\n  <groupId>org.springframework.boot</groupId>\\n  <artifactId>spring-boot-starter-jdbc</artifactId>\\n</dependency>\\n```\\n\\n> \u6ce8\u610f\uff1a`spring-boot-starter-web`\u8fd9\u4e2a\u4f9d\u8d56\u4e0d\u53ef\u5c11\uff0c\u5728`ApiBoot AutoConfiguration`\u5185\u9700\u8981\u4e00\u4e9b`Web`\u7684\u4f9d\u8d56\u7c7b\u3002\\n\\n### \u521b\u5efa\u9ed8\u8ba4\u7528\u6237\u8868\u7ed3\u6784\\n\\n\u672c\u7ae0\u4f7f\u7528`ApiBoot Security`\u63d0\u4f9b\u7684\u9ed8\u8ba4\u7528\u6237\u8868\u7ed3\u6784\uff0c\u8bbf\u95ee\u5b98\u65b9\u6587\u6863\u67e5\u770b[3.3 \u4f7f\u7528\u5185\u7f6e\u8868\u7ed3\u6784\u7684\u7528\u6237](https://apiboot.minbox.org/docs/components/api-boot-security.html)\uff0c\u5c06\u5efa\u8868\u8bed\u53e5\u5728\u81ea\u5df1\u6570\u636e\u5e93\u5185\u6267\u884c\u521b\u5efa\u8868\u4fe1\u606f\uff0c\u521b\u5efa\u540e\u6dfb\u52a0\u4e00\u6761\u7528\u6237\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```sql\\nINSERT INTO `api_boot_user_info` VALUES (1,\'admin\',\'\u6635\u79f0\',\'$2a$10$RbJGpi.v3PwkjrYENzOzTuMxazuanX3Qa2hwI/f55cYsZhFT/nX3.\',NULL,NULL,NULL,\'N\',\'Y\',\'O\',\'2019-11-29 06:14:44\');\\n```\\n\\n\\n\\n### \u914d\u7f6e\u6570\u636e\u6e90\\n\\n\u4f9d\u8d56\u6dfb\u52a0\u5b8c\u6210\u540e\u6211\u4eec\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u8fdb\u884c\u914d\u7f6e\u6570\u636e\u6e90\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\nspring:\\n  application:\\n    name: apiboot-security-customize-select-user\\n  # \u6570\u636e\u6e90\u914d\u7f6e\\n  datasource:\\n    type: com.zaxxer.hikari.HikariDataSource\\n    url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf8&serverTimezone=Asia/Shanghai\\n    username: root\\n    password: 123456\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\nserver:\\n  port: 9090\\n```\\n\\n\\n\\n### \u914d\u7f6eApiBootSecurity JDBC\u65b9\u5f0f\\n\\n\u7531\u4e8e`ApiBoot Security`\u9ed8\u8ba4\u4f7f\u7528`memory`\u7528\u6237\u8ba4\u8bc1\u8bfb\u53d6\u65b9\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u5728`application.yml`\u6587\u4ef6\u5185\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# ApiBoot\u76f8\u5173\u914d\u7f6e\\napi:\\n  boot:\\n    # \u542f\u7528ApiBoot Security \u7684JDBC\u65b9\u5f0f\\n    security:\\n      away: jdbc\\n```\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u9879\u76ee\u914d\u7f6e\u5b8c\u6210\uff0c\u4e0b\u9762\u6211\u4eec\u901a\u8fc7`XxxApplication`\u65b9\u5f0f\u542f\u52a8\u9879\u76ee\u3002\\n\\n\u5728\u83b7\u53d6`AccessToken`\u4e4b\u524d\u6211\u4eec\u8981\u77e5\u9053\u7684\u4e00\u70b9\uff0c`ApiBoot Security`\u5185\u90e8\u9ed8\u8ba4\u96c6\u6210\u4e86`OAuth2`\uff0c\u800c\u4e14\u8fd8\u9ed8\u8ba4\u914d\u7f6e\u4e86`clientId`\u3001`clientSecret`\u5ba2\u6237\u7aef\u57fa\u672c\u4fe1\u606f\uff0c\u9ed8\u8ba4\u503c\u5206\u522b\u662f`ApiBoot`\u3001`ApiBootSecret`\u3002\\n\\n```\\nclientId = ApiBoot\\nclientSecret = ApiBootSecret\\n```\\n\\n\u5982\u679c\u4f60\u5bf9`ApiBoot OAuth`\u5176\u4ed6\u529f\u80fd\u6709\u5174\u8da3\u53ef\u4ee5\u67e5\u770b[ApiBoot OAuth\u6587\u6863](https://apiboot.minbox.org/docs/components/api-boot-oauth.html)\u4e86\u89e3\u8be6\u60c5\u3002\\n\\n### \u83b7\u53d6AccessToken\\n\\n\u7531\u4e8e\u5b66\u4e60\u8005\u7684\u672c\u673a\u73af\u5883\u4e0d\u540c\uff0c\u4e0b\u9762\u91c7\u7528\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u83b7\u53d6`AccessToken`\u3002\\n\\n#### CURL\u65b9\u5f0f\\n\\n\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6`AccessToken`\uff1a\\n\\n```json\\n\u279c ~ curl -X POST ApiBoot:ApiBootSecret@localhost:9090/oauth/token\\\\?grant_type\\\\=password\\\\&username\\\\=admin\\\\&password\\\\=123456\\n{\\"access_token\\":\\"d9cb97ee-d1bf-42e1-a7a0-c1002df48c52\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"db9e9d52-cbe3-4379-a5f2-ffaa34681c01\\",\\"expires_in\\":2884,\\"scope\\":\\"api\\"}\\n```\\n\\n#### PostMan\u65b9\u5f0f\\n\\n![](/img/post/apiboot-security-customize-select-user-1.png)\\n\\n> \u6ce8\u610f\uff1a\u83b7\u53d6AccessToken\u7684\u8bf7\u6c42\u65b9\u5f0f\u4e3a`POST`.\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot Security`\u4e0d\u4ec5`\u5185\u5b58\u65b9\u5f0f`\u53ef\u4ee5\u5b9e\u73b0**\u96f6\u4ee3\u7801**\u7684\u65b9\u5f0f\u8fdb\u884c\u96c6\u6210`Spring Security`\u3001`OAuth2`\uff0c`JDBC`\u65b9\u5f0f\u540c\u6837\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u8981\u6839\u636e`ApiBoot`\u7684\u7ea6\u5b9a\u521b\u5efa\u7528\u6237\u8868\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-security-customize-select-user`\uff1a\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-security-oauth-zero-code-integration","metadata":{"permalink":"/blog/apiboot-security-oauth-zero-code-integration","source":"@site/blog/security/apiboot-security-oauth-zero-code-integration.md","title":"\u96f6\u4ee3\u7801\u6574\u5408Spring Security & OAuth2","description":"\u63a5\u53e3\u670d\u52a1\u7684\u5b89\u5168\u6027\u4e00\u76f4\u662f\u7a0b\u5e8f\u5458\u6bd4\u8f83\u6ce8\u91cd\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u6210\u719f\u7684\u5b89\u5168\u6846\u67b6\u4e5f\u6bd4\u8f83\u591a\uff0c\u5176\u4e2d\u4e00\u4e2a\u7ec4\u5408\u5c31\u662fSpring Security\u4e0eOAuth2\u7684\u6574\u5408\uff0c\u5728ApiBoot\u5185\u901a\u8fc7\u4ee3\u7801\u7684\u5c01\u88c5\u3001\u81ea\u52a8\u5316\u914d\u7f6e\u5b9e\u73b0\u4e86\u81ea\u52a8\u5316\u6574\u5408\u8fd9\u4e24\u5927\u5b89\u5168\u6846\u67b6\u3002","date":"2019-11-12T00:00:00.000Z","formattedDate":"2019\u5e7411\u670812\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"},{"label":"Spring Security","permalink":"/blog/tags/spring-security"},{"label":"OAuth2","permalink":"/blog/tags/o-auth-2"}],"readingTime":5.47,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-security-oauth-zero-code-integration","title":"\u96f6\u4ee3\u7801\u6574\u5408Spring Security & OAuth2","authors":"hengboy","date":"2019-11-12T00:00:00.000Z","tags":["Spring","Spring Security","OAuth2"]},"prevItem":{"title":"ApiBoot\u96f6\u4ee3\u7801\u6574\u5408Spring Security\u7684JDBC\u65b9\u5f0f\u83b7\u53d6AccessToken","permalink":"/blog/apiboot-security-customize-select-user"},"nextItem":{"title":"ApiBoot Logging Admin\u53ef\u89c6\u5316\u754c\u9762\u7ba1\u7406\u65e5\u5fd7","permalink":"/blog/apiboot-logging-admin-visual-interface-management-log"}},"content":"\u63a5\u53e3\u670d\u52a1\u7684\u5b89\u5168\u6027\u4e00\u76f4\u662f\u7a0b\u5e8f\u5458\u6bd4\u8f83\u6ce8\u91cd\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u6210\u719f\u7684\u5b89\u5168\u6846\u67b6\u4e5f\u6bd4\u8f83\u591a\uff0c\u5176\u4e2d\u4e00\u4e2a\u7ec4\u5408\u5c31\u662f`Spring Security`\u4e0e`OAuth2`\u7684\u6574\u5408\uff0c\u5728`ApiBoot`\u5185\u901a\u8fc7\u4ee3\u7801\u7684\u5c01\u88c5\u3001\u81ea\u52a8\u5316\u914d\u7f6e\u5b9e\u73b0\u4e86\u81ea\u52a8\u5316\u6574\u5408\u8fd9\u4e24\u5927\u5b89\u5168\u6846\u67b6\u3002\\n\x3c!--truncate--\x3e\\n\\n## ApiBoot Security OAuth\u7b80\u4ecb\\n\\n`ApiBoot Security OAuth`\u662f`ApiBoot`\u5f00\u6e90\u9879\u76ee\u5185\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5185\u90e8\u901a\u8fc7`SpringBoot AutoConfiguration`\u6574\u5408\u4e86`Spring Security`\u3001`OAuth2`\uff0c\u800c\u4e14\u652f\u6301\u591a\u79cd\u5b58\u50a8\u65b9\u5f0f\uff0c\u5982\uff1a`\u5185\u5b58\uff08memory\uff09`\u3001`\u6570\u636e\u5e93\uff08jdbc\uff09`\u3001`Redis`\u7b49\uff0c\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u6765**\u4ee3\u66ff**\u4ee3\u7801\u4fb5\u5165\u5f0f\u96c6\u6210\u65b9\u5f0f\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3001\u51cf\u5c11\u975e\u4e1a\u52a1\u7684\u7e41\u7410\u4ee3\u7801\uff0c\u800c\u4e14\u8fd8\u6709\u8fd9\u6bd4\u8f83\u9ad8\u7684\u53ef\u6269\u5c55\u6027\u3002\\n\\n- ApiBoot \u6e90\u7801\uff08\u6e90\u7801\u8be6\u89c1\uff1aapi-boot-plugins\u3001api-boot-autoconfigure\u76ee\u5f55\uff09\uff1ahttps://gitee.com/minbox-projects/api-boot\\n\\n- ApiBoot Security\u4f7f\u7528\u6587\u6863\uff1ahttps://apiboot.minbox.org/docs/components/api-boot-security.html\\n\\n- ApiBoot OAuth\u4f7f\u7528\u6587\u6863\uff1ahttps://apiboot.minbox.org/docs/components/api-boot-oauth.html\\n\\n## \u521b\u5efa\u9879\u76ee\\n\\n\u901a\u8fc7`Idea`\u5f00\u53d1\u5de5\u5177\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`apiboot-security-oauth-zero-code-integration`\u7684`SpringBoot`\u9879\u76ee\u3002\\n### \u6dfb\u52a0ApiBoot\u7edf\u4e00\u7248\u672c\u4f9d\u8d56\\n\u5728\u6dfb\u52a0\u4f9d\u8d56\u4e4b\u524d\u6211\u4eec\u9700\u8981\u5c06`ApiBoot`\u7684\u7edf\u4e00\u7248\u672c\u4f9d\u8d56\u52a0\u5165\u5230\u6211\u4eec\u9879\u76ee\u7684`pom.xml`\u6587\u4ef6\u5185\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n```xml\\n\x3c!--ApiBoot\u7edf\u4e00\u7248\u672c\u4f9d\u8d56--\x3e\\n<dependencyManagement>\\n    <dependencies>\\n        <dependency>\\n            <groupId>org.minbox.framework</groupId>\\n            <artifactId>api-boot-dependencies</artifactId>\\n            <version>2.1.5.RELEASE</version>\\n            <scope>import</scope>\\n            <type>pom</type>\\n        </dependency>\\n    </dependencies>\\n</dependencyManagement>\\n```\\n### \u6dfb\u52a0ApiBoot Security OAuth\u4f9d\u8d56\\n\\n\u6dfb\u52a0\u5b8c\u6210\u7248\u672c\u4f9d\u8d56\u540e\uff0c\u6211\u4eec\u7ee7\u7eed\u5728`pom.xml`\u6587\u4ef6\u5185\u6dfb\u52a0`ApiBoot Security OAuth`\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  \x3c!--SpringBoot Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n\\n  \x3c!--ApiBoot Security Oauth--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-security-oauth-jwt</artifactId>\\n  </dependency>\\n</dependencies>\\n```\\n\\n### \u914d\u7f6eApiBoot Security\u7528\u6237\u5217\u8868\\n\\n`ApiBoot Security`\u9ed8\u8ba4\u652f\u6301`\u5185\u5b58\u65b9\u5f0f\uff08memory\uff09`\u914d\u7f6e`\u7528\u6237\u5217\u8868`\uff0c\u7528\u4e8e\u6574\u5408`OAuth2`\u7684`\u5bc6\u7801\u6388\u6743\u65b9\u5f0f\uff08grant_type=password\uff09`\uff0c\u6211\u4eec\u9700\u8981\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u76f8\u5173\u914d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\nspring:\\n  application:\\n    name: apiboot-security-oauth-first-application\\nserver:\\n  port: 9090\\n# ApiBoot \u76f8\u5173\u914d\u7f6e\\napi:\\n  boot:\\n    # ApiBoot Security\u914d\u7f6e\\n    security:\\n      # \u914d\u7f6e\u5185\u5b58\u7528\u6237\u5217\u8868\\n      users:\\n        - username: hengboy\\n          password: 123456\\n        - username: yuqiyu\\n          password: 123123\\n```\\n\\n\u901a\u8fc7`api.boot.security.users`\u53c2\u6570\u53ef\u4ee5\u914d\u7f6e`\u591a\u4e2a\u7528\u6237`\u4fe1\u606f\uff0c\u6bcf\u4e2a\u7528\u6237\u53ef\u914d\u7f6e`username`\u3001`password`\u3001`roles`\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b`org.minbox.framework.api.boot.autoconfigure.security.ApiBootSecurityProperties`\u6e90\u7801\u7c7b\u4e86\u89e3\u8be6\u60c5\u3002\\n\\n- **username**\uff1a\u914d\u7f6e`Spring Security`\u7528\u6237\u7684\u7528\u6237\u540d\u3002\\n- **password**\uff1a\u914d\u7f6e`Spring Security`\u7528\u6237\u7684\u5bc6\u7801\u3002\\n- **roles**\uff1a\u914d\u7f6e`Spring Security`\u7528\u6237\u5bf9\u5e94\u6388\u6743\u7684\u89d2\u8272\u5217\u8868\uff0c\u591a\u4e2a\u53ef\u4ee5\u4f7f\u7528\u82f1\u6587\u534a\u89d2`,`\u9694\u5f00\uff0c\u6216\u8005\u4f7f\u7528`-`\u65b9\u5f0f\u914d\u7f6e\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u6211\u4eec\u901a\u8fc7`XxxApplication`\u65b9\u5f0f\u542f\u52a8\u672c\u7ae0\u9879\u76ee\u3002\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u83b7\u53d6AccessToken\\n\\n\u9879\u76ee\u8fd0\u884c\u6210\u529f\u540e\u6211\u4eec\u5148\u6765\u6d4b\u8bd5\u4e0b\u662f\u5426\u53ef\u4ee5\u83b7\u53d6\u5230`AccessToken`\u3002\\n\\n**Curl\u65b9\u5f0f\u83b7\u53d6\uff1a**\\n\\n```bash\\n\u279c ~ curl -X POST ApiBoot:ApiBootSecret@localhost:9090/oauth/token -d \\"grant_type=password&username=hengboy&password=123456\\"\\n{\\"access_token\\":\\"f16202f7-ab8c-41ae-86be-e314aebe82ff\\",\\"token_type\\":\\"bearer\\",\\"refresh_token\\":\\"93c74812-ec5b-4676-8378-b68e4c1751ae\\",\\"expires_in\\":3297,\\"scope\\":\\"api\\"}\\n```\\n\\n**PostMan\u65b9\u5f0f\u83b7\u53d6\uff1a**\\n\\n![](/img/post/apiboot-security-oauth-zero-code-integration-1.png)\\n\\n\u5982\u679c\u5bf9`Spring Security`\u4e0e`OAuth2`\u6574\u5408\u6709\u4e00\u5b9a\u7ecf\u9a8c\u7684\u540c\u5b66\u5e94\u8be5\u660e\u767d`grant_type`\u662f`OAuth2`\u5185\u63d0\u4f9b\u7684\u5176\u4e2d\u4e00\u79cd**\u6388\u6743\u65b9\u5f0f**\uff0c\u800c\u53c2\u6570`username`\u3001`password`\u5219\u662f\u6574\u5408\u540e\u5bf9\u5e94\u7684`Spring Security`\u7684`\u7528\u6237\u540d`\u4ee5\u53ca`\u5bc6\u7801`\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6`api.boot.security.users`\u914d\u7f6e\u7528\u6237\u5217\u8868\u7684**\u5176\u4e2d\u4e00\u4e2a\u7528\u6237\u4fe1\u606f**\u3002\\n\\n\u5728\u4e0a\u9762\u5206\u522b\u901a\u8fc7`Curl`\u3001`PostMan`\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u6d4b\u8bd5\u83b7\u53d6`AccessToken`\uff0c\u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5230\u7684\u3002\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u83b7\u53d6\u5f53\u524d\u7528\u6237\u4fe1\u606f\\n\\n`ApiBoot Security OAuth`\u83b7\u53d6**\u5f53\u524d\u7528\u6237**\u4fe1\u606f\u7684\u65b9\u5f0f\u4e0e`Spring Security`\u4e00\u6837\uff0c\u901a\u8fc7\u6ce8\u5165`java.security.Principal`\u63a5\u53e3\u6765\u5b8c\u6210\uff0c\u4e0b\u9762\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`UserController`\u7684\u63a7\u5236\u5668\u6765\u6d4b\u8bd5\u4e0b\u6548\u679c\uff1a\\n\\n```java\\npackage org.minbox.chapter.apiboot.security.oauth.first.application;\\n\\nimport org.springframework.security.access.prepost.PreAuthorize;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\nimport java.security.Principal;\\n\\n/**\\n * \u767b\u5f55\u7528\u6237\u4fe1\u606f\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/api/user\\")\\npublic class UserController {\\n\\n    /**\\n     * \u83b7\u53d6\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u4fe1\u606f\\n     * \u901a\u8fc7Spring Security\u63d0\u4f9b\u7684\u6ce8\u89e3{@link PreAuthorize}\u8fdb\u884c\u9a8c\u8bc1\u89d2\u8272\\n     *\\n     * @param principal {@link Principal}\\n     * @return {@link Principal#getName()}\\n     */\\n    @GetMapping\\n    @PreAuthorize(\\"hasRole(\'api\')\\")\\n    public String info(Principal principal) {\\n        return principal.getName();\\n    }\\n}\\n```\\n\\n> \u6ce8\u610f\uff1a`ApiBoot Security OAuth`\u9ed8\u8ba4\u6743\u9650\u62e6\u622a\u7684\u8def\u5f84\u65f6`/api/**`\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6d4b\u8bd5\u63a7\u5236\u5668\u4e0a\u914d\u7f6e\u4e86`/api/user`\u4f5c\u4e3a\u8def\u5f84\u524d\u7f00\uff0c\u5982\u679c\u60f3\u5bf9`ApiBoot Security OAuth`\u8be6\u7ec6\u4e86\u89e3\uff0c\u8bf7\u8bbf\u95eeApiBoot\u5b98\u7f51\u6587\u6863[ApiBoot Security\u4f7f\u7528\u6587\u6863](https://apiboot.minbox.org/docs/components/api-boot-security.html)\\n\\n\u6211\u4eec\u901a\u8fc7`Curl`\u65b9\u5f0f\u8bbf\u95ee`http://localhost:9090/api/user`\u63a5\u53e3\u6548\u679c\u5982\u4e0b\uff1a\\n\\n```bash\\n\u279c ~ curl http://localhost:9090/api/user -H \'Authorization: Bearer d73e86a8-892f-42c1-bc95-04aedfe97828\'\\nhengboy\\n```\\n\\n\u8bbf\u95ee`/api/user`\u8def\u5f84\u7684`AccessToken`\u662f\u901a\u8fc7\u7528\u6237`hengboy`\u7528\u6237\u751f\u6210\u7684\uff0c\u6240\u4ee5\u8be5\u63a5\u53e3\u8fd4\u56de\u4e86`hengboy`\u7528\u6237\u540d\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot Security OAuth`\u6781\u5176\u7b80\u5355\u7684\u5b8c\u6210\u4e86`Spring Security`\u4e0e`OAuth2`\u7684\u6574\u5408\uff0c\u4f7f\u7528\u5185\u5b58\u65b9\u5f0f\u65f6\u4e0d\u9700\u8981\u914d\u7f6e\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b8c\u6210\u81ea\u52a8\u5316\u7684\u6574\u5408\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-security-oauth-first-application`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-logging-admin-visual-interface-management-log","metadata":{"permalink":"/blog/apiboot-logging-admin-visual-interface-management-log","source":"@site/blog/logging/apiboot-logging-admin-visual-interface-management-log.md","title":"ApiBoot Logging Admin\u53ef\u89c6\u5316\u754c\u9762\u7ba1\u7406\u65e5\u5fd7","description":"ApiBoot Logging Admin\u652f\u6301\u754c\u9762\u53ef\u89c6\u5316\u67e5\u770b\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\uff0c\u521d\u671f\u7248\u672c\u652f\u6301\u67e5\u770b\u4e0a\u62a5\u65e5\u5fd7\u7684\u670d\u52a1\u5217\u8868\u3001\u6700\u65b0\u7684\u94fe\u8def\u65e5\u5fd7\u7b49\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u6574\u5408Spring Security\u914d\u7f6e\u7528\u6237\u540d\u3001\u5bc6\u7801","date":"2019-11-07T09:16:04.000Z","formattedDate":"2019\u5e7411\u67087\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":3.785,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-logging-admin-visual-interface-management-log","title":"ApiBoot Logging Admin\u53ef\u89c6\u5316\u754c\u9762\u7ba1\u7406\u65e5\u5fd7","authors":"hengboy","tags":["Log"],"date":"2019-11-07T09:16:04.000Z"},"prevItem":{"title":"\u96f6\u4ee3\u7801\u6574\u5408Spring Security & OAuth2","permalink":"/blog/apiboot-security-oauth-zero-code-integration"},"nextItem":{"title":"ApiBoot Logging\u4f7f\u7528RestTemplate\u900f\u4f20\u94fe\u8def\u4fe1\u606f","permalink":"/blog/apiboot-logging-using-resttemplate-transparent-traceid"}},"content":"`ApiBoot Logging Admin`\u652f\u6301\u754c\u9762\u53ef\u89c6\u5316\u67e5\u770b\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\uff0c\u521d\u671f\u7248\u672c\u652f\u6301\u67e5\u770b\u4e0a\u62a5\u65e5\u5fd7\u7684`\u670d\u52a1\u5217\u8868`\u3001`\u6700\u65b0\u7684\u94fe\u8def\u65e5\u5fd7`\u7b49\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u6574\u5408`Spring Security`\u914d\u7f6e\u7528\u6237\u540d\u3001\u5bc6\u7801\\n\x3c!--truncate--\x3e\\n## \u521b\u5efaLogging Admin\u9879\u76ee\\n\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\uff0c\u5e76\u6dfb\u52a0`ApiBoot Logging Admin`\u76f8\u5173\u7684\u4f9d\u8d56\u4ee5\u53ca\u914d\u7f6e\u4fe1\u606f\u3002\\n\\n### \u6dfb\u52a0\u4f9d\u8d56\\n\\n\u5728\u9879\u76ee\u7684`pom.xml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\uff1a\\n\\n```xml\\n<dependencies>\\n  \x3c!--Spring Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--MySQL--\x3e\\n  <dependency>\\n    <groupId>mysql</groupId>\\n    <artifactId>mysql-connector-java</artifactId>\\n    <scope>runtime</scope>\\n  </dependency>\\n\\n  <dependency>\\n    <groupId>com.zaxxer</groupId>\\n    <artifactId>HikariCP</artifactId>\\n  </dependency>\\n\\n  \x3c!--ApiBoot Logging Admin--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-logging-admin</artifactId>\\n  </dependency>\\n\\n  \x3c!--ApiBoot Mybatis Enhance--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-mybatis-enhance</artifactId>\\n  </dependency>\\n\x3c!--\u7248\u672c\u4f9d\u8d56--\x3e\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.1.5.RELEASE</version>\\n      <scope>import</scope>\\n      <type>pom</type>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n### \u914d\u7f6e\u6570\u636e\u6e90\\n\\n\u6211\u4eec\u9700\u8981\u8fde\u63a5\u5230`Logging Admin`\u6240\u9700\u8981\u7684\u6570\u636e\u5e93\u4e0a\uff0c\u5177\u4f53\u7684\u6570\u636e\u5e93\u8868\u7ed3\u6784\u8bf7\u8bbf\u95ee\u3010[\u5c06ApiBoot Logging\u91c7\u96c6\u7684\u65e5\u5fd7\u4e0a\u62a5\u5230Admin](https://blog.yuqiyu.com/apiboot-report-logs-by-logging-to-admin.html#\u521d\u59cb\u5316\u65e5\u5fd7\u8868\u7ed3\u6784)\u3011\u67e5\u770b.\\n\\n\u4fee\u6539`application.yml`\u914d\u7f6e\u6587\u4ef6\u6dfb\u52a0\u76f8\u5173\u6570\u636e\u6e90\u4fe1\u606f\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# \u670d\u52a1\u540d\u79f0\\nspring:\\n  application:\\n    name: logging-admin\\n  # \u6570\u636e\u6e90\u76f8\u5173\u914d\u7f6e\\n  datasource:\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\n    url: jdbc:mysql://localhost:3306/test\\n    username: root\\n    password: 123456\\n    type: com.zaxxer.hikari.HikariDataSource\\n# \u670d\u52a1\u7aef\u53e3\u53f7\\nserver:\\n  port: 8080\\n```\\n\\n### \u914d\u7f6e\u65e5\u5fd7\u8f93\u51fa & \u7f8e\u5316\\n\\n\u4fee\u6539`application.yml`\u914d\u7f6e\u6587\u4ef6\u6dfb\u52a0`ApiBoot Logging Admin`\u76f8\u5173\u914d\u7f6e\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    logging:\\n      # Logging Admin\u76f8\u5173\u914d\u7f6e\\n      admin:\\n        # \u63a7\u5236\u53f0\u663e\u793a\u91c7\u96c6\u7684\u65e5\u5fd7\u4fe1\u606f\\n        show-console-report-log: true\\n        # \u7f8e\u5316\u65e5\u5fd7\\n        format-console-log-json: true\\n```\\n\\n\\n\\n## \u96c6\u6210Spring Security\\n\\n\u5f53\u6211\u4eec\u96c6\u6210`Spring Security`\u65f6\uff0c\u76f4\u63a5\u8bbf\u95ee [http://localhost:8080](http://localhost:8080) \u5c31\u53ef\u4ee5\u67e5\u770b`ApiBoot Logging Admin`\u63d0\u4f9b\u7684\u53ef\u89c6\u5316\u754c\u9762\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u5b89\u5168\u8d77\u89c1\uff0c\u6211\u4eec\u6dfb\u52a0`Spring Security`\u4f9d\u8d56\u5e76\u5bf9\u5e94\u914d\u7f6e\u5185\u5b58\u7528\u6237\u4fe1\u606f\uff0c\u5728`pom.xml`\u6587\u4ef6\u5185\u6dfb\u52a0\u4f9d\u8d56\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n\x3c!--Spring Security--\x3e\\n<dependency>\\n  <groupId>org.springframework.boot</groupId>\\n  <artifactId>spring-boot-starter-security</artifactId>\\n</dependency>\\n```\\n\\n\\n\\n### \u914d\u7f6e\u5b89\u5168\u7528\u6237\\n\\n`spring-boot-starter-security`\u4f9d\u8d56\u63d0\u4f9b\u4e86\u5185\u5b58\u65b9\u5f0f\u914d\u7f6e\u7528\u6237\u4fe1\u606f\uff0c\u5728`application.yml`\u6587\u4ef6\u914d\u7f6e\u7528\u6237\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# \u670d\u52a1\u540d\u79f0\\nspring:\\n  # \u6574\u5408Spring Security\uff0c\u914d\u7f6e\u5185\u5b58\u7528\u6237\\n  security:\\n    user:\\n      name: admin\\n      password: admin123\\n```\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u901a\u8fc7`XxxApplication`\u65b9\u5f0f\u542f\u52a8\u672c\u7ae0\u9879\u76ee\u3002\\n\\n\u5728\u6d4f\u89c8\u5668\u5185\u8bbf\u95ee [http://localhost:8080](http://localhost:8080) \u5730\u5740\uff0c\u6548\u679c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n![](/img/post/apiboot-logging-admin-visual-interface-management-log-1.png)\\n\\n\u56e0\u4e3a`Spring Security`\u7684\u5b89\u5168\u62e6\u622a\uff0c\u4f1a\u76f4\u63a5\u8df3\u8f6c\u5230`ApiBoot Logging Admin`\u5185\u7f6e\u7684\u767b\u5f55\u9875\u9762\uff0c\u8f93\u5165\u6211\u4eec\u5728`application.yml`\u914d\u7f6e\u7684`\u7528\u6237\u540d`\u3001`\u5bc6\u7801`\u5373\u53ef\u767b\u5f55\u3002\\n\\n### \u94fe\u8def\u65e5\u5fd7\u5217\u8868\\n\\n\u767b\u5f55\u6210\u529f\u540e\u4f1a\u8df3\u8f6c\u5230`\u94fe\u8def\u65e5\u5fd7`\u5217\u8868\u9875\u9762\uff0c\u70b9\u51fb`\u6bcf\u4e00\u884c\u94fe\u8def\u65e5\u5fd7`\u90fd\u53ef\u4ee5`\u5c55\u5f00\u67e5\u770b\u8be6\u60c5`\uff0c\u6548\u679c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n![](/img/post/apiboot-logging-admin-visual-interface-management-log-2.png)\\n\\n### \u65e5\u5fd7\u670d\u52a1\u5217\u8868\\n\\n`\u65e5\u5fd7\u670d\u52a1`\u83dc\u5355\u5185\u53ef\u4ee5\u67e5\u770b\u6bcf\u4e00\u4e2a\u670d\u52a1\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u6700\u540e\u4e0a\u62a5\u7684\u65f6\u95f4\u4ee5\u53ca\u7b2c\u4e00\u6b21\u4e0a\u62a5\u65e5\u5fd7\u7684\u65f6\u95f4\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](/img/post/apiboot-logging-admin-visual-interface-management-log-3.png)\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot Logging Admin`\u76ee\u524d\u652f\u6301\u53ef\u89c6\u5316\u754c\u9762\u67e5\u770b\u65e5\u5fd7\u3001\u670d\u52a1\u57fa\u672c\u4fe1\u606f\uff0c\u529f\u80fd\u8fd8\u5728\u4e0d\u65ad\u4e30\u5bcc\uff0c\u5b8c\u6574\u5ea6\u6709\u5f85\u63d0\u9ad8\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-logging-admin-visual-interface-management-log`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-logging-using-resttemplate-transparent-traceid","metadata":{"permalink":"/blog/apiboot-logging-using-resttemplate-transparent-traceid","source":"@site/blog/logging/apiboot-logging-using-resttemplate-transparent-traceid.md","title":"ApiBoot Logging\u4f7f\u7528RestTemplate\u900f\u4f20\u94fe\u8def\u4fe1\u606f","description":"\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u3010{% post_link apiboot-logging-using-openfeign-transparent-traceid %}\u3011\u4e2d\u6211\u4eec\u8be6\u7ec6\u7684\u8bb2\u89e3\u4e86ApiBoot Logging\u6574\u5408SpringCloud\u901a\u8fc7Openfeign\u8fdb\u884c\u900f\u4f20\u94fe\u8def\u4fe1\u606f\uff0c\u5305\u62ectraceId\uff08\u94fe\u8def\u7f16\u53f7\uff09\u3001parentSpanId\uff08\u4e0a\u7ea7\u5355\u5143\u7f16\u53f7\uff09\u7b49\u4fe1\u606f\u3002","date":"2019-11-06T14:15:57.000Z","formattedDate":"2019\u5e7411\u67086\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":8.275,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-logging-using-resttemplate-transparent-traceid","title":"ApiBoot Logging\u4f7f\u7528RestTemplate\u900f\u4f20\u94fe\u8def\u4fe1\u606f","authors":"hengboy","tags":["Log"],"date":"2019-11-06T14:15:57.000Z"},"prevItem":{"title":"ApiBoot Logging Admin\u53ef\u89c6\u5316\u754c\u9762\u7ba1\u7406\u65e5\u5fd7","permalink":"/blog/apiboot-logging-admin-visual-interface-management-log"},"nextItem":{"title":"ApiBoot Logging\u4f7f\u7528SpringCloud Openfeign\u900f\u4f20\u94fe\u8def\u4fe1\u606f","permalink":"/blog/apiboot-logging-using-openfeign-transparent-traceid"}},"content":"\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u3010{% post_link apiboot-logging-using-openfeign-transparent-traceid %}\u3011\u4e2d\u6211\u4eec\u8be6\u7ec6\u7684\u8bb2\u89e3\u4e86`ApiBoot Logging`\u6574\u5408`SpringCloud`\u901a\u8fc7`Openfeign`\u8fdb\u884c\u900f\u4f20\u94fe\u8def\u4fe1\u606f\uff0c\u5305\u62ec`traceId`\uff08\u94fe\u8def\u7f16\u53f7\uff09\u3001`parentSpanId`\uff08\u4e0a\u7ea7\u5355\u5143\u7f16\u53f7\uff09\u7b49\u4fe1\u606f\u3002\\n`ApiBoot Logging`\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u4f7f\u7528`Openfeign`\u4f20\u9012\u94fe\u8def\u4fe1\u606f\uff0c\u8fd8\u652f\u6301`RestTemplate`\u65b9\u5f0f\uff0c\u672c\u7bc7\u6587\u7ae0\u6765\u8be6\u7ec6\u7684\u8bb2\u89e3\u4e0b\u5177\u4f53\u7684\u4f7f\u7528\u65b9\u5f0f\u3002\\n\x3c!--truncate--\x3e\\n## \u642d\u5efaLogging Admin\\n\u6211\u4eec\u9700\u8981\u642d\u5efa`Logging Admin`\u670d\u52a1\uff0c\u7528\u4e8e\u63a5\u6536`\u4e1a\u52a1\u670d\u52a1`\u4e0a\u62a5\u7684\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003\u3010{% post_link apiboot-report-logs-by-logging-to-admin %}\u3011\u6587\u7ae0\u5185\u5bb9.\\n## \u6dfb\u52a0ApiBoot\u7edf\u4e00\u7248\u672c\\n\u7531\u4e8e\u672c\u7ae0\u91c7\u7528\u662f`Maven \u591a\u6a21\u5757`\u7684\u65b9\u5f0f\u6784\u5efa\u6e90\u7801\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06`ApiBoot`\u7edf\u4e00\u7248\u672c\u7684\u4f9d\u8d56\u914d\u7f6e\u5728`root`\u9879\u76ee\u7684`pom.xml`\u5185\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n```xml\\n<properties>\\n  <java.version>1.8</java.version>\\n  \x3c!--ApiBoot\u7248\u672c\u53f7--\x3e\\n  <api.boot.version>2.1.5.RELEASE</api.boot.version>\\n</properties>\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>${api.boot.version}</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\u63a5\u4e0b\u6765\u6211\u4eec\u8425\u9020\u672c\u7bc7\u6587\u7ae0\u7684`\u6a21\u62df\u573a\u666f`\uff0c**\u67e5\u8be2\u7528\u6237\u57fa\u672c\u4fe1\u606f\u65f6\u4e00\u5e76\u67e5\u8be2\u51fa\u7528\u6237\u7684\u8d26\u53f7\u4f59\u989d**\u3002\\n\\n## \u521b\u5efa\u8d26\u6237\u670d\u52a1\\n\\n\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`account-service`\u7684`SpringBoot`\u9879\u76ee\u3002\\n\\n### \u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\\n\\n\u5728\u9879\u76ee`pom.xml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  \x3c!--SpringBoot Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot Logging--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-logging</artifactId>\\n  </dependency>\\n</dependencies>\\n```\\n\\n### \u914d\u7f6e\u4e0a\u62a5\u7684Logging Admin\\n\\n\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u8bf7\u6c42\u65e5\u5fd7\u4e0a\u62a5\u7684`Logging Admin`\u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\nspring:\\n  application:\\n    name: account-service\\nserver:\\n  port: 9090\\n\\napi:\\n  boot:\\n    logging:\\n      # \u63a7\u5236\u53f0\u6253\u5370\u8bf7\u6c42\u65e5\u5fd7\\n      show-console-log: true\\n      # \u7f8e\u5316\u8bf7\u6c42\u65e5\u5fd7\\n      format-console-log-json: true\\n      # Logging Admin\u5730\u5740\\n      admin:\\n        server-address: 127.0.0.1:8081\\n```\\n\\n> \u6ce8\u610f\uff1a`server-address`\u914d\u7f6e\u53c2\u6570\u4e0d\u9700\u8981\u6dfb\u52a0`http://`\u524d\u7f00\\n\\n### \u542f\u7528Logging Client\\n\\n\u6dfb\u52a0\u5b8c\u6210\u4f9d\u8d56\u540e\u6211\u4eec\u901a\u8fc7`@EnableLoggingClient`\u6ce8\u89e3\u6765\u542f\u7528`ApiBoot Logging`\uff0c\u5728`AccountServiceApplication`\u7c7b\u4e0a\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u8d26\u6237\u670d\u52a1\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@SpringBootApplication\\n@EnableLoggingClient\\npublic class AccountServiceApplication {\\n    /**\\n     * logger instance\\n     */\\n    static Logger logger = LoggerFactory.getLogger(AccountServiceApplication.class);\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(AccountServiceApplication.class, args);\\n        logger.info(\\"{}\u670d\u52a1\u542f\u52a8\u6210\u529f.\\", \\"\u8d26\u6237\\");\\n    }\\n}\\n```\\n\\n> `@EnableLoggingClient`\u6ce8\u89e3\u5c31\u5b9e\u4f8b\u5316\u90e8\u5206`ApiBoot Logging`\u5185\u90e8\u6240\u9700\u8981\u7684\u7c7b\uff0c\u5c06\u5b9e\u4f8b\u653e\u7f6e\u5230`Spring IOC`\u5bb9\u5668\u5185\u3002\\n\\n### \u67e5\u8be2\u8d26\u6237\u4f59\u989d\u4ee3\u7801\u5b9e\u73b0\\n\\n\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`AccountController`\u7684\u63a7\u5236\u5668\u6765\u63d0\u4f9b\u67e5\u8be2\u8d26\u6237\u7684\u4f59\u989d\u4fe1\u606f\uff0c\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u8d26\u6237\u670d\u52a1\u5b9e\u73b0\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/account\\")\\npublic class AccountController {\\n\\n    /**\\n     * \u793a\u4f8b\uff0c\u5185\u5b58\u8d26\u6237\u5217\u8868\\n     */\\n    static final HashMap<Integer, Double> ACCOUNTS = new HashMap() {{\\n        put(1, 1233.22);\\n        put(2, 69269.22);\\n    }};\\n\\n    /**\\n     * \u83b7\u53d6\u6307\u5b9a\u8d26\u6237\u7684\u4f59\u989d\\n     *\\n     * @param accountId\\n     * @return\\n     */\\n    @GetMapping(value = \\"/{accountId}\\")\\n    public Double getBalance(@PathVariable(\\"accountId\\") Integer accountId) {\\n        return ACCOUNTS.get(accountId);\\n    }\\n}\\n```\\n\\n\\n\\n> \u81f3\u6b64\u6211\u4eec\u7684\u8d26\u6237\u670d\u52a1\u5df2\u7ecf\u7f16\u5199\u5b8c\u6210\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u7f16\u5199`\u7528\u6237\u670d\u52a1`\u3002\\n\\n\\n## \u521b\u5efa\u7528\u6237\u670d\u52a1\\n\\n\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`user-service`\u7684`SpringBoot`\u9879\u76ee\u3002\\n\\n### \u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\\n\\n\u5728\u9879\u76ee`pom.xml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  \x3c!--SpringBoot Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot Logging--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-logging</artifactId>\\n  </dependency>\\n</dependencies>\\n```\\n\\n### \u914d\u7f6e\u4e0a\u62a5\u7684Logging Admin\\n\\n\u672c\u7ae0\u6211\u4eec\u4f7f\u7528\u6307\u5b9a`Logging Admin`\u5730\u5740\u7684\u65b9\u5f0f\u914d\u7f6e\uff0c\u4fee\u6539`application.yml`\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\nspring:\\n  application:\\n    name: user-service\\nserver:\\n  port: 9091\\n\\napi:\\n  boot:\\n    logging:\\n      # \u63a7\u5236\u53f0\u6253\u5370\u8bf7\u6c42\u65e5\u5fd7\\n      show-console-log: true\\n      # \u7f8e\u5316\u8bf7\u6c42\u65e5\u5fd7\\n      format-console-log-json: true\\n      # Logging Admin\u5730\u5740\\n      admin:\\n        server-address: 127.0.0.1:8081\\n```\\n\\n### \u542f\u7528Logging Client\\n\\n\u6dfb\u52a0\u5b8c\u4f9d\u8d56\u540e\u6211\u4eec\u9700\u8981\u5728`XxxApplication`\u5165\u53e3\u7c7b\u4e0a\u6dfb\u52a0`@EnableLoggingClient`\u6ce8\u89e3\u6765\u542f\u7528`ApiBoot Logging`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u7528\u6237\u670d\u52a1\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@SpringBootApplication\\n@EnableLoggingClient\\npublic class UserServiceApplication {\\n    /**\\n     * logger instance\\n     */\\n    static Logger logger = LoggerFactory.getLogger(UserServiceApplication.class);\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(UserServiceApplication.class, args);\\n        logger.info(\\"{}\u670d\u52a1\u542f\u52a8\u6210\u529f.\\", \\"\u7528\u6237\\");\\n    }\\n}\\n```\\n\\n### \u5b9e\u4f8b\u5316RestTemplate\u5bf9\u8c61\\n\\n\u5728`user-service`\u9700\u8981\u8bbf\u95ee`\u8d26\u6237\u670d\u52a1`\u83b7\u53d6\u5f53\u524d\u7528\u6237\u7684\u4f59\u989d\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728`user-service`\u5185\u5b9e\u4f8b\u5316`RestTemplate`\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u53ef\u4ee5\u901a\u8fc7`RestTemplate`\u8bbf\u95ee\u83b7\u53d6\u7528\u6237\u8d26\u6237\u4f59\u989d\u4fe1\u606f\uff0c\u6211\u4eec\u76f4\u63a5\u5728`UserServiceApplication`\u7c7b\u5185\u6dfb\u52a0\u5b9e\u4f8b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n    /**\\n     * \u5b9e\u4f8b\u5316RestTemplate\\n     *\\n     * @return {@link RestTemplate}\\n     */\\n    @Bean\\n    @ConditionalOnMissingBean\\n    public RestTemplate restTemplate() {\\n        return new RestTemplate();\\n    }\\n```\\n\\n**\u6ce8\u89e3\u89e3\u91ca\uff1a**\\n\\n- `@ConditionalOnMissingBean`\uff1a\u8fd9\u662f`SpringBoot`\u6761\u4ef6\u6ce8\u5165\u5176\u4e2d\u7684\u4e00\u4e2a\u6ce8\u89e3\uff0c\u8868\u793a\u5f53`IOC`\u5bb9\u5668\u5185\u4e0d\u5b58\u5728`RestTemplate`\u7c7b\u578b\u7684\u5b9e\u4f8b\u65f6\u624d\u4f1a\u53bb\u6267\u884c`restTemplate()`\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\u3002\\n\\n### \u67e5\u8be2\u7528\u6237\u4fe1\u606f\u4ee3\u7801\u5b9e\u73b0\\n\\n```java\\n/**\\n * \u7528\u6237\u57fa\u672c\u4fe1\u606f\u63a7\u5236\u5668\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/user\\")\\npublic class UserController {\\n    /**\\n     * \u793a\u4f8b\uff0c\u7528\u6237\u5217\u8868\\n     */\\n    static final HashMap<Integer, User> USERS = new HashMap() {{\\n        put(1, new User(1, \\"\u6052\u5b87\u5c11\u5e74\\"));\\n        put(2, new User(2, \\"\u4e8e\u8d77\u5b87\\"));\\n    }};\\n    /**\\n     * \u6ce8\u5165RestTemplate\\n     */\\n    @Autowired\\n    private RestTemplate restTemplate;\\n\\n    /**\\n     * \u83b7\u53d6\u7528\u6237\u57fa\u672c\u4fe1\u606f\\n     *\\n     * @param userId \u7528\u6237\u7f16\u53f7\\n     * @return\\n     */\\n    @GetMapping(value = \\"/{userId}\\")\\n    public User getUserInfo(@PathVariable(\\"userId\\") Integer userId) {\\n        ResponseEntity<Double> responseEntity = restTemplate.getForEntity(\\"http://localhost:9090/account/{accountId}\\", Double.class, userId);\\n        Double balance = responseEntity.getBody();\\n        User user = USERS.get(userId);\\n        if (ObjectUtils.isEmpty(user)) {\\n            throw new RuntimeException(\\"\u7528\u6237\uff1a\\" + userId + \\"\uff0c\u4e0d\u5b58\u5728.\\");\\n        }\\n        user.setBalance(balance);\\n        return user;\\n    }\\n\\n    @Data\\n    public static class User {\\n        private Integer id;\\n        private String name;\\n        private Double balance;\\n\\n        public User(Integer id, String name) {\\n            this.id = id;\\n            this.name = name;\\n        }\\n    }\\n}\\n```\\n\\n\\n\\n\u6211\u4eec\u6240\u9700\u8981\u7684\u4e24\u4e2a\u670d\u52a1\u90fd\u5df2\u7ecf\u7f16\u5199\u5b8c\u6210\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u6d4b\u8bd5`RestTemplate`\u662f\u53ef\u4ee5\u900f\u4f20`ApiBoot Logging`\u7684\u94fe\u8def\u4fe1\u606f\uff1f\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u4f9d\u6b21\u542f\u52a8`logging-admin` > `user-service` > `account-service`\u3002\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u900f\u4f20\u94fe\u8def\u4fe1\u606f\\n\\n\u6211\u4eec\u4f7f\u7528`curl`\u547d\u4ee4\u8bbf\u95ee`user-service`\u63d0\u4f9b\u7684\u5730\u5740`/user`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```bash\\n\u279c ~ curl http://localhost:9091/user/1\\n{\\"id\\":1,\\"name\\":\\"\u6052\u5b87\u5c11\u5e74\\",\\"balance\\":1233.22}\\n```\\n\\n\u4e0b\u9762\u6211\u770b\u6765\u770b\u4e0b`logging-admin`\u63a7\u5236\u53f0\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u65e5\u5fd7\u3002\\n\\n**\u63a5\u6536user-service\u8bf7\u6c42\u65e5\u5fd7**\\n\\n```json\\nReceiving Service: \u3010user-service -> 127.0.0.1\u3011, Request Log Report\uff0cLogging Content\uff1a[\\n\\t{\\n\\t\\t\\"endTime\\":1573032865311,\\n\\t\\t\\"httpStatus\\":200,\\n\\t\\t\\"requestBody\\":\\"\\",\\n\\t\\t\\"requestHeaders\\":{\\n\\t\\t\\t\\"host\\":\\"localhost:9091\\",\\n\\t\\t\\t\\"user-agent\\":\\"curl/7.64.1\\",\\n\\t\\t\\t\\"accept\\":\\"*/*\\"\\n\\t\\t},\\n\\t\\t\\"requestIp\\":\\"0:0:0:0:0:0:0:1\\",\\n\\t\\t\\"requestMethod\\":\\"GET\\",\\n\\t\\t\\"requestParam\\":\\"{}\\",\\n\\t\\t\\"requestUri\\":\\"/user/1\\",\\n\\t\\t\\"responseBody\\":\\"{\\\\\\"id\\\\\\":1,\\\\\\"name\\\\\\":\\\\\\"\u6052\u5b87\u5c11\u5e74\\\\\\",\\\\\\"balance\\\\\\":1233.22}\\",\\n\\t\\t\\"responseHeaders\\":{},\\n\\t\\t\\"serviceId\\":\\"user-service\\",\\n\\t\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\t\\"servicePort\\":\\"9091\\",\\n\\t\\t\\"spanId\\":\\"f8cff018-42d5-481f-98df-c19b7196b3c3\\",\\n\\t\\t\\"startTime\\":1573032865130,\\n\\t\\t\\"timeConsuming\\":181,\\n\\t\\t\\"traceId\\":\\"16ad1dd4-beaa-4110-b4b7-fc7d952d9a57\\"\\n\\t}\\n]\\n```\\n\\n\\n\\n**\u63a5\u6536account-service\u8bf7\u6c42\u65e5\u5fd7**\\n\\n```json\\nReceiving Service: \u3010account-service -> 127.0.0.1\u3011, Request Log Report\uff0cLogging Content\uff1a[\\n\\t{\\n\\t\\t\\"endTime\\":1573032865309,\\n\\t\\t\\"httpStatus\\":200,\\n\\t\\t\\"parentSpanId\\":\\"f8cff018-42d5-481f-98df-c19b7196b3c3\\",\\n\\t\\t\\"requestBody\\":\\"\\",\\n\\t\\t\\"requestHeaders\\":{\\n\\t\\t\\t\\"minbox-logging-x-parent-span-id\\":\\"f8cff018-42d5-481f-98df-c19b7196b3c3\\",\\n\\t\\t\\t\\"minbox-logging-x-trace-id\\":\\"16ad1dd4-beaa-4110-b4b7-fc7d952d9a57\\",\\n\\t\\t\\t\\"host\\":\\"localhost:9090\\",\\n\\t\\t\\t\\"connection\\":\\"keep-alive\\",\\n\\t\\t\\t\\"accept\\":\\"application/json, application/*+json\\",\\n\\t\\t\\t\\"user-agent\\":\\"Java/1.8.0_211\\"\\n\\t\\t},\\n\\t\\t\\"requestIp\\":\\"127.0.0.1\\",\\n\\t\\t\\"requestMethod\\":\\"GET\\",\\n\\t\\t\\"requestParam\\":\\"{}\\",\\n\\t\\t\\"requestUri\\":\\"/account/1\\",\\n\\t\\t\\"responseBody\\":\\"1233.22\\",\\n\\t\\t\\"responseHeaders\\":{},\\n\\t\\t\\"serviceId\\":\\"account-service\\",\\n\\t\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\t\\"servicePort\\":\\"9090\\",\\n\\t\\t\\"spanId\\":\\"63b18b40-5718-431c-972f-78956ce78380\\",\\n\\t\\t\\"startTime\\":1573032865307,\\n\\t\\t\\"timeConsuming\\":2,\\n\\t\\t\\"traceId\\":\\"16ad1dd4-beaa-4110-b4b7-fc7d952d9a57\\"\\n\\t}\\n]\\n```\\n\\n- \u5f53\u6211\u4eec\u8bbf\u95ee`user-service`\u670d\u52a1\u5185\u7684`/user`\u8def\u5f84\u65f6\uff0c\u56e0\u4e3a\u662f\u7b2c\u4e00\u6b21\u8bbf\u95ee`ApiBoot Logging`\u4f1a\u4e3b\u52a8\u521b\u5efa`traceId`\uff08\u94fe\u8def\u7f16\u53f7\uff09\u3001`spanId`\uff08\u5355\u5143\u7f16\u53f7\uff09\uff0c\u56e0\u4e3a\u6ca1\u6709`\u4e0a\u7ea7\u5355\u5143`\u6240\u4ee5`parentSpanId`\u4e3a`null`.\\n- \u800c\u901a\u8fc7\u67e5\u770b`account-service`\u670d\u52a1\u4e0a\u62a5\u7684\u8bf7\u6c42\u65e5\u5fd7\u65f6\uff0c\u53ef\u4ee5\u770b\u5230`ApiBoot Logging`\u76f8\u5173\u7684\u94fe\u8def\u4fe1\u606f\u662f\u901a\u8fc7`HttpHeader`\u7684\u65b9\u5f0f\u8fdb\u884c\u4f20\u9012\u7684\\n  - `minbox-logging-x-trace-id` -> `\u94fe\u8def\u7f16\u53f7`\\n  - `minbox-logging-x-parent-span-id` -> `\u4e0a\u7ea7\u5355\u5143\u7f16\u53f7`\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot Logging`\u5728\u5185\u90e8\u81ea\u52a8\u5316\u5b9e\u73b0\u4e86`RestTemplate`\u7684\u62e6\u622a\u5668\u914d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u521b\u5efa\u5b9e\u4f8b\u5c31\u53ef\u4ee5\uff0c\u800c\u4e0d\u9700\u8981\u4e3b\u52a8\u53bb\u914d\u7f6e\u62e6\u622a\u5668\u4fe1\u606f\uff0c\u5177\u4f53\u6e90\u7801\u8bf7\u8bbf\u95ee`org.minbox.framework.logging.client.http.rest.LoggingRestTemplateInterceptor`\u67e5\u770b\u3002\\n\\n\u4e0d\u7ba1\u4f60\u4e00\u6b21\u8bf7\u6c42\u8de8\u5ea6\u51e0\u4e2a\u670d\u52a1\uff0c\u90fd\u53ef\u4ee5\u5c06`\u8bf7\u6c42\u5165\u53e3`\u751f\u6210\u7684`\u94fe\u8def\u4fe1\u606f`\u8fdb\u884c\u4f9d\u6b21\u4f20\u9012\uff0c\u800c\u4e0a\u4e0b\u7ea7\u5173\u7cfb\u5219\u662f\u6839\u636e`parentSpanId`\u3001`spanId`\u8fdb\u884c\u7ed1\u5b9a\u7684\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-logging-using-resttemplate-transparent-traceid`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-logging-using-openfeign-transparent-traceid","metadata":{"permalink":"/blog/apiboot-logging-using-openfeign-transparent-traceid","source":"@site/blog/logging/apiboot-logging-using-openfeign-transparent-traceid.md","title":"ApiBoot Logging\u4f7f\u7528SpringCloud Openfeign\u900f\u4f20\u94fe\u8def\u4fe1\u606f","description":"ApiBoot Logging\u53ef\u4ee5\u65e0\u7f1d\u6574\u5408SpringCloud\u6765\u91c7\u96c6\u8bf7\u6c42\u65e5\u5fd7\uff0c\u76ee\u524d\u652f\u6301RestTemplate\u3001Openfeign\u4e24\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u672c\u7ae0\u6765\u8bb2\u89e3\u4e0b\u5728\u4f7f\u7528Openfeign\u5b8c\u6210\u670d\u52a1\u4e4b\u95f4\u8bf7\u6c42\u76f8\u4e92\u8c03\u7528\u7684\u4e00\u6761\u94fe\u8def\u8bf7\u6c42\u65e5\u5fd7\u662f\u5426\u53ef\u4ee5\u90fd\u91c7\u96c6\u5230\u3002","date":"2019-11-05T15:47:14.000Z","formattedDate":"2019\u5e7411\u67085\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":10.6,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-logging-using-openfeign-transparent-traceid","title":"ApiBoot Logging\u4f7f\u7528SpringCloud Openfeign\u900f\u4f20\u94fe\u8def\u4fe1\u606f","authors":"hengboy","tags":["Log"],"date":"2019-11-05T15:47:14.000Z"},"prevItem":{"title":"ApiBoot Logging\u4f7f\u7528RestTemplate\u900f\u4f20\u94fe\u8def\u4fe1\u606f","permalink":"/blog/apiboot-logging-using-resttemplate-transparent-traceid"},"nextItem":{"title":"ApiBoot Logging\u6574\u5408SpringCloud Eureka\u8d1f\u8f7d\u5747\u8861\u4e0a\u62a5\u65e5\u5fd7","permalink":"/blog/apiboot-logging-integrates-eureka-report-logs"}},"content":"`ApiBoot Logging`\u53ef\u4ee5\u65e0\u7f1d\u6574\u5408`SpringCloud`\u6765\u91c7\u96c6\u8bf7\u6c42\u65e5\u5fd7\uff0c\u76ee\u524d\u652f\u6301`RestTemplate`\u3001`Openfeign`\u4e24\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u672c\u7ae0\u6765\u8bb2\u89e3\u4e0b\u5728\u4f7f\u7528`Openfeign`\u5b8c\u6210\u670d\u52a1\u4e4b\u95f4\u8bf7\u6c42\u76f8\u4e92\u8c03\u7528\u7684\u4e00\u6761\u94fe\u8def\u8bf7\u6c42\u65e5\u5fd7\u662f\u5426\u53ef\u4ee5\u90fd\u91c7\u96c6\u5230\u3002\\n\x3c!--truncate--\x3e\\n\\n## \u642d\u5efaEureka Server\\n\u6211\u4eec\u5148\u6765\u642d\u5efa\u4e00\u4e2a`Eureka Server`\uff0c\u8bf7\u8bbf\u95ee\u3010{% post_link eureka-server %}\u3011\u6587\u7ae0\u5185\u5bb9\u67e5\u770b\u5177\u4f53\u642d\u5efa\u6d41\u7a0b\u3002\\n## \u642d\u5efaLogging Admin\\n\u6211\u4eec\u9700\u8981\u642d\u5efa\u4e00\u4e2a`Logging Admin`\u7528\u4e8e\u63a5\u6536`Logging Client`\u4e0a\u62a5\u7684\u8bf7\u6c42\u65e5\u5fd7\uff0c\u8bf7\u8bbf\u95ee\u3010[ApiBoot Logging\u6574\u5408SpringCloud Eureka\u8d1f\u8f7d\u5747\u8861\u4e0a\u62a5\u65e5\u5fd7](http://localhost:4000/apiboot-logging-integrates-eureka-report-logs.html#%E5%B0%86Logging-Admin%E6%B3%A8%E5%86%8C%E5%88%B0Eureka)\u3011\u67e5\u770b\u5177\u4f53\u7684\u642d\u5efa\u6d41\u7a0b\u3002\\n\\n\u6211\u4eec\u672c\u7ae0\u6765\u6a21\u62df**\u63d0\u4ea4\u8ba2\u5355**\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u6d89\u53ca\u5230\u4e24\u4e2a\u670d\u52a1\uff0c\u5206\u522b\u662f\uff1a`\u5546\u54c1\u670d\u52a1`\u3001`\u8ba2\u5355\u670d\u52a1`\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u6765\u521b\u5efa\u8fd9\u4e24\u4e2a\u670d\u52a1\u3002\\n\\n**\u672c\u7ae0\u6e90\u7801\u91c7\u7528`Maven`\u591a\u6a21\u5757\u7684\u5f62\u5f0f\u8fdb\u884c\u7f16\u5199\uff0c\u8bf7\u62c9\u81f3\u6587\u7ae0\u672b\u5c3e\u67e5\u770b\u4e0b\u8f7d\u672c\u7ae0\u6e90\u7801\u3002**\\n\\n## \u6dfb\u52a0ApiBoot & SpringCloud\u7edf\u4e00\u7248\u672c\\n\\n\u7531\u4e8e\u662f\u91c7\u7528`Maven \u591a\u6a21\u5757`\u9879\u76ee\uff0c\u5b58\u5728**\u7ee7\u627f**\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728`root`\u6a21\u5757\u6dfb\u52a0\u7248\u672c\u4f9d\u8d56\u5373\u53ef\uff0c\u5176\u4ed6\u5b50\u6a21\u5757\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<properties>\\n  <java.version>1.8</java.version>\\n  \x3c!--ApiBoot\u7248\u672c\u53f7--\x3e\\n  <api.boot.version>2.1.5.RELEASE</api.boot.version>\\n  \x3c!--SpringCloud\u7248\u672c\u53f7--\x3e\\n  <spring.cloud.version>Greenwich.SR3</spring.cloud.version>\\n</properties>\\n<dependencyManagement>\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>${api.boot.version}</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n    <dependency>\\n      <groupId>org.springframework.cloud</groupId>\\n      <artifactId>spring-cloud-dependencies</artifactId>\\n      <version>${spring.cloud.version}</version>\\n      <type>pom</type>\\n      <scope>import</scope>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n\\n\\n## \u521b\u5efa\u516c\u5171Openfeign\u63a5\u53e3\u5b9a\u4e49\\n\\n\u5b66\u4e60\u8fc7`Openfeign`\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u77e5\u9053\uff0c`Openfeign`\u53ef\u4ee5\u7ee7\u627f\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u516c\u5171\u7684**\u670d\u52a1\u63a5\u53e3\u5b9a\u4e49**\uff0c\u5728\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u670d\u52a1\u8fdb\u884c\u4e1a\u52a1\u5b9e\u73b0\uff0c\u5728\u8c03\u7528\u8be5\u63a5\u53e3\u7684\u5730\u65b9\u76f4\u63a5\u6ce8\u5165\u5373\u53ef\u3002\\n\u4e0b\u9762\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`common-openfeign`\u7684\u516c\u5171\u4f9d\u8d56\u9879\u76ee\uff0c`pom.xml`\u6dfb\u52a0\u4f9d\u8d56\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  \x3c!--SpringBoot Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n    <optional>true</optional>\\n  </dependency>\\n  \x3c!--Openfeign--\x3e\\n  <dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-openfeign</artifactId>\\n    <optional>true</optional>\\n  </dependency>\\n</dependencies>\\n```\\n\\n\u5728\u63d0\u4ea4\u8ba2\u5355\u65f6\u6211\u4eec\u7b80\u5355\u6a21\u62df\u9700\u8981\u83b7\u53d6\u5546\u54c1\u7684\u5355\u4ef7\uff0c\u6240\u4ee5\u5728`common-openfeign`\u9879\u76ee\u5185\u6211\u4eec\u8981\u63d0\u4f9b\u4e00\u4e2a\u67e5\u8be2\u5546\u54c1\u5355\u4ef7\u7684\u670d\u52a1\u63a5\u53e3\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`GoodClient`\u7684\u63a5\u53e3\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\npackage org.minbox.chapter.common.openfeign;\\n\\nimport org.springframework.cloud.openfeign.FeignClient;\\nimport org.springframework.web.bind.annotation.GetMapping;\\nimport org.springframework.web.bind.annotation.PathVariable;\\nimport org.springframework.web.bind.annotation.RequestMapping;\\n\\n/**\\n * \u5546\u54c1\u670d\u52a1\u63a5\u53e3\u5b9a\u4e49\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@FeignClient(name = \\"good-service\\")\\n@RequestMapping(value = \\"/good\\")\\npublic interface GoodClient {\\n    /**\\n     * \u83b7\u53d6\u5546\u54c1\u4ef7\u683c\\n     *\\n     * @param goodId \u5546\u54c1\u7f16\u53f7\\n     * @return\\n     */\\n    @GetMapping(value = \\"/{goodId}\\")\\n    Double getGoodPrice(@PathVariable(\\"goodId\\") Integer goodId);\\n}\\n```\\n\\n**\u6ce8\u89e3\u89e3\u91ca\uff1a**\\n\\n- `@FeignClient`\uff1a`SpringCloud Openfeign`\u63d0\u4f9b\u7684\u63a5\u53e3\u5ba2\u6237\u7aef\u5b9a\u4e49\u6ce8\u89e3\uff0c\u901a\u8fc7`value`\u6216\u8005`name`\u6765\u6307\u5b9a`GoodClient`\u8bbf\u95ee\u7684\u5177\u4f53`ServiceID`\uff0c\u8fd9\u91cc\u6211\u4eec\u914d\u7f6e\u7684`value`\u503c\u4e3a`good-service`\u9879\u76ee`spring.application.name`\u914d\u7f6e\u53c2\u6570\uff08`ServiceID` = `spring.application.name`\uff09\u3002\\n\\n> \u8fd9\u6837\u5f53\u6211\u4eec\u901a\u8fc7\u6ce8\u5165`GoodClient`\u63a5\u53e3\u8c03\u7528`getGoodPrice`\u65b9\u6cd5\u65f6\uff0c\u5e95\u5c42\u901a\u8fc7`Openfeign`\u7684`Http`\u4ee3\u7406\u8bbf\u95ee`good-service`\u7684\u5bf9\u5e94\u63a5\u53e3\u3002\\n\\n## \u521b\u5efa\u5546\u54c1\u670d\u52a1\\n\\n\u4e0b\u9762\u6211\u4eec\u518d\u6765\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`good-service`\u7684`SpringBoot`\u9879\u76ee\u3002\\n### \u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\\n\\n\u5728`pom.xml`\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\uff1a\\n\\n```xml\\n<dependencies>\\n  \x3c!--ApiBoot Logging Client--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-logging</artifactId>\\n  </dependency>\\n\\n  \x3c!--SpringBoot Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n\\n  \x3c!--Eureka Client--\x3e\\n  <dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\\n  </dependency>\\n\\n  \x3c!--\u516c\u5171Openfeign\u63a5\u53e3\u5b9a\u4e49\u4f9d\u8d56--\x3e\\n  <dependency>\\n    <groupId>org.minbox.chapter</groupId>\\n    <artifactId>common-openfeign</artifactId>\\n    <version>0.0.1-SNAPSHOT</version>\\n  </dependency>\\n</dependencies>\\n```\\n\\n\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728`good-service`\u9879\u76ee\u4f9d\u8d56\u5185\u6dfb\u52a0\u4e86\u6211\u4eec\u5728\u4e0a\u9762\u521b\u5efa\u7684`common-openfeign`\u4f9d\u8d56\u6a21\u5757\uff0c\u56e0\u4e3a`GoodClient`\u670d\u52a1\u63a5\u53e3\u7684\u5b9e\u73b0\u662f\u5728`good-service`\u9879\u76ee\u5185\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0`common-openfeign`\u4f9d\u8d56\u540e\u521b\u5efa\u5bf9\u5e94\u7684`XxxController`\u5e76\u5b9e\u73b0`GoodClient`\u63a5\u53e3\u5b8c\u6210\u5bf9\u5e94\u7684\u4e1a\u52a1\u903b\u8f91\u5b9e\u73b0\u3002\\n\\n### \u5546\u54c1\u4e1a\u52a1\u5b9e\u73b0\\n\\n\u8fd9\u91cc\u6211\u4eec\u7b80\u5355\u505a\u4e2a\u793a\u4f8b\uff0c\u5c06\u4ef7\u683c\u56fa\u5b9a\u8fd4\u56de\uff0c\u5b9e\u73b0`GoodClient`\u7684\u63a7\u5236\u5668\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\npackage org.minbox.chapter.good.service;\\n\\nimport org.minbox.chapter.common.openfeign.GoodClient;\\nimport org.springframework.web.bind.annotation.RestController;\\n\\n/**\\n * \u5546\u54c1\u670d\u52a1\u63a5\u53e3\u5b9e\u73b0\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n * @see GoodClient\\n */\\n@RestController\\npublic class GoodController implements GoodClient {\\n    @Override\\n    public Double getGoodPrice(Integer goodId) {\\n        if (goodId == 1) {\\n            return 15.6;\\n        }\\n        return 0D;\\n    }\\n}\\n```\\n\\n### \u6ce8\u518c\u5230Eureka Server\\n\\n\u6211\u4eec\u9700\u8981\u5c06`good-service`\u6ce8\u518c\u5230`Eureka Server`\uff0c\u4fee\u6539`application.yml`\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# ServiceID\\nspring:\\n  application:\\n    name: good-service\\n# \u7aef\u53e3\u53f7\\nserver:\\n  port: 8082\\n# Eureka Config\\neureka:\\n  client:\\n    service-url:\\n      defaultZone: http://127.0.0.1:10000/eureka/\\n  instance:\\n    prefer-ip-address: true\\n```\\n\\n### \u914d\u7f6e\u4e0a\u62a5\u7684Logging Admin\\n\\n\u6211\u4eec\u9700\u8981\u5c06`good-service`\u7684\u8bf7\u6c42\u65e5\u5fd7\u4e0a\u62a5\u5230`Logging Admin`\uff0c\u91c7\u7528`SpringCloud ServiceID`\u7684\u65b9\u5f0f\u914d\u7f6e\uff0c\u4fee\u6539`application.yml`\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    logging:\\n      # \u63a7\u5236\u53f0\u6253\u5370\u65e5\u5fd7\\n      show-console-log: true\\n      # \u7f8e\u5316\u6253\u5370\u65e5\u5fd7\\n      format-console-log-json: true\\n      # \u914d\u7f6eLogging Admin \u670d\u52a1\u7f16\u53f7\\n      discovery:\\n        service-id: logging-admin\\n```\\n\\n### \u542f\u7528Eureka Client & Logging\\n\\n\u6700\u540e\u6211\u4eec\u5728`XxxApplication`\u5165\u53e3\u7c7b\u6dfb\u52a0\u6ce8\u89e3\u6765\u542f\u7528`Eureka Client`\u4ee5\u53ca`Logging Client`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u5546\u54c1\u670d\u52a1\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@SpringBootApplication\\n@EnableLoggingClient\\n@EnableDiscoveryClient\\npublic class GoodServiceApplication {\\n    /**\\n     * logger instance\\n     */\\n    static Logger logger = LoggerFactory.getLogger(GoodServiceApplication.class);\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(GoodServiceApplication.class, args);\\n        logger.info(\\"{}\u670d\u52a1\u542f\u52a8\u6210\u529f.\\", \\"\u5546\u54c1\\");\\n    }\\n}\\n```\\n\\n> \u81f3\u6b64\u6211\u4eec\u7684\u5546\u54c1\u670d\u52a1\u5df2\u7ecf\u51c6\u5907\u5b8c\u6210.\\n\\n## \u521b\u5efa\u8ba2\u5355\u670d\u52a1\\n\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`order-service`\u7684`SpringBoot`\u9879\u76ee\uff08\u5efa\u8bae\u53c2\u8003\u6e90\u7801\uff0c\u672c\u7ae0\u91c7\u7528Maven\u591a\u6a21\u5757\u521b\u5efa\uff09\u3002\\n### \u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\\n\u4fee\u6539`pom.xml`\u6dfb\u52a0\u76f8\u5173\u4f9d\u8d56\u5982\u4e0b\u6240\u793a\uff1a\\n```xml\\n<dependencies>\\n  \x3c!--ApiBoot Logging Client--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-logging</artifactId>\\n  </dependency>\\n\\n  \x3c!--SpringBoot Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n\\n  \x3c!--Eureka Client--\x3e\\n  <dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\\n  </dependency>\\n\\n  \x3c!--Openfeign--\x3e\\n  <dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-openfeign</artifactId>\\n  </dependency>\\n\\n  \x3c!--\u516c\u5171Openfeign\u63a5\u53e3\u5b9a\u4e49\u4f9d\u8d56--\x3e\\n  <dependency>\\n    <groupId>org.minbox.chapter</groupId>\\n    <artifactId>common-openfeign</artifactId>\\n    <version>0.0.1-SNAPSHOT</version>\\n  </dependency>\\n</dependencies>\\n```\\n### \u8ba2\u5355\u4e1a\u52a1\u5b9e\u73b0\\n\\n\u6211\u4eec\u6765\u6a21\u62df\u4e00\u4e2a**\u63d0\u4ea4\u8ba2\u5355**\u7684\u573a\u666f\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a`OrderController`\u7684\u63a7\u5236\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u8ba2\u5355\u63a7\u5236\u5668\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/order\\")\\npublic class OrderController {\\n    /**\\n     * \u5546\u54c1\u63a5\u53e3\u5b9a\u4e49\u6ce8\u5165\\n     * {@link GoodClient}\\n     */\\n    @Autowired\\n    private GoodClient goodClient;\\n\\n    @PostMapping\\n    public String submit(Integer goodId, Integer buyCount) {\\n        Double goodPrice = goodClient.getGoodPrice(goodId);\\n        Double orderAmount = goodPrice * buyCount;\\n        //...\\n        return \\"\u8ba2\u5355\u63d0\u4ea4\u6210\u529f\uff0c\u8ba2\u5355\u603b\u91d1\u989d\uff1a\\" + orderAmount;\\n    }\\n}\\n```\\n\\n\\n\\n### \u6ce8\u518c\u5230Eureka Server\\n\\n\u5c06\u6211\u4eec\u521b\u5efa\u7684`order-service`\u6ce8\u518c\u5230`Eureka Server`\uff0c\u4fee\u6539`application.yml`\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\nspring:\\n  application:\\n    name: order-service\\nserver:\\n  port: 8081\\n# Eureka Config\\neureka:\\n  client:\\n    service-url:\\n      defaultZone: http://127.0.0.1:10000/eureka/\\n  instance:\\n    prefer-ip-address: true\\n```\\n\\n### \u914d\u7f6e\u4e0a\u62a5\u7684Logging Admin\\n\\n\u6211\u4eec\u9700\u8981\u5c06`order-service`\u7684\u8bf7\u6c42\u65e5\u5fd7\u4e0a\u62a5\u5230`Logging Admin`\uff0c\u91c7\u7528`SpringCloud ServiceID`\u7684\u65b9\u5f0f\u914d\u7f6e\uff0c\u4fee\u6539`application.yml`\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    logging:\\n      # \u63a7\u5236\u53f0\u6253\u5370\u65e5\u5fd7\\n      show-console-log: true\\n      # \u7f8e\u5316\u6253\u5370\u65e5\u5fd7\\n      format-console-log-json: true\\n      # \u914d\u7f6eLogging Admin \u670d\u52a1\u7f16\u53f7\\n      discovery:\\n        service-id: logging-admin\\n```\\n\\n### \u542f\u7528Eureka Client & Logging\\n\\n\u4fee\u6539`order-service`\u5165\u53e3\u7c7b`OrderServiceApplication`\uff0c\u6dfb\u52a0\u542f\u7528`Eureka Client`\u3001`Logging Client`\u7684\u6ce8\u89e3\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u8ba2\u5355\u670d\u52a1\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@SpringBootApplication\\n@EnableDiscoveryClient\\n@EnableLoggingClient\\n@EnableFeignClients(basePackages = \\"org.minbox.chapter.common.openfeign\\")\\npublic class OrderServiceApplication {\\n    /**\\n     * logger instance\\n     */\\n    static Logger logger = LoggerFactory.getLogger(OrderServiceApplication.class);\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(OrderServiceApplication.class, args);\\n        logger.info(\\"{}\u670d\u52a1\u542f\u52a8\u6210\u529f.\\", \\"\\");\\n    }\\n}\\n```\\n\\n**\u6ce8\u89e3\u89e3\u91ca\uff1a**\\n\\n- `@EnableFeignClients`\uff1a\u8be5\u6ce8\u89e3\u662f`Openfeign`\u63d0\u4f9b\u7684\u542f\u7528\u81ea\u52a8\u626b\u63cf`Client`\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u901a\u8fc7`basePackages`\uff08\u57fa\u7840\u5305\u540d\uff09\u7684\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\u626b\u63cf\u5305\u4e0b\u914d\u7f6e`@FeignClient`\u6ce8\u89e3\u7684\u63a5\u53e3\uff0c\u5e76\u4e3a**\u6bcf\u4e2a\u63a5\u53e3**\u751f\u6210\u5bf9\u5e94\u7684`\u4ee3\u7406\u5b9e\u73b0`\u5e76\u6dfb\u52a0\u5230`Spring IOC`\u5bb9\u5668\u3002\\n\\n  `org.minbox.chapter.common.openfeign`\u5305\u540d\u5728`common-openfeign`\u9879\u76ee\u5185\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u4f9d\u6b21\u542f\u52a8\u9879\u76ee\uff0c`eureka-server` > `logging-admin` > `good-service` > `order-service`\u3002\\n\\n\u901a\u8fc7`curl`\u547d\u4ee4\u8bbf\u95ee`order-service`\u5185\u7684\u63d0\u4ea4\u8ba2\u5355\u5730\u5740\uff1a`/order`\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```bash\\n\u279c ~ curl -X POST http://localhost:8081/order\\\\?goodId\\\\=1\\\\&buyCount\\\\=3\\n\u8ba2\u5355\u63d0\u4ea4\u6210\u529f\uff0c\u8ba2\u5355\u603b\u91d1\u989d\uff1a46.8\\n```\\n\\n> \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u6210\u529f\u7684\u83b7\u53d6\u8ba2\u5355\u7684\u603b\u91d1\u989d\uff0c\u6211\u4eec\u5728`/order`\u8bf7\u6c42\u65b9\u6cd5\u5185\u8c03\u7528`good-service`\u83b7\u53d6\u5546\u54c1\u7684\u5355\u4ef7\u540e\u8ba1\u7b97\u5f97\u5230\u8ba2\u5355\u603b\u91d1\u989d\u3002\\n\\n### \u6d4b\u8bd5\u70b9\uff1a\u94fe\u8def\u4fe1\u606f\u4f20\u9012\\n\\n\u6211\u4eec\u901a\u8fc7\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u65e5\u5fd7\u4fe1\u606f\u6765\u786e\u8ba4\u4e0b\u94fe\u8def\u4fe1\u606f\uff08traceId\u3001spanId\uff09\u7684\u900f\u4f20\u662f\u5426\u6b63\u786e\u3002\\n\\n**\u6536\u5230order-service\u4e0a\u62a5\u7684\u65e5\u5fd7**\\n\\n```json\\nReceiving Service: \u3010order-service -> 127.0.0.1\u3011, Request Log Report\uff0cLogging Content\uff1a[\\n\\t{\\n\\t\\t\\"endTime\\":1573009439840,\\n\\t\\t\\"httpStatus\\":200,\\n\\t\\t\\"requestBody\\":\\"\\",\\n\\t\\t\\"requestHeaders\\":{\\n\\t\\t\\t\\"host\\":\\"localhost:8081\\",\\n\\t\\t\\t\\"user-agent\\":\\"curl/7.64.1\\",\\n\\t\\t\\t\\"accept\\":\\"*/*\\"\\n\\t\\t},\\n\\t\\t\\"requestIp\\":\\"0:0:0:0:0:0:0:1\\",\\n\\t\\t\\"requestMethod\\":\\"POST\\",\\n\\t\\t\\"requestParam\\":\\"{\\\\\\"buyCount\\\\\\":\\\\\\"3\\\\\\",\\\\\\"goodId\\\\\\":\\\\\\"1\\\\\\"}\\",\\n\\t\\t\\"requestUri\\":\\"/order\\",\\n\\t\\t\\"responseBody\\":\\"\u8ba2\u5355\u63d0\u4ea4\u6210\u529f\uff0c\u8ba2\u5355\u603b\u91d1\u989d\uff1a46.8\\",\\n\\t\\t\\"responseHeaders\\":{},\\n\\t\\t\\"serviceId\\":\\"order-service\\",\\n\\t\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\t\\"servicePort\\":\\"8081\\",\\n\\t\\t\\"spanId\\":\\"241ef717-b0b3-4fcc-adae-b63ffd3dbbe4\\",\\n\\t\\t\\"startTime\\":1573009439301,\\n\\t\\t\\"timeConsuming\\":539,\\n\\t\\t\\"traceId\\":\\"3e20cc72-c880-4575-90ed-d54a6b4fe555\\"\\n\\t}\\n]\\n```\\n\\n\\n\\n**\u6536\u5230good-service\u4e0a\u62a5\u7684\u65e5\u5fd7**\\n\\n```json\\nReceiving Service: \u3010good-service -> 127.0.0.1\u3011, Request Log Report\uff0cLogging Content\uff1a[\\n\\t{\\n\\t\\t\\"endTime\\":1573009439810,\\n\\t\\t\\"httpStatus\\":200,\\n\\t\\t\\"parentSpanId\\":\\"241ef717-b0b3-4fcc-adae-b63ffd3dbbe4\\",\\n\\t\\t\\"requestBody\\":\\"\\",\\n\\t\\t\\"requestHeaders\\":{\\n\\t\\t\\t\\"minbox-logging-x-parent-span-id\\":\\"241ef717-b0b3-4fcc-adae-b63ffd3dbbe4\\",\\n\\t\\t\\t\\"minbox-logging-x-trace-id\\":\\"3e20cc72-c880-4575-90ed-d54a6b4fe555\\",\\n\\t\\t\\t\\"host\\":\\"10.180.98.156:8082\\",\\n\\t\\t\\t\\"connection\\":\\"keep-alive\\",\\n\\t\\t\\t\\"accept\\":\\"*/*\\",\\n\\t\\t\\t\\"user-agent\\":\\"Java/1.8.0_211\\"\\n\\t\\t},\\n\\t\\t\\"requestIp\\":\\"10.180.98.156\\",\\n\\t\\t\\"requestMethod\\":\\"GET\\",\\n\\t\\t\\"requestParam\\":\\"{}\\",\\n\\t\\t\\"requestUri\\":\\"/good/1\\",\\n\\t\\t\\"responseBody\\":\\"15.6\\",\\n\\t\\t\\"responseHeaders\\":{},\\n\\t\\t\\"serviceId\\":\\"good-service\\",\\n\\t\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\t\\"servicePort\\":\\"8082\\",\\n\\t\\t\\"spanId\\":\\"6339664e-097d-4a01-a734-935de52a7d44\\",\\n\\t\\t\\"startTime\\":1573009439787,\\n\\t\\t\\"timeConsuming\\":23,\\n\\t\\t\\"traceId\\":\\"3e20cc72-c880-4575-90ed-d54a6b4fe555\\"\\n\\t}\\n]\\n```\\n\\n **\u7ed3\u679c\u5206\u6790\uff1a**\\n\\n- \u8bf7\u6c42\u65e5\u5fd7\u7684\u5165\u53e3\u4e3a`order-service`\u6240\u4ee5\u5e76\u4e0d\u5b58\u5728`parentSpanId`\uff08\u4e0a\u7ea7\u5355\u5143\u7f16\u53f7\uff09\uff0c\u800c`spanId`\uff08\u5355\u5143\u7f16\u53f7\uff09\u3001`traceId`\uff08\u94fe\u8def\u7f16\u53f7\uff09\u4e5f\u662f\u65b0\u751f\u6210\u7684\u3002\\n\\n- \u672c\u6b21\u8bf7\u6c42\u4f1a\u7ecf\u8fc7`good-service`\u670d\u52a1\uff0c\u56e0\u6b64`parentSpanId`\u5219\u662f`order-service`\u751f\u6210\u7684`spanId`\uff0c`traceId`\u540c\u6837\u4e5f\u662f`order-service`\u751f\u6210\u7684\uff0c\u900f\u4f20HttpHeader\u65b9\u5f0f\u8fdb\u884c\u4f20\u9012\uff0c\u8868\u793a\u5728\u540c\u4e00\u6761\u8bf7\u6c42\u94fe\u8def\u4e0a\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot Logging`\u652f\u6301\u4f7f\u7528`Openfeign`\u4f20\u9012\u94fe\u8def\u4fe1\u606f\uff0c\u5185\u90e8\u901a\u8fc7`Openfeign`\u62e6\u622a\u5668\u5b9e\u73b0\uff0c\u6e90\u7801\u8be6\u89c1\uff1a`org.minbox.framework.logging.client.http.openfeign.LoggingOpenFeignInterceptor`\u3002\\n\\n\u5c06`traceId`\uff08\u94fe\u8def\u7f16\u53f7\uff09\u3001`parentSpanId`\uff08\u5355\u5143\u7f16\u53f7\uff09\u901a\u8fc7`HttpHeader`\u7684\u5f62\u5f0f\u4f20\u9012\u5230\u76ee\u6807\u8bbf\u95ee\u670d\u52a1\uff0c\u670d\u52a1\u901a\u8fc7\u8bf7\u6c42\u65e5\u5fd7\u62e6\u622a\u5668\u8fdb\u884c\u63d0\u53d6\u5e76\u8bbe\u7f6e\u94fe\u8def\u7ed1\u5b9a\u5173\u7cfb\u3002\\n\\n- `traceId`\u4f20\u9012\u65f6HttpHeader\u540d\u79f0\u4e3a\uff1a`minbox-logging-x-trace-id`.\\n- `parentSpanId`\u4f20\u9012\u65f6HttpHeader\u540d\u79f0\u4e3a\uff1a`minbox-logging-x-parent-span-id`\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-logging-using-openfeign-transparent-traceid`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-logging-integrates-eureka-report-logs","metadata":{"permalink":"/blog/apiboot-logging-integrates-eureka-report-logs","source":"@site/blog/logging/apiboot-logging-integrates-eureka-report-logs.md","title":"ApiBoot Logging\u6574\u5408SpringCloud Eureka\u8d1f\u8f7d\u5747\u8861\u4e0a\u62a5\u65e5\u5fd7","description":"ApiBoot Logging\u652f\u6301\u6574\u5408\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff08Eureka\u3001Consul\u3001Nacos Discovery\u3001Zookeeper...\uff09\u8fdb\u884c\u4e0a\u62a5\u8bf7\u6c42\u65e5\u5fd7\uff0cLogging Client\u4f1a\u4ece\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u5185\u627e\u5230\u6307\u5b9aServiceID\u7684Logging Admin\u5177\u4f53\u53ef\u7528\u5b9e\u4f8b\uff0c\u901a\u8fc7SpringCloud Discovery\u5185\u90e8\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u8fd4\u56deLogging Admin\u7684\u90e8\u7f72\u670d\u52a1\u5668IP\u4ee5\u53ca\u7aef\u53e3\u53f7\uff0c\u8fd9\u6837Logging Client\u5c31\u53ef\u4ee5\u5b8c\u6210\u8bf7\u6c42\u65e5\u5fd7\u7684\u4e0a\u62a5\u6d41\u7a0b\u3002","date":"2019-11-04T16:33:12.000Z","formattedDate":"2019\u5e7411\u67084\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":5.475,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-logging-integrates-eureka-report-logs","title":"ApiBoot Logging\u6574\u5408SpringCloud Eureka\u8d1f\u8f7d\u5747\u8861\u4e0a\u62a5\u65e5\u5fd7","authors":"hengboy","tags":["Log"],"date":"2019-11-04T16:33:12.000Z"},"prevItem":{"title":"ApiBoot Logging\u4f7f\u7528SpringCloud Openfeign\u900f\u4f20\u94fe\u8def\u4fe1\u606f","permalink":"/blog/apiboot-logging-using-openfeign-transparent-traceid"},"nextItem":{"title":"ApiBoot Logging\u6574\u5408Spring Security\u5b89\u5168\u4e0a\u62a5\u65e5\u5fd7","permalink":"/blog/apiboot-logging-integrates-spring-security"}},"content":"`ApiBoot Logging`\u652f\u6301\u6574\u5408`\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3`\uff08Eureka\u3001Consul\u3001Nacos Discovery\u3001Zookeeper...\uff09\u8fdb\u884c\u4e0a\u62a5\u8bf7\u6c42\u65e5\u5fd7\uff0c`Logging Client`\u4f1a\u4ece\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u5185\u627e\u5230\u6307\u5b9a`ServiceID`\u7684`Logging Admin`\u5177\u4f53\u53ef\u7528\u5b9e\u4f8b\uff0c\u901a\u8fc7`SpringCloud Discovery`\u5185\u90e8\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u8fd4\u56de`Logging Admin`\u7684\u90e8\u7f72`\u670d\u52a1\u5668IP`\u4ee5\u53ca`\u7aef\u53e3\u53f7`\uff0c\u8fd9\u6837`Logging Client`\u5c31\u53ef\u4ee5\u5b8c\u6210\u8bf7\u6c42\u65e5\u5fd7\u7684\u4e0a\u62a5\u6d41\u7a0b\u3002\\n\\n\x3c!--truncate--\x3e\\n## \u642d\u5efaEureka Server\\n\u6211\u4eec\u5148\u6765\u642d\u5efa\u4e00\u4e2a`Eureka Server`\uff0c\u8bf7\u8bbf\u95ee\u3010{% post_link eureka-server %}\u3011\u6587\u7ae0\u5185\u5bb9\u67e5\u770b\u5177\u4f53\u642d\u5efa\u6d41\u7a0b\u3002\\n\\n## \u5c06Logging Admin\u6ce8\u518c\u5230Eureka\\n\u65e2\u7136\u4f7f\u7528\u7684\u662f`\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3`\uff0c\u6211\u4eec\u9700\u8981\u5c06\u4e4b\u524d\u7ae0\u8282\u5c06\u7684`Logging Admin`\u8fdb\u884c\u7b80\u5355\u7684\u6539\u9020\uff0c\u6dfb\u52a0`Eureka`\u5ba2\u6237\u7aef\u76f8\u5173\u7684\u4f9d\u8d56\uff0c\u5e76\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0`Eureka Server`\u7684\u76f8\u5173\u914d\u7f6e\uff0c\u5982\u679c\u5bf9`Logging Admin`\u4e0d\u4e86\u89e3\u7684\u540c\u5b66\u53ef\u4ee5\u8bbf\u95ee\u3010{% post_link apiboot-report-logs-by-logging-to-admin %}\u3011\u67e5\u770b\u6587\u7ae0\u5185\u5bb9\uff0c\u6587\u7ae0\u5e95\u90e8\u6709\u6e90\u7801\u3002\\n### \u6dfb\u52a0Eureka Client\u4f9d\u8d56\\n\u6211\u4eec\u9700\u8981\u5c06`Logging Admin`\u6ce8\u518c\u5230`Eureka Server`\uff0c\u5bf9\u4e8e`Eureka Server`\u800c\u8a00`Logging Admin`\u662f\u4e00\u4e2a`\u5ba2\u6237\u7aef`\uff08Eureka Client\uff09\u89d2\u8272\u3002\\n\\n\u6211\u4eec\u5728`pom.xml`\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a\\n\\n```xml\\n\x3c!--Eureka Client--\x3e\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\\n</dependency>\\n```\\n\\n### \u542f\u7528Eureka Client\\n\\n\u6dfb\u52a0\u4f9d\u8d56\u540e\u6211\u4eec\u8fd8\u9700\u8981\u5728`XxxApplication`\u5165\u53e3\u7c7b\u6dfb\u52a0`@EnableDiscoveryClient`\u6ce8\u89e3\u6765\u542f\u7528`Eureka Client`\u7684\u76f8\u5173\u529f\u80fd\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n@SpringBootApplication\\n@EnableLoggingAdmin\\n@EnableDiscoveryClient\\npublic class LoggingAdminApplication {\\n    /**\\n     * logger instance\\n     */\\n    static Logger logger = LoggerFactory.getLogger(LoggingAdminApplication.class);\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(LoggingAdminApplication.class, args);\\n        logger.info(\\"{}\u670d\u52a1\u542f\u52a8\u6210\u529f.\\", \\"\u65e5\u5fd7\u7ba1\u7406\u4e2d\u5fc3\\");\\n    }\\n}\\n```\\n\\n\\n\\n### \u914d\u7f6e\u6ce8\u518c\u5230Eureka Server\\n\\n\u6211\u4eec\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u8fde\u63a5\u5230`Eureka Server`\u7684\u76f8\u5173\u914d\u7f6e\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# Eureka Config\\neureka:\\n  client:\\n    service-url:\\n      defaultZone: http://127.0.0.1:10000/eureka/\\n  instance:\\n    prefer-ip-address: true\\n```\\n\\n## \u5c06Logging Client\u6ce8\u518c\u5230Eureka\\n\\n`Logging Client`\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u7684\u4e1a\u52a1\u670d\u52a1\uff0c\u4e0d\u8981\u88ab\u540d\u79f0\u8bef\u5bfc\uff0c\u6211\u4eec\u5728\u672c\u7ae0\u6e90\u7801\u5185\u521b\u5efa\u4e00\u4e2a`user-service`\u6a21\u5757\u6765\u4f5c\u4e3a\u6d4b\u8bd5\u7684\u4e1a\u52a1\u670d\u52a1\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u5c06`user-service`\u4f5c\u4e3a\u5ba2\u6237\u7aef\u6ce8\u518c\u5230`Eureka Server`\uff0c\u53ef\u53c2\u8003\u3010[\u4f7f\u7528ApiBoot Logging\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\u8bf7\u6c42\u65e5\u5fd7](https://blog.yuqiyu.com/apiboot-unified-manage-request-logs.html)\u3011\u6587\u7ae0\u5185\u5bb9\u521b\u5efa\u9879\u76ee\u3002\\n\\n### \u6dfb\u52a0Eureka Client\u4f9d\u8d56\\n\\n\u5728`pom.xml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\uff1a\\n\\n```xml\\n\x3c!--Eureka Client--\x3e\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\\n</dependency>\\n```\\n\\n### \u542f\u7528Eureka Client\\n\\n\u6dfb\u52a0\u4f9d\u8d56\u540e\u540c\u6837\u9700\u8981\u542f\u7528`Eureak Client`\uff0c\u8fd9\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u6b65\u9aa4\uff0c\u5728\u6211\u4eec\u7684\u5165\u53e3\u7c7b`XxxApplication`\u4e0a\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n@SpringBootApplication\\n@EnableDiscoveryClient\\n@EnableLoggingClient\\npublic class UserServiceApplication {\\n    /**\\n     * logger instance\\n     */\\n    static Logger logger = LoggerFactory.getLogger(UserServiceApplication.class);\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(UserServiceApplication.class, args);\\n        logger.info(\\"{}\u670d\u52a1\u542f\u52a8\u6210\u529f.\\", \\"\u7528\u6237\\");\\n    }\\n}\\n```\\n\\n\\n\\n### \u914d\u7f6e\u6ce8\u518c\u5230Eureka Server\\n\\n\u6211\u4eec\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0`Eureka Server`\u7684\u76f8\u5173\u914d\u7f6e\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# Eureka Config\\neureka:\\n  client:\\n    service-url:\\n      defaultZone: http://127.0.0.1:10000/eureka/\\n  instance:\\n    prefer-ip-address: true\\n```\\n\\n### \u914d\u7f6eLogging Admin\u670d\u52a1\u4fe1\u606f\\n\\n\u8fd9\u662f\u672c\u7ae0\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u6211\u4eec\u5728\u4e4b\u524d\u90fd\u662f\u901a\u8fc7`api.boot.logging.admin.server-address`\u53c2\u6570\u8fdb\u884c\u914d\u7f6e`Logging Admin`\u7684`IP\u5730\u5740`\u4ee5\u53ca`\u670d\u52a1\u7aef\u53e3\u53f7`\uff0c\u800c\u672c\u7ae0\u6211\u4eec\u5c31\u8981\u501f\u52a9`\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3`\uff08Eureka Server\uff09\u6765\u4ece\u5b9e\u4f8b\u5217\u8868\u4e2d\u83b7\u53d6`Logging Admin`\u670d\u52a1\u4fe1\u606f\uff0c`ApiBoot Logging`\u63d0\u4f9b\u4e86\u4e00\u4e2a\u914d\u7f6e\u53c2\u6570`api.boot.logging.discovery.service-id`\u8fdb\u884c\u914d\u7f6e`Logging Admin`\u7684`ServiceID`\uff0c\u4e5f\u5c31\u662f`spring.application.name`\u53c2\u6570\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# ApiBoot Config\\napi:\\n  boot:\\n    logging:\\n      discovery:\\n        # Logging Admin ServiceID\\n        service-id: logging-admin\\n      show-console-log: true\\n      format-console-log-json: true\\n```\\n\\n> \u6bcf\u5f53\u6211\u4eec\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0cLogging Client\u5c31\u4f1a\u4ece`Eureak Server`\u5185\u83b7\u53d6`ServiceID = logging-admin`\u7684\u670d\u52a1\u5217\u8868\uff0c\u8d1f\u8f7d\u5747\u8861\u7b5b\u9009\u540e\u83b7\u53d6\u4e00\u4e2a**\u53ef\u7528\u7684\u5b9e\u4f8b**\u4fe1\u606f\u8fdb\u884c\u4e0a\u62a5\u65e5\u5fd7\u3002\\n\\n## \u8fd0\u884c\u6d4b\u8bd5\\n\\n\u6211\u4eec\u5c06\u672c\u7ae0\u6e90\u7801\u5185\u7528\u5230\u7684\u4e09\u4e2a\u670d\u52a1`eureka-server`\u3001`logging-admin`\u3001`user-service`\u4f9d\u6b21\u542f\u52a8\u3002\\n\\n\u901a\u8fc7`curl`\u547d\u4ee4\u8bbf\u95ee`user-service`\u63d0\u4f9b\u7684`Controller`\u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```bash\\n\u279c ~ curl http://localhost:9090/test\\\\?name\\\\=admin\\n\u4f60\u597d\uff1aadmin\\n```\\n\\n\u6211\u4eec\u53ef\u4ee5\u5728`logging-admin`\u63a7\u5236\u53f0\u770b\u5230`user-service`\u4e0a\u62a5\u7684\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\nReceiving Service: \u3010user-service -> 127.0.0.1\u3011, Request Log Report\uff0cLogging Content\uff1a[\\n\\t{\\n\\t\\t\\"endTime\\":1572921905360,\\n\\t\\t\\"httpStatus\\":200,\\n\\t\\t\\"requestBody\\":\\"\\",\\n\\t\\t\\"requestHeaders\\":{\\n\\t\\t\\t\\"host\\":\\"localhost:9090\\",\\n\\t\\t\\t\\"user-agent\\":\\"curl/7.64.1\\",\\n\\t\\t\\t\\"accept\\":\\"*/*\\"\\n\\t\\t},\\n\\t\\t\\"requestIp\\":\\"0:0:0:0:0:0:0:1\\",\\n\\t\\t\\"requestMethod\\":\\"GET\\",\\n\\t\\t\\"requestParam\\":\\"{\\\\\\"name\\\\\\":\\\\\\"admin\\\\\\"}\\",\\n\\t\\t\\"requestUri\\":\\"/test\\",\\n\\t\\t\\"responseBody\\":\\"\u4f60\u597d\uff1aadmin\\",\\n\\t\\t\\"responseHeaders\\":{},\\n\\t\\t\\"serviceId\\":\\"user-service\\",\\n\\t\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\t\\"servicePort\\":\\"9090\\",\\n\\t\\t\\"spanId\\":\\"d97c515f-a147-4f89-9c59-398905c95a73\\",\\n\\t\\t\\"startTime\\":1572921905336,\\n\\t\\t\\"timeConsuming\\":24,\\n\\t\\t\\"traceId\\":\\"5e6c0357-1625-4a28-af18-cacdddba146a\\"\\n\\t}\\n]\\n```\\n\\n\u81ea\u6b64\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u7684\u6574\u5408`Eureka`\u4e0e`ApiBoot Logging`\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n`ApiBoot Logging`\u5185\u90e8\u63d0\u4f9b\u7684\u4e24\u79cd\u83b7\u53d6`Logging Admin`\u670d\u52a1\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u5206\u522b\u662f\uff1a`service-id`\u3001`server-address`\uff0c\u90fd\u662f\u6bd4\u8f83\u5e38\u7528\u7684\uff0c\u4f7f\u7528`service-id`\u65b9\u5f0f\u53ef\u4ee5\u65e0\u7f1d\u6574\u5408`SpringCloud`\u8fdb\u884c\u4f7f\u7528\uff0c\u800c\u94fe\u8def\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7`Openfeign`\u3001`RestTemplate`\u8fdb\u884c\u4f20\u9012\uff0c\u8fd9\u4f1a\u5728\u6211\u4eec\u540e\u671f\u7684\u77e5\u8bc6\u70b9\u4e2d\u8bb2\u5230\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-logging-integrates-eureka-report-logs`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-logging-integrates-spring-security","metadata":{"permalink":"/blog/apiboot-logging-integrates-spring-security","source":"@site/blog/logging/apiboot-logging-integrates-spring-security-report-logs.md","title":"ApiBoot Logging\u6574\u5408Spring Security\u5b89\u5168\u4e0a\u62a5\u65e5\u5fd7","description":"ApiBoot Logging\u5728\u4e0a\u62a5\u65e5\u5fd7\u65f6\u867d\u7136\u662f\u4e00\u822c\u901a\u8fc7\u5185\u7f51\u7684\u5f62\u5f0f\u90e8\u7f72\uff0c\u4e0d\u8fc7\u5b89\u5168\u65b9\u9762\u8fd8\u662f\u4e3b\u8981\u4f9d\u8d56\u4e8e\u670d\u52a1\u5668\u7684\u5b89\u5168\u7b56\u7565\uff08\u9632\u706b\u5899\uff09\uff0c\u4e3a\u4e86\u63d0\u9ad8\u65e5\u5fd7\u4e0a\u62a5\u7684\u5b89\u5168\u6027\uff0cApiBoot Logging\u652f\u6301\u4e86\u6574\u5408Spring Security\u6765\u4f7f\u7528Basic Auth\u7684\u5f62\u5f0f\u4e0a\u4f20\u65e5\u5fd7\u4fe1\u606f\u3002","date":"2019-11-03T21:34:14.000Z","formattedDate":"2019\u5e7411\u67083\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":3.39,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-logging-integrates-spring-security","title":"ApiBoot Logging\u6574\u5408Spring Security\u5b89\u5168\u4e0a\u62a5\u65e5\u5fd7","authors":"hengboy","tags":["Log"],"date":"2019-11-03T21:34:14.000Z"},"prevItem":{"title":"ApiBoot Logging\u6574\u5408SpringCloud Eureka\u8d1f\u8f7d\u5747\u8861\u4e0a\u62a5\u65e5\u5fd7","permalink":"/blog/apiboot-logging-integrates-eureka-report-logs"},"nextItem":{"title":"\u81ea\u5b9a\u4e49ApiBoot Logging\u94fe\u8def\u4ee5\u53ca\u5355\u5143ID","permalink":"/blog/apiboot-custom-logging-traceid"}},"content":"`ApiBoot Logging`\u5728\u4e0a\u62a5\u65e5\u5fd7\u65f6\u867d\u7136\u662f\u4e00\u822c\u901a\u8fc7\u5185\u7f51\u7684\u5f62\u5f0f\u90e8\u7f72\uff0c\u4e0d\u8fc7\u5b89\u5168\u65b9\u9762\u8fd8\u662f\u4e3b\u8981\u4f9d\u8d56\u4e8e\u670d\u52a1\u5668\u7684`\u5b89\u5168\u7b56\u7565`\uff08\u9632\u706b\u5899\uff09\uff0c\u4e3a\u4e86\u63d0\u9ad8\u65e5\u5fd7\u4e0a\u62a5\u7684\u5b89\u5168\u6027\uff0c`ApiBoot Logging`\u652f\u6301\u4e86\u6574\u5408`Spring Security`\u6765\u4f7f\u7528`Basic Auth`\u7684\u5f62\u5f0f\u4e0a\u4f20\u65e5\u5fd7\u4fe1\u606f\u3002\\n\x3c!--truncate--\x3e\\n\\n## \u521b\u5efaLogging Admin\u9879\u76ee\\n\u6211\u4eec\u9700\u8981\u5728\u96c6\u6210`ApiBoot Logging Admin`\u9879\u76ee\u5185\u6dfb\u52a0`Spring Security`\u76f8\u5173\u4f9d\u8d56\u6765\u5b8c\u6210\u5b89\u5168\u914d\u7f6e\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a`Logging Admin`\u9879\u76ee\uff0c\u53ef\u53c2\u8003\u3010{% post_link apiboot-report-logs-by-logging-to-admin %}\u3011\u6587\u7ae0\u5185\u5bb9\u3002\\n### \u96c6\u6210Spring Security\\n\u5728`Logging Admin`\u9879\u76ee`pom.xml`\u6587\u4ef6\u5185\u6dfb\u52a0`Spring Security`\u4f9d\u8d56\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n```xml\\n\x3c!--SpringBoot Security--\x3e\\n<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-security</artifactId>\\n</dependency>\\n```\\n### \u914d\u7f6eSpring Security\u8ba4\u8bc1\u7528\u6237\\n\\n\u6211\u4eec\u4f7f\u7528`SpringBoot`\u96c6\u6210`Spring Security`\u63d0\u4f9b\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u914d\u7f6e`Basic User`\u4fe1\u606f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u7684\u662f\u5185\u5b58\u65b9\u5f0f\uff0c\u7528\u6237\u4fe1\u606f\u88ab\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u5982\u679c\u4f60\u9700\u8981\u4ece\u6570\u636e\u5e93\u5185\u8bfb\u53d6\uff0c\u53ef\u4ee5\u67e5\u770b`Spring Security`\u7684`UserDetails`\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u3002\\n\\n**application.yml**\u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a\\n\\n```yaml\\nspring:\\n  # \u914d\u7f6e\u5185\u5b58\u65b9\u5f0fSpring Security\u7528\u6237\u4fe1\u606f\\n  security:\\n    user:\\n      name: admin\\n      password: admin123\\n```\\n\\n\\n\\n## \u521b\u5efaLogging Client\u9879\u76ee\\n\\n\u6211\u4eec\u7684\u4e1a\u52a1\u670d\u52a1\u9700\u8981\u96c6\u6210`ApiBoot Logging`\u4f9d\u8d56\uff08\u4f5c\u4e3a`Logging Client`\u8fdb\u884c\u4e0a\u62a5\u8bf7\u6c42\u65e5\u5fd7\uff09\uff0c\u53ef\u53c2\u8003\u3010{% post_link apiboot-unified-manage-request-logs %}\u3011\u6587\u7ae0\u5185\u5bb9\u521b\u5efa\u9879\u76ee\u3002\\n\\n### \u914d\u7f6e\u5b89\u5168\u4e0a\u62a5\\n\\n\u5982\u679c\u4f7f\u7528\u8fc7`Eureka`\u7684\u5c0f\u4f19\u4f34\u5e94\u8be5\u5bf9**\u8def\u5f84**\u914d\u7f6e`Basic User`\u7684\u65b9\u5f0f\u4e0d\u964c\u751f\uff0c\u683c\u5f0f\u4e3a\uff1a`username:password@ip:port`\u3002\\n\\n**application.yml**\u4fee\u6539\u4e0a\u62a5\u7684`Logging Admin`\u8def\u5f84\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    logging:\\n      # \u7f8e\u5316\u6253\u5370\u65e5\u5fd7\\n      format-console-log-json: true\\n      # \u63a7\u5236\u53f0\u663e\u793a\u6253\u5370\u65e5\u5fd7\\n      show-console-log: true\\n      # \u914d\u7f6eLogging Admin\\n      admin:\\n        server-address: admin:admin123@127.0.0.1:8081\\n```\\n\\n\u6211\u4eec\u5728`Logging Admin`\u914d\u7f6e\u7684\u7528\u6237\u540d\u4e3a\uff1a`admin`\uff0c\u5bc6\u7801\u4e3a\uff1a`admin123`\uff0c\u800c`@`\u7b26\u53f7\u540e\u9762\u5c31\u662f`Logging Admin`\u7684`IP\u5730\u5740`\u4ee5\u53ca`\u7aef\u53e3\u53f7`\u3002\\n\\n## \u6d4b\u8bd5\\n\\n\u4e0b\u9762\u6211\u4eec\u8fdb\u884c\u6d4b\u8bd5`Spring Security`\u662f\u5426\u8d77\u5230\u4e86\u4f5c\u7528\u3002\\n\\n\u4f9d\u6b21\u542f\u52a8`Logging Admin`\u3001`Logging Client`\uff0c\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8bbf\u95ee\u63a5\u53e3\uff1a\\n\\n```bash\\n\u279c ~ curl http://localhost:8080/test\\\\?name\\\\=admin \\n\u4f60\u597d\uff1aadmin\\n```\\n\\n\u5728`Logging Admin`\u63a7\u5236\u53f0\u53ef\u4ee5\u770b\u5230\u4e0a\u62a5\u7684\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\u65f6\uff0c\u8bc1\u660e\u6211\u4eec\u5df2\u7ecf**\u5b89\u5168\u7684\u4e0a\u62a5\u4e86\u65e5\u5fd7**\uff0c\u5982\u679c`Logging Client`\u63a7\u5236\u53f0\u6253\u5370`401 Exception`\u8ba4\u8bc1\u9519\u8bef\u4fe1\u606f\uff0c\u8bf7\u68c0\u67e5`Logging Client`\u914d\u7f6e\u7684\u8def\u5f84`Basic User`\u662f\u5426\u6b63\u786e\u3002\\n\\n## \u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\\n\\n\u8bf7\u6c42\u65e5\u5fd7\u662f\u7528\u6765\u68c0\u67e5\u63a5\u53e3\u7684\u7a33\u5b9a\u6027\u3001\u6392\u9664\u4e00\u4e9b\u8bf7\u6c42\u5f02\u5e38\u95ee\u9898\u7684\u4e3b\u8981\u51ed\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u5c3d\u53ef\u80fd\u8981\u4fdd\u8bc1\u6570\u636e\u7684\u6709\u6548\u6027\u3001\u5b89\u5168\u6027\uff0c\u5efa\u8bae\u642d\u914d`Spring Security`\u4e00\u5757\u4f7f\u7528`ApiBoot Logging`\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-logging-integrates-spring-security`\uff1a\\n\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-custom-logging-traceid","metadata":{"permalink":"/blog/apiboot-custom-logging-traceid","source":"@site/blog/logging/apiboot-custom-logging-traceid.md","title":"\u81ea\u5b9a\u4e49ApiBoot Logging\u94fe\u8def\u4ee5\u53ca\u5355\u5143ID","description":"ApiBoot Logging\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u5bf9\u5e94\u521b\u5efa\u94fe\u8def\u7f16\u53f7\uff08TraceID\uff09\u4ee5\u53ca\u5355\u5143\u7f16\u53f7\uff08SpanID\uff09\uff0c\u7528\u4e8e\u5f52\u7c7b\u6bcf\u4e00\u6b21\u8bf7\u6c42\u65e5\u5fd7\uff0c\u901a\u8fc7\u4e00\u4e2a\u94fe\u8def\u4e0b\u65e5\u5fd7\u5355\u5143\u7684Parent SpanID\u53ef\u4ee5\u8fdb\u884c\u4e0a\u4e0b\u7ea7\u5173\u7cfb\u7684\u68b3\u7406\u3002","date":"2019-10-21T16:44:52.000Z","formattedDate":"2019\u5e7410\u670821\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":7.845,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-custom-logging-traceid","title":"\u81ea\u5b9a\u4e49ApiBoot Logging\u94fe\u8def\u4ee5\u53ca\u5355\u5143ID","authors":"hengboy","tags":["Log"],"date":"2019-10-21T16:44:52.000Z"},"prevItem":{"title":"ApiBoot Logging\u6574\u5408Spring Security\u5b89\u5168\u4e0a\u62a5\u65e5\u5fd7","permalink":"/blog/apiboot-logging-integrates-spring-security"},"nextItem":{"title":"\u5c06ApiBoot Logging\u91c7\u96c6\u7684\u65e5\u5fd7\u4e0a\u62a5\u5230Admin","permalink":"/blog/apiboot-report-logs-by-logging-to-admin"}},"content":"`ApiBoot Logging`\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u5bf9\u5e94\u521b\u5efa\u94fe\u8def\u7f16\u53f7\uff08`TraceID`\uff09\u4ee5\u53ca\u5355\u5143\u7f16\u53f7\uff08`SpanID`\uff09\uff0c\u7528\u4e8e\u5f52\u7c7b\u6bcf\u4e00\u6b21\u8bf7\u6c42\u65e5\u5fd7\uff0c\u901a\u8fc7\u4e00\u4e2a\u94fe\u8def\u4e0b\u65e5\u5fd7\u5355\u5143\u7684`Parent SpanID`\u53ef\u4ee5\u8fdb\u884c\u4e0a\u4e0b\u7ea7\u5173\u7cfb\u7684\u68b3\u7406\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u524d\u6587\u56de\u987e\\n\\n- {% post_link apiboot-unified-manage-request-logs %}\\n\\n- {% post_link apiboot-report-logs-by-logging-to-admin %}\\n\\n## \u4e86\u89e3\u94fe\u8def\u7f16\u53f7\u7684\u4f20\u9012\u65b9\u5f0f\\n![](/img/post/apiboot-custom-logging-traceid-1.png)\\n\\n\u5728\u6bcf\u4e00\u6b21\u8bf7\u6c42\u4e2d\u94fe\u8def\u7f16\u53f7\uff08`traceId`\uff09\u3001\u5355\u5143\u7f16\u53f7`\uff08spanId\uff09`\u90fd\u662f\u901a\u8fc7`HttpHeader`\u7684\u65b9\u5f0f\u8fdb\u884c\u4f20\u9012\uff0c\u65e5\u5fd7\u7684\u8d77\u59cb\u4f4d\u7f6e\u4f1a\u4e3b\u52a8\u751f\u6210`traceId`\u3001`spanId`\uff0c\u800c\u8d77\u59cb\u4f4d\u7f6e\u7684`Parent SpanId`\u5219\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u503c\u4e3a`null`\u3002\\n\\n\u8fd9\u6837\u6bcf\u6b21\u901a\u8fc7`restTemplate`\u3001`Openfeign`\u7684\u5f62\u5f0f\u8bbf\u95ee\u5176\u4ed6\u670d\u52a1\u7684\u63a5\u53e3\u65f6\uff0c\u5c31\u4f1a**\u643a\u5e26\u8d77\u59cb\u4f4d\u7f6e\u751f\u6210\u7684`traceId`\u3001`spanId`\u5230\u4e0b\u4e00\u4e2a\u670d\u52a1\u5355\u5143**\u3002\\n\\n\\n## \u9ed8\u8ba4\u7f16\u53f7\\n\\n`ApiBoot Logging`\u5185\u90e8\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u7684\u7f16\u53f7\u683c\u5f0f\uff0c\u9ed8\u8ba4\u4e3a\u901a\u7528\u683c\u5f0f\uff0c\u6ca1\u6709\u533a\u5206\u6027\uff0c\u65e0\u6cd5\u4ece\u7f16\u53f7\u4e0a\u8fdb\u884c\u533a\u5206\u65e5\u5fd7\u7684\u5177\u4f53\u5f52\u7c7b\u3002\\n\\n### \u9ed8\u8ba4\u7684\u94fe\u8def\u7f16\u53f7\\n\\n`ApiBoot Logging`\u5185\u90e8\u901a\u8fc7\u96c6\u6210`minbox-logging`\u65e5\u5fd7\u7ec4\u4ef6\u6765\u5b8c\u6210\u65e5\u5fd7\u7684\u91c7\u96c6\u7b49\u57fa\u672c\u529f\u80fd\uff0c\u6bcf\u4e00\u6b21\u751f\u6210\u91c7\u96c6\u7684\u65e5\u5fd7\u65f6\u90fd\u4f1a\u901a\u8fc7**LoggingTraceGenerator**\u63a5\u53e3\u8fdb\u884c\u751f\u6210\u94fe\u8def\u7f16\u53f7\uff08`TraceID`\uff09\uff0c\u8be5\u63a5\u53e3\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * ApiBoot Logging Tracer\\n * Create new traceId\\n *\\n * @author\uff1a\u6052\u5b87\u5c11\u5e74 - \u4e8e\u8d77\u5b87\\n * <p>\\n * DateTime\uff1a2019-07-10 17:01\\n * Blog\uff1ahttp://blog.yuqiyu.com\\n * WebSite\uff1ahttp://www.jianshu.com/u/092df3f77bca\\n * Gitee\uff1ahttps://gitee.com/hengboy\\n * GitHub\uff1ahttps://github.com/hengboy\\n */\\npublic interface LoggingTraceGenerator {\\n    /**\\n     * create new traceId\\n     *\\n     * @return traceId\\n     * @throws MinBoxLoggingException exception\\n     */\\n    String createTraceId() throws MinBoxLoggingException;\\n\\n}\\n```\\n\\n\\n\\n`ApiBoot Logging`\u9ed8\u8ba4\u7684\u94fe\u8def\u7f16\u53f7\uff08`TraceID`\uff09\u91c7\u7528\u7684\u662f**UUID\u968f\u673a\u5b57\u7b26\u4e32**\u7684\u65b9\u5f0f\u751f\u6210\u7684\uff0c\u5185\u90e8\u5b9e\u73b0\u662f\u901a\u8fc7**LoggingTraceGenerator**\u63a5\u53e3\u7684\u9ed8\u8ba4\u5b9e\u73b0\u7c7b**LoggingDefaultTraceGenerator**\u8fdb\u884c\u751f\u6210\uff0c\u751f\u6210\u7c7b\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * ApiBoot Logging Tracer Default Support Instance\\n *\\n * @author\uff1a\u6052\u5b87\u5c11\u5e74 - \u4e8e\u8d77\u5b87\\n * <p>\\n * DateTime\uff1a2019-07-10 17:28\\n * Blog\uff1ahttp://blog.yuqiyu.com\\n * WebSite\uff1ahttp://www.jianshu.com/u/092df3f77bca\\n * Gitee\uff1ahttps://gitee.com/hengboy\\n * GitHub\uff1ahttps://github.com/hengboy\\n */\\npublic class LoggingDefaultTraceGenerator implements LoggingTraceGenerator {\\n    /**\\n     * Use UUID as the default traceId\\n     *\\n     * @return traceId\\n     * @throws MinBoxLoggingException Exception\\n     */\\n    @Override\\n    public String createTraceId() throws MinBoxLoggingException {\\n        return UUID.randomUUID().toString();\\n    }\\n}\\n\\n```\\n\\n\\n\\n### \u9ed8\u8ba4\u7684\u5355\u5143\u7f16\u53f7\\n\\n`\u5355\u5143\u7f16\u53f7`\u662f\u4e00\u6761\u94fe\u8def\u4e0b\u7ecf\u8fc7\u7684\u6bcf\u4e00\u4e2a\u4e1a\u52a1\u5355\u5143\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u5728`SpringCloud`\u5fae\u670d\u52a1\u7684\u573a\u666f\u4e0b\u6bcf\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42\u5185\u90e8\u901a\u8fc7`Openfeign`\u53ef\u80fd\u4f1a\u7ecf\u8fc7\u591a\u4e2a`\u670d\u52a1`\uff0c\u8fd9\u6837\u6bcf\u7ecf\u8fc7\u7684\u4e00\u4e2a\u670d\u52a1\u79f0\u4e4b\u4e3a\u5355\u5143\uff0c\u800c\u5f53\u524d\u8fd9\u6761\u94fe\u8def\u4e0b\u7684\u5355\u5143\u552f\u4e00\u6807\u8bc6\u5b57\u7b26\u4e32\u5c31\u79f0\u4e3a`\u5355\u5143\u7f16\u53f7`\u3002\\n\\n`minbox-logging`\u63d0\u4f9b\u4e86\u751f\u6210`\u5355\u5143\u7f16\u53f7`\u7684\u63a5\u53e3**LoggingSpanGenerator**\uff0c\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * ApiBoot Logging Span\\n * Create new spanId\\n *\\n * @author\uff1a\u6052\u5b87\u5c11\u5e74 - \u4e8e\u8d77\u5b87\\n * <p>\\n * DateTime\uff1a2019-07-10 17:02\\n * Blog\uff1ahttp://blog.yuqiyu.com\\n * WebSite\uff1ahttp://www.jianshu.com/u/092df3f77bca\\n * Gitee\uff1ahttps://gitee.com/hengboy\\n * GitHub\uff1ahttps://github.com/hengboy\\n */\\npublic interface LoggingSpanGenerator {\\n    /**\\n     * create new spanId\\n     *\\n     * @return span id\\n     * @throws MinBoxLoggingException exception\\n     */\\n    String createSpanId() throws MinBoxLoggingException;\\n}\\n```\\n\\n`spanId`\u9ed8\u8ba4\u91c7\u7528\u7684\u8ddf`traceId`\u751f\u6210\u65b9\u5f0f\u4e00\u81f4\uff0c\u90fd\u662f`UUID`\u968f\u673a\u5b57\u7b26\u4e32\uff0c`minbox-logging`\u63d0\u4f9b\u4e86**LoggingSpanGenerator**\u63a5\u53e3\u9ed8\u8ba4\u7684\u5b9e\u73b0**LoggingDefaultSpanGenerator**\uff0c\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * ApiBoot Logging Default Span\\n * Use By Create New SpanId\\n *\\n * @author\uff1a\u6052\u5b87\u5c11\u5e74 - \u4e8e\u8d77\u5b87\\n * <p>\\n * DateTime\uff1a2019-07-15 17:24\\n * Blog\uff1ahttp://blog.yuqiyu.com\\n * WebSite\uff1ahttp://www.jianshu.com/u/092df3f77bca\\n * Gitee\uff1ahttps://gitee.com/hengboy\\n * GitHub\uff1ahttps://github.com/hengboy\\n */\\npublic class LoggingDefaultSpanGenerator implements LoggingSpanGenerator {\\n    /**\\n     * Create New SpanId\\n     *\\n     * @return SpanId\\n     * @throws MinBoxLoggingException Exception\\n     */\\n    @Override\\n    public String createSpanId() throws MinBoxLoggingException {\\n        return UUID.randomUUID().toString();\\n    }\\n}\\n```\\n\\n## \u81ea\u5b9a\u4e49\u7f16\u53f7\\n\\n\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u8fdb\u884c\u81ea\u5b9a\u4e49`traceId`\u3001`spanId`\uff0c\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u81ea\u5df1\u4e1a\u52a1\u7684\u5143\u7d20\uff0c\u53ea\u9700\u8981\u63d0\u4f9b`minbox-logging`\u63d0\u4f9b\u7684\u751f\u6210`traceId`\u7684\u63a5\u53e3**LoggingTraceGenerator**\u3001\u751f\u6210`spanId`\u7684\u63a5\u53e3**LoggingSpanGenerator**\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b\uff0c\u5e76\u5c06\u5b9e\u73b0\u7c7b\u4ea4\u7ed9`LoggingFaceBean`\u7ba1\u7406\u5373\u53ef\u3002\\n\\n### \u81ea\u5b9a\u4e49\u94fe\u8def\u7f16\u53f7\\n\\n```java\\n/**\\n * \u81ea\u5b9a\u4e49traceId\u751f\u6210\u7b56\u7565\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\npublic class CustomTraceIdGenerator implements LoggingTraceGenerator {\\n    /**\\n     * \u94fe\u8def\u7f16\u53f7\u524d\u7f00\\n     */\\n    private static final String TRACE_ID_PREFIX = \\"local\\";\\n    \\n    @Override\\n    public String createTraceId() throws MinBoxLoggingException {\\n        return TRACE_ID_PREFIX + UUID.randomUUID().toString().hashCode();\\n    }\\n}\\n```\\n\\n\u6211\u4eec\u521b\u5efa\u540d\u4e3a`CustomTraceIdGenerator`\u7684\u7c7b\u5e76\u5b9e\u73b0`LoggingTraceGenerator`\u63a5\u53e3\uff0c\u5b9e\u73b0`createTraceId()`\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6839\u636e`local-`\u4f5c\u4e3a\u524d\u7f00\uff0c\u62fc\u63a5`UUID`\u968f\u673a\u5b57\u7b26\u4e32\u7684`hashCode`\u503c\u4f5c\u4e3a\u540e\u7f00\u3002\\n\\n### \u81ea\u5b9a\u4e49\u5355\u5143\u7f16\u53f7\\n\\n```java\\n/**\\n * \u81ea\u5b9a\u4e49\u5355\u5143\u7f16\u53f7\u751f\u6210\u7b56\u7565\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\npublic class CustomSpanIdGenerator implements LoggingSpanGenerator {\\n    /**\\n     * \u5355\u5143\u7f16\u53f7\u524d\u7f00\\n     */\\n    private static final String SPAN_ID_PREFIX = \\"group\\";\\n\\n    @Override\\n    public String createSpanId() throws MinBoxLoggingException {\\n        return SPAN_ID_PREFIX + UUID.randomUUID().toString().hashCode();\\n    }\\n}\\n```\\n\\n\u6211\u4eec\u521b\u5efa\u540d\u4e3a`CustomSpanIdGenerator`\u7684\u7c7b\u5e76\u5b9e\u73b0`LoggingSpanGenerator`\u63a5\u53e3\uff0c\u5728`createSpanId()`\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6839\u636e`group-`\u4f5c\u4e3a\u524d\u7f00\uff0c\u4f7f\u7528`UUID`\u968f\u673a\u5b57\u7b26\u4e32\u7684`hashCode`\u503c\u4f5c\u4e3a\u540e\u7f00\u3002\\n\\n\u5728\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u81ea\u5b9a\u4e49`traceId`\u4ee5\u53ca`spanId`\u7684\u5b9e\u73b0\u7c7b\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b9e\u73b0\u7c7b\u7684\u5b9e\u4f8b\u4ea4\u7ed9`LoggingFactoryBean`\u7ba1\u7406\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7f16\u53f7\u3002\\n\\n### LoggingFactoryBeanCustomizer\\n\\n`ApiBoot Logging`\u63d0\u4f9b\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u8bbe\u7f6e`LoggingFactoryBean`\u7684\u63a5\u53e3**LoggingFactoryBeanCustomizer**\uff0c\u901a\u8fc7\u8be5\u63a5\u53e3\u53ef\u4ee5\u4fee\u6539`LoggingFactoryBean`\u5185\u5141\u8bb8\u4fee\u6539\u7684\u4efb\u610f\u503c\u3002\\n\\n\u6211\u4eec\u521b\u5efa\u540d\u4e3a**CustomCreateTraceAndSpanId**\u7c7b\u5e76\u5b9e\u73b0`LoggingFactoryBeanCustomizer`\u63a5\u53e3\uff0c\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u81ea\u5b9a\u4e49\u521b\u5efa\u94fe\u8def\u4ee5\u53ca\u5355\u5143\u7f16\u53f7\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n * @see LoggingFactoryBeanCustomizer\\n * @see LoggingFactoryBean\\n * @see org.minbox.framework.logging.client.tracer.LoggingTraceGenerator\\n * @see org.minbox.framework.logging.client.span.LoggingSpanGenerator\\n */\\n@Component\\npublic class CustomCreateTraceAndSpanId implements LoggingFactoryBeanCustomizer {\\n    /**\\n     * {@link CustomTraceIdGenerator} \u81ea\u5b9a\u4e49\u94fe\u8def\u7f16\u53f7\u751f\u6210\u7b56\u7565\\n     * {@link CustomSpanIdGenerator} \u81ea\u5b9a\u4e49\u5355\u5143\u7f16\u53f7\u751f\u6210\u7b56\u7565\\n     *\\n     * @param factoryBean {@link LoggingFactoryBean}\\n     */\\n    @Override\\n    public void customize(LoggingFactoryBean factoryBean) {\\n        CustomTraceIdGenerator traceIdGenerator = new CustomTraceIdGenerator();\\n        factoryBean.setTraceGenerator(traceIdGenerator);\\n\\n        CustomSpanIdGenerator spanIdGenerator = new CustomSpanIdGenerator();\\n        factoryBean.setSpanGenerator(spanIdGenerator);\\n    }\\n}\\n\\n```\\n\\n`customize`\u8fd9\u79cd\u8bbe\u8ba1\u65b9\u5f0f\u662f\u5728`SpringBoot`\u4e2d\u6bd4\u8f83\u5e38\u89c1\u7684\uff0c`ApiBoot`\u4e5f\u6cbf\u7528\u4e86\u8fd9\u79cd\u8bbe\u8ba1\u65b9\u5f0f\uff0c`customize\uff08\uff09`\u65b9\u6cd5\u63d0\u4f9b\u4e86`LoggingFactoryBean`\u5bf9\u8c61\u5b9e\u4f8b\u4f5c\u4e3a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7`setXxx`\u65b9\u6cd5\u8fdb\u884c\u4fee\u6539\u5185\u5b9a\u4e49\u7684\u9ed8\u8ba4\u914d\u7f6e\u3002\\n\\n\u901a\u8fc7`facetory.setTraceGenerator`\u65b9\u6cd5\u53ef\u4ee5\u4fee\u6539\u9ed8\u8ba4\u7684`traceId`\u751f\u6210\u7b56\u7565\u3002\\n\\n\u901a\u8fc7`facetory.setSpanGenerator`\u65b9\u6cd5\u53ef\u4ee5\u4fee\u6539\u9ed8\u8ba4\u7684`spanId`\u751f\u6210\u7b56\u7565\u3002\\n\\n## \u6d4b\u8bd5\\n\\n\u542f\u52a8\u9879\u76ee\u540e\u6211\u4eec\u6765\u67e5\u770b\u63a7\u5236\u53f0\u6253\u5370\u7684\u65e5\u5fd7\u5185\u5bb9\uff0c\u786e\u8ba4\u662f\u5426\u4fee\u6539\u6210\u529f\u3002\\n\\n```json\\n{\\n\\t\\"endTime\\":1571711067664,\\n\\t\\"httpStatus\\":200,\\n\\t\\"requestBody\\":\\"\\",\\n\\t\\"requestHeaders\\":{\\n\\t\\t\\"accept\\":\\"*/*\\",\\n\\t\\t\\"host\\":\\"localhost:8080\\",\\n\\t\\t\\"user-agent\\":\\"curl/7.64.1\\"\\n\\t},\\n\\t\\"requestIp\\":\\"0:0:0:0:0:0:0:1\\",\\n\\t\\"requestMethod\\":\\"GET\\",\\n\\t\\"requestParam\\":\\"{}\\",\\n\\t\\"requestUri\\":\\"/index\\",\\n\\t\\"responseBody\\":\\"this is index.\\",\\n\\t\\"responseHeaders\\":{},\\n\\t\\"serviceId\\":\\"apiboot-custom-logging-traceid\\",\\n\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\"servicePort\\":\\"8080\\",\\n\\t\\"spanId\\":\\"group-1780993769\\",\\n\\t\\"startTime\\":1571711067643,\\n\\t\\"timeConsuming\\":21,\\n\\t\\"traceId\\":\\"local1111437283\\"\\n}\\n```\\n\\n`traceId`\u3001`spanId`\u5df2\u7ecf\u4fee\u6539\u6210\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u7f16\u53f7\u751f\u6210\u7b56\u7565\u65b9\u5f0f\u3002\\n\\n## \u6572\u9ed1\u677f\u5212\u91cd\u70b9\\n\\n\u672c\u7ae0\u8282\u4e3b\u8981\u662f\u8bb2\u5230\u4e86\u5982\u4f55\u81ea\u5b9a\u4e49`traceId`\u4ee5\u53ca`spanId`\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7`LoggingFactoryBeanCustomizer`\u5bf9`LoggingFactoryBean`\u5bf9\u8c61\u8fdb\u884c\u6df1\u5ea6\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c\u6709\u5173`ApiBoot Logging`\u4f7f\u7528\u7684\u6b63\u786e\u59ff\u52bf\u8fd8\u6709\u5f88\u591a\uff0c\u656c\u8bf7\u671f\u5f85\u3002\\n\\n> \u8bf7\u7ed3\u5408\u6587\u4e2d\u524d\u6587\u56de\u987e\u90e8\u5206\u8fdb\u884c\u7f16\u5199\u6d4b\u8bd5\u3002\\n\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-custom-logging-traceid`\uff1a\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-report-logs-by-logging-to-admin","metadata":{"permalink":"/blog/apiboot-report-logs-by-logging-to-admin","source":"@site/blog/logging/apiboot-report-logs-by-logging-to-admin.md","title":"\u5c06ApiBoot Logging\u91c7\u96c6\u7684\u65e5\u5fd7\u4e0a\u62a5\u5230Admin","description":"\u901a\u8fc7ApiBoot Logging\u53ef\u4ee5\u5c06\u6bcf\u4e00\u6761\u8bf7\u6c42\u7684\u8be6\u7ec6\u4fe1\u606f\u83b7\u53d6\u5230\uff0c\u5728\u5206\u5e03\u5f0f\u90e8\u7f72\u65b9\u5f0f\u4e2d\uff0c\u4e00\u4e2a\u8bf7\u6c42\u53ef\u80fd\u4f1a\u7ecf\u8fc7\u591a\u4e2a\u670d\u52a1\uff0c\u5982\u679c\u662f\u6bcf\u4e2a\u670d\u52a1\u90fd\u72ec\u7acb\u4fdd\u5b58\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\uff0c\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u7edf\u4e00\u7684\u63a7\u5236\uff0c\u800c\u4e14\u8fd8\u4f1a\u5b58\u5728\u65e5\u5fd7\u6570\u636e\u5e93\u4e0e\u4e1a\u52a1\u6570\u636e\u5e93\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u51fa\u73b0\uff08\u53ef\u80fd\u4f1a\u7528\u5230\u591a\u6570\u636e\u6e90\u914d\u7f6e\uff09\uff0c\u6b63\u56e0\u4e3a\u8fd9\u4e2a\u95ee\u9898ApiBoot Logging\u63d0\u4f9b\u4e86\u4e00\u4e2aAdmin\u7684\u6982\u5ff5\uff0c\u5c06\u5ba2\u6237\u7aef\u91c7\u96c6\u5230\u7684\u7684\u6bcf\u4e00\u6761\u65e5\u5fd7\u90fd\u8fdb\u884c\u4e0a\u62a5\u5230Admin\uff0c\u7531Admin\u8fdb\u884c\u5206\u6790\u3001\u4fdd\u5b58\u7b49\u64cd\u4f5c\u3002","date":"2019-10-17T10:35:20.000Z","formattedDate":"2019\u5e7410\u670817\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":9.14,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-report-logs-by-logging-to-admin","title":"\u5c06ApiBoot Logging\u91c7\u96c6\u7684\u65e5\u5fd7\u4e0a\u62a5\u5230Admin","authors":"hengboy","tags":["Log"],"date":"2019-10-17T10:35:20.000Z"},"prevItem":{"title":"\u81ea\u5b9a\u4e49ApiBoot Logging\u94fe\u8def\u4ee5\u53ca\u5355\u5143ID","permalink":"/blog/apiboot-custom-logging-traceid"},"nextItem":{"title":"\u4f7f\u7528ApiBoot Logging\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\u8bf7\u6c42\u65e5\u5fd7","permalink":"/blog/apiboot-unified-manage-request-logs"}},"content":"\u901a\u8fc7`ApiBoot Logging`\u53ef\u4ee5\u5c06\u6bcf\u4e00\u6761\u8bf7\u6c42\u7684\u8be6\u7ec6\u4fe1\u606f\u83b7\u53d6\u5230\uff0c\u5728\u5206\u5e03\u5f0f\u90e8\u7f72\u65b9\u5f0f\u4e2d\uff0c\u4e00\u4e2a\u8bf7\u6c42\u53ef\u80fd\u4f1a\u7ecf\u8fc7\u591a\u4e2a\u670d\u52a1\uff0c\u5982\u679c\u662f\u6bcf\u4e2a\u670d\u52a1\u90fd`\u72ec\u7acb\u4fdd\u5b58`\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\uff0c\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u7edf\u4e00\u7684\u63a7\u5236\uff0c\u800c\u4e14\u8fd8\u4f1a\u5b58\u5728`\u65e5\u5fd7\u6570\u636e\u5e93`\u4e0e`\u4e1a\u52a1\u6570\u636e\u5e93`\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u51fa\u73b0\uff08\u53ef\u80fd\u4f1a\u7528\u5230\u591a\u6570\u636e\u6e90\u914d\u7f6e\uff09\uff0c\u6b63\u56e0\u4e3a\u8fd9\u4e2a\u95ee\u9898`ApiBoot Logging`\u63d0\u4f9b\u4e86\u4e00\u4e2a`Admin`\u7684\u6982\u5ff5\uff0c\u5c06\u5ba2\u6237\u7aef\u91c7\u96c6\u5230\u7684\u7684\u6bcf\u4e00\u6761\u65e5\u5fd7\u90fd\u8fdb\u884c\u4e0a\u62a5\u5230`Admin`\uff0c\u7531`Admin`\u8fdb\u884c\u5206\u6790\u3001\u4fdd\u5b58\u7b49\u64cd\u4f5c\u3002\\n\x3c!--truncate--\x3e\\n\\n## \u521b\u5efaLogging Admin\u9879\u76ee\\n\\n`ApiBoot Logging Admin`\u65e2\u7136\u53ef\u4ee5\u6c47\u603b\u6bcf\u4e00\u4e2a`\u4e1a\u52a1\u670d\u52a1`\uff08ApiBoot Logging\uff09\u7684\u8bf7\u6c42\u65e5\u5fd7\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e00\u4e2a`\u4e1a\u52a1\u670d\u52a1`\u91c7\u96c6\u5355\u7684\u65e5\u5fd7\u8fdb\u884c\u4e0a\u62a5\u5230`Admin`\uff0c\u6240\u4ee5\u5e94\u8be5\u4f7f\u7528**\u72ec\u7acb\u7684\u65b9\u5f0f**\u8fdb\u884c\u90e8\u7f72\uff0c\u6211\u4eec\u5355\u72ec\u521b\u5efa\u4e00\u4e2a\u670d\u52a1\u6765\u4e13\u95e8\u91c7\u96c6\u8bf7\u6c42\u65e5\u5fd7\u7136\u540e\u8fdb\u884c\u4fdd\u5b58\u3002\\n\\n### \u521d\u59cb\u5316Logging Admin\u9879\u76ee\u4f9d\u8d56\\n\\n\u4f7f\u7528`idea`\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\uff0c`pom.xml`\u914d\u7f6e\u6587\u4ef6\u5185\u7684\u4f9d\u8d56\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```xml\\n<dependencies>\\n  \x3c!--Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot Logging Admin--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-logging-admin</artifactId>\\n  </dependency>\\n  \x3c!--MySQL--\x3e\\n  <dependency>\\n    <groupId>mysql</groupId>\\n    <artifactId>mysql-connector-java</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>com.zaxxer</groupId>\\n    <artifactId>HikariCP</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot MyBatis Enhance--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-mybatis-enhance</artifactId>\\n  </dependency>\\n</dependencies>\\n```\\n\\n\u6211\u4eec\u9700\u8981\u5c06\u91c7\u96c6\u5230\u7684\u8bf7\u6c42\u65e5\u5fd7\u8fdb\u884c\u4fdd\u5b58\u5230\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u5728\u9879\u76ee\u5185\u9700\u8981\u6dfb\u52a0`\u6570\u636e\u5e93\u9a71\u52a8`\u3001`\u6570\u636e\u5e93\u8fde\u63a5\u6c60`\u76f8\u5173\u7684\u4f9d\u8d56\uff0c`ApiBoot Logging Admin`\u5185\u90e8\u901a\u8fc7`DataSource`\u8fdb\u884c\u64cd\u4f5c\u6570\u636e\uff0c\u901a\u8fc7`ApiBoot MyBatis Enhance`\u7684\u4f9d\u8d56\u53ef\u4ee5\u81ea\u52a8\u5316\u521b\u5efa`DataSource`\uff0c\u6446\u8131\u624b\u52a8\u521b\u5efa\u5e76\u52a0\u5165`Spring IOC`\u5bb9\u5668\u3002\\n\\n### \u6dfb\u52a0ApiBoot\u7edf\u4e00\u7248\u672c\u4f9d\u8d56\\n\\n```xml\\n<dependencyManagement>\\n  <dependencies>\\n    \x3c!--ApiBoot\u7edf\u4e00\u7248\u672c\u4f9d\u8d56--\x3e\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <version>2.1.4.RELEASE</version>\\n      <scope>import</scope>\\n      <type>pom</type>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n> \u6700\u65b0\u7248\u7684ApiBoot\uff0c\u8bf7\u8bbf\u95ee\uff1a<a href=\\"https://search.maven.org/search?q=a:api-boot-dependencies\\" target=\\"_blank\\">https://search.maven.org/search?q=a:api-boot-dependencies</a>\u8fdb\u884c\u67e5\u8be2\u3002\\n\\n### \u542f\u7528Logging Admin\\n\\n\u6dfb\u52a0`ApiBoot Logging Admin`\u4f9d\u8d56\u540e\u8fd8\u4e0d\u80fd\u5b8c\u5168\u4f7f\u7528`Admin`\u7684\u529f\u80fd\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7`@EnableLoggingAdmin`\u6ce8\u89e3\u6765\u542f\u7528\uff0c\u8be5\u6ce8\u89e3\u4f1a\u81ea\u52a8\u5c06`Logging Admin`\u5185\u6240\u9700\u8981\u7684\u90e8\u5206\u7c7b\u81ea\u52a8\u6ce8\u518c\u5230`Spring IOC`\uff0c\u5728\u5165\u53e3\u7c7b\u6dfb\u52a0\u6ce8\u89e3\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * ApiBoot Logging Admin\u5165\u53e3\u7c7b\\n */\\n@SpringBootApplication\\n@EnableLoggingAdmin\\npublic class ApibootReportLogsByLoggingToAdminApplication {\\n\\n  public static void main(String[] args) {\\n    SpringApplication.run(ApibootReportLogsByLoggingToAdminApplication.class, args);\\n  }\\n\\n}\\n```\\n\\n### \u914d\u7f6e\u65e5\u5fd7\u6570\u636e\u6e90\\n\\n`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6570\u636e\u6e90\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\n# \u670d\u52a1\u540d\u79f0\\nspring:\\n  application:\\n    name: apiboot-report-logs-by-logging-to-admin\\n  # \u6570\u636e\u6e90\u76f8\u5173\u914d\u7f6e\\n  datasource:\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\n    url: jdbc:mysql://localhost:3306/test\\n    username: root\\n    password: 123456\\n    type: com.zaxxer.hikari.HikariDataSource\\n# \u670d\u52a1\u7aef\u53e3\u53f7\\nserver:\\n  port: 8081\\n```\\n\\n\\n\\n### \u63a7\u5236\u53f0\u6253\u5370\u4e0a\u62a5\u65e5\u5fd7\\n\\n`ApiBoot Logging Admin`\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u8fdb\u884c\u63a7\u5236\u662f\u5426\u5728\u63a7\u5236\u53f0\u6253\u5370\u91c7\u96c6\u5230\u7684\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\uff0c\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    logging:\\n      # Logging Admin\u76f8\u5173\u914d\u7f6e\\n      admin:\\n        # \u63a7\u5236\u53f0\u663e\u793a\u91c7\u96c6\u7684\u65e5\u5fd7\u4fe1\u606f\\n        show-console-report-log: true\\n```\\n\\n> \u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u8981\u8ddfApiBoot Logging\u6240\u63d0\u4f9b\u7684`api.boot.logging.show-console-log`\u914d\u7f6e\u6df7\u6dc6\u3002\\n\\n### \u7f8e\u5316\u63a7\u5236\u53f0\u6253\u5370\u7684\u4e0a\u62a5\u65e5\u5fd7\\n\\n```yaml\\napi:\\n  boot:\\n    logging:\\n      # Logging Admin\u76f8\u5173\u914d\u7f6e\\n      admin:\\n        # \u63a7\u5236\u53f0\u8f93\u51fa\u65f6\u7f8e\u5316\u91c7\u96c6\u5230\u7684\u65e5\u5fd7\\n        format-console-log-json: true\\n```\\n\\n> \u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u8981\u8ddf`api.boot.logging.format-console-log-json`\u914d\u7f6e\u6df7\u6dc6\u3002\\n\\n## \u521d\u59cb\u5316\u65e5\u5fd7\u8868\u7ed3\u6784\\n\\n`ApiBoot Logging Admin`\u5185\u90e8\u901a\u8fc7**\u56fa\u5b9a\u7684\u8868\u7ed3\u6784**\u6765\u8fdb\u884c\u5b58\u50a8`\u8bf7\u6c42\u65e5\u5fd7`\u3001`\u670d\u52a1\u4fe1\u606f`\uff0c\u5efa\u8868\u8bed\u53e5\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```sql\\nSET NAMES utf8mb4 ;\\n\\n--\\n-- Table structure for table `logging_request_logs`\\n--\\n\\nCREATE TABLE `logging_request_logs` (\\n  `lrl_id` varchar(36) COLLATE utf8mb4_general_ci NOT NULL COMMENT \'\u4e3b\u952e\uff0cUUID\',\\n  `lrl_service_detail_id` varchar(36) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u670d\u52a1\u8be6\u60c5\u7f16\u53f7\uff0c\u5173\u8054logging_service_details\u4e3b\u952e\',\\n  `lrl_trace_id` varchar(36) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u94fe\u8defID\',\\n  `lrl_parent_span_id` varchar(36) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u4e0a\u7ea7\u8de8\u5ea6ID\',\\n  `lrl_span_id` varchar(36) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u8de8\u5ea6ID\',\\n  `lrl_start_time` mediumtext COLLATE utf8mb4_general_ci COMMENT \'\u8bf7\u6c42\u5f00\u59cb\u65f6\u95f4\',\\n  `lrl_end_time` mediumtext COLLATE utf8mb4_general_ci COMMENT \'\u8bf7\u6c42\u7ed3\u675f\u65f6\u95f4\',\\n  `lrl_http_status` int(11) DEFAULT NULL COMMENT \'\u8bf7\u6c42\u54cd\u5e94\u72b6\u6001\u7801\',\\n  `lrl_request_body` longtext COLLATE utf8mb4_general_ci COMMENT \'\u8bf7\u6c42\u4e3b\u4f53\u5185\u5bb9\',\\n  `lrl_request_headers` text COLLATE utf8mb4_general_ci COMMENT \'\u8bf7\u6c42\u5934\u4fe1\u606f\',\\n  `lrl_request_ip` varchar(30) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u53d1\u8d77\u8bf7\u6c42\u5ba2\u6237\u7aef\u7684IP\u5730\u5740\',\\n  `lrl_request_method` varchar(10) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u8bf7\u6c42\u65b9\u5f0f\',\\n  `lrl_request_uri` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u8bf7\u6c42\u8def\u5f84\',\\n  `lrl_response_body` longtext COLLATE utf8mb4_general_ci COMMENT \'\u54cd\u5e94\u5185\u5bb9\',\\n  `lrl_response_headers` text COLLATE utf8mb4_general_ci COMMENT \'\u54cd\u5e94\u5934\u4fe1\u606f\',\\n  `lrl_time_consuming` int(11) DEFAULT NULL COMMENT \'\u8bf7\u6c42\u8017\u65f6\',\\n  `lrl_create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT \'\u65e5\u5fd7\u4fdd\u5b58\u65f6\u95f4\',\\n  `lrl_request_params` text COLLATE utf8mb4_general_ci,\\n  `lrl_exception_stack` text COLLATE utf8mb4_general_ci,\\n  PRIMARY KEY (`lrl_id`),\\n  KEY `logging_request_logs_LRL_SERVICE_DETAIL_ID_index` (`lrl_service_detail_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT=\'\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\u8868\';\\n\\n--\\n-- Table structure for table `logging_service_details`\\n--\\n\\nCREATE TABLE `logging_service_details` (\\n  `lsd_id` varchar(36) COLLATE utf8mb4_general_ci NOT NULL,\\n  `lsd_service_id` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u4e0a\u62a5\u670d\u52a1\u7684ID\uff0c\u5bf9\u5e94spring.application.name\u914d\u7f6e\u503c\',\\n  `lsd_service_ip` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT \'\u4e0a\u62a5\u670d\u52a1\u7684IP\u5730\u5740\',\\n  `lsd_service_port` int(11) DEFAULT NULL COMMENT \'\u4e0a\u62a5\u670d\u52a1\u7684\u7aef\u53e3\u53f7\',\\n  `lsd_last_report_time` timestamp NULL DEFAULT NULL COMMENT \'\u6700\u540e\u4e00\u6b21\u4e0a\u62a5\u65f6\u95f4\uff0c\u6bcf\u6b21\u4e0a\u62a5\u66f4\u65b0\',\\n  `lsd_create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT \'\u9996\u6b21\u4e0a\u62a5\u65f6\u521b\u5efa\u65f6\u95f4\',\\n  PRIMARY KEY (`lsd_id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT=\'\u4e0a\u62a5\u65e5\u5fd7\u7684\u5ba2\u6237\u7aef\u670d\u52a1\u8be6\u60c5\';\\n\\n```\\n\\n`ApiBoot Logging Admin`\u76ee\u524d\u4e3a\u6b62\u5df2\u7ecf\u51c6\u5907\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u4fee\u6539`\u4e1a\u52a1\u670d\u52a1`\u5c06\u8bf7\u6c42\u65e5\u5fd7\u4e0a\u62a5\u5230`Logging Admin`\u3002\\n\\n## \u4e0a\u62a5\u65e5\u5fd7\u5230\u6307\u5b9aLogging Admin\\n\\n\u6211\u4eec\u5c06\u4fee\u6539{% post_link apiboot-unified-manage-request-logs %}\u6587\u7ae0\u6e90\u7801\uff0c\u5728`application.yml`\u6dfb\u52a0`Logging Admin`\u7684\u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    # ApiBoot Logging \u65e5\u5fd7\u7ec4\u4ef6\u914d\u7f6e\\n    logging:\\n      # \u914d\u7f6eLogging Admin\u5730\u5740\\n      admin:\\n        server-address: 127.0.0.1:8081\\n```\\n\\n`api.boot.logging.admin-service-address`\u7684\u914d\u7f6e\u683c\u5f0f\u4e3a\uff1a`Ip:Port`\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u8fd9\u4e00\u4e2a\u5730\u65b9\u5373\u53ef\uff0c\u5176\u4ed6\u7684\u5de5\u4f5c\u90fd\u4ea4\u4ed8\u7ed9`ApiBoot Logging`\u5185\u90e8\u5b8c\u6210\u3002\\n\\n## \u6d4b\u8bd5\\n\\n\u6211\u4eec\u5c06`ApiBoot Logging Admin`\u4ee5\u53ca`\u4e1a\u52a1\u670d\u52a1`\u901a\u8fc7`Application`\u7684\u5f62\u5f0f\u8fdb\u884c\u542f\u52a8\u3002\\n\\n\u4f7f\u7528`curl`\u8bbf\u95ee\u6d4b\u8bd5\u5730\u5740\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```bash\\n~ curl http://localhost:8080/test\\\\?name\\\\=admin\\n\u4f60\u597d\uff1aadmin\\n```\\n\\n\u6211\u4eec\u67e5\u770b`ApiBoot Logging Admin`\u63a7\u5236\u53f0\u65e5\u5fd7\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\nReceiving Service: \u3010apiboot-unified-manage-request-logs -> 127.0.0.1\u3011, Request Log Report\uff0cLogging Content\uff1a[\\n\\t{\\n\\t\\t\\"endTime\\":1571641723779,\\n\\t\\t\\"httpStatus\\":200,\\n\\t\\t\\"requestBody\\":\\"\\",\\n\\t\\t\\"requestHeaders\\":{\\n\\t\\t\\t\\"server-region\\":\\"JiNan\\",\\n\\t\\t\\t\\"host\\":\\"localhost:8080\\",\\n\\t\\t\\t\\"user-agent\\":\\"curl/7.64.1\\",\\n\\t\\t\\t\\"accept\\":\\"*/*\\"\\n\\t\\t},\\n\\t\\t\\"requestIp\\":\\"0:0:0:0:0:0:0:1\\",\\n\\t\\t\\"requestMethod\\":\\"GET\\",\\n\\t\\t\\"requestParam\\":\\"{\\\\\\"name\\\\\\":\\\\\\"admin\\\\\\"}\\",\\n\\t\\t\\"requestUri\\":\\"/test\\",\\n\\t\\t\\"responseBody\\":\\"\u4f60\u597d\uff1aadmin\\",\\n\\t\\t\\"responseHeaders\\":{},\\n\\t\\t\\"serviceId\\":\\"apiboot-unified-manage-request-logs\\",\\n\\t\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\t\\"servicePort\\":\\"8080\\",\\n\\t\\t\\"spanId\\":\\"95a73ca0-831b-45df-aa43-2b5887e8d98d\\",\\n\\t\\t\\"startTime\\":1571641723776,\\n\\t\\t\\"timeConsuming\\":3,\\n\\t\\t\\"traceId\\":\\"25a7de96-b3dd-48e5-9854-1a8069a4a681\\"\\n\\t}\\n]\\n```\\n\\n\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86`Logging Admin`\u63a7\u5236\u53f0\u6253\u5370\u7684\u4e0a\u62a5\u8bf7\u6c42\u65e5\u5fd7\uff0c\u800c\u8fd9\u6761\u8bf7\u6c42\u7684\u65e5\u5fd7\u662f\u5426\u5df2\u7ecf\u88ab\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e86\u8fd8\u4e0d\u786e\u5b9a\uff0c\u4e0b\u9762\u6211\u4f7f\u7528\u547d\u4ee4\u884c\u6765\u67e5\u770b\u6570\u636e\u5e93\u7684\u65e5\u5fd7\u4fe1\u606f\u3002\\n\\n**\u67e5\u770blogging_service_details\u8868\u5185\u6570\u636e**\\n\\n```sql\\nmysql> select * from logging_service_details\\\\G;\\n*************************** 1. row ***************************\\n              lsd_id: b069366a-25dc-41ec-8f09-242d81755cd0\\n      lsd_service_id: apiboot-unified-manage-request-logs\\n      lsd_service_ip: 10.180.98.112\\n    lsd_service_port: 8080\\nlsd_last_report_time: 2019-10-21 02:14:26\\n     lsd_create_time: 2019-10-21 15:14:26\\n```\\n\\n`logging_service_details`\u5b58\u653e\u4e86\u6bcf\u4e00\u4e2a\u4e0a\u62a5\u8bf7\u6c42\u65e5\u5fd7\u7684`\u4e1a\u52a1\u670d\u52a1`\u57fa\u672c\u4fe1\u606f\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u57fa\u672c\u4fe1\u606f\u4f1a\u5728`Logging Admin`\u5185\u5b58\u4e2d\u7f13\u5b58\u4e00\u4efd\uff0c\u65b9\u4fbf\u83b7\u53d6`service_id`\u8fdb\u884c\u5b58\u50a8\u65e5\u5fd7\uff0c\u6839\u636e`ip`+`port`+`service_id`\u8fdb\u884c**\u786e\u5b9a\u552f\u4e00\u6027**\uff0c\u540c\u4e00\u4e2a\u670d\u52a1\u53ea\u8fdb\u884c\u4fdd\u5b58\u4e00\u6b21\u3002\\n\\n**\u67e5\u770blogging_request_logs\u8868\u5185\u6570\u636e**\\n\\n```sql\\nmysql> select * from logging_request_logs\\\\G;\\n*************************** 1. row ***************************\\n               lrl_id: c42761f6-b072-4744-8a17-d8e6097b85de\\nlrl_service_detail_id: b069366a-25dc-41ec-8f09-242d81755cd0\\n         lrl_trace_id: 055329a0-cfc1-4606-baf0-4fb0cc905ba2\\n   lrl_parent_span_id: NULL\\n          lrl_span_id: aab83092-7749-4f88-8cb6-a949cc060197\\n       lrl_start_time: 1571642065262\\n         lrl_end_time: 1571642065286\\n      lrl_http_status: 200\\n     lrl_request_body: \\n  lrl_request_headers: {\\"server-region\\":\\"JiNan\\",\\"host\\":\\"localhost:8080\\",\\"user-agent\\":\\"curl/7.64.1\\",\\"accept\\":\\"*/*\\"}\\n       lrl_request_ip: 0:0:0:0:0:0:0:1\\n   lrl_request_method: GET\\n      lrl_request_uri: /test\\n    lrl_response_body: \u4f60\u597d\uff1aadmin\\n lrl_response_headers: {}\\n   lrl_time_consuming: 24\\n      lrl_create_time: 2019-10-21 15:14:26\\n   lrl_request_params: {\\"name\\":\\"admin\\"}\\n  lrl_exception_stack: NULL\\n```\\n\\n\\n\\n## \u6572\u9ed1\u677f\u753b\u91cd\u70b9\\n\\n\u672c\u7ae0\u6211\u4eec\u8fdb\u884c\u96c6\u6210\u4e86`ApiBoot Logging Admin`\uff0c\u5c06`\u4e1a\u52a1\u670d\u52a1`\u7684\u6bcf\u4e00\u6b21\u8bf7\u6c42\u65e5\u5fd7\u90fd\u8fdb\u884c\u4e0a\u62a5\u5230`Logging Admin`\uff0c\u901a\u8fc7\u6570\u636e\u5e93\u7684\u65b9\u5f0f\u8fdb\u884c\u4fdd\u5b58\u8bf7\u6c42\u65e5\u5fd7\uff0c\u7136\u540e\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u7684\u65b9\u5f0f\uff0c\u800c\u4e14\u53ef\u4ee5\u901a\u8fc7`spanId`\u4ee5\u53ca`traceId`\u67e5\u770b\u6bcf\u4e00\u6761\u8bf7\u6c42\u94fe\u8def\u7684\u65e5\u5fd7\u4e0a\u4e0b\u7ea7\u5173\u7cfb\u4ee5\u53ca\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u5185\u8017\u65f6\u6700\u591a\u7684`span`\uff0c\u53ef\u4ee5\u7cbe\u51c6\u7684\u8fdb\u884c\u4f18\u5316\u670d\u52a1\u6027\u80fd\u3002\\n\\n\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-report-logs-by-logging-to-admin`\uff1a\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"},{"id":"apiboot-unified-manage-request-logs","metadata":{"permalink":"/blog/apiboot-unified-manage-request-logs","source":"@site/blog/logging/apiboot-unified-manage-request-logs.md","title":"\u4f7f\u7528ApiBoot Logging\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\u8bf7\u6c42\u65e5\u5fd7","description":"ApiBoot Logging\u901a\u8fc7\u96c6\u6210minbox-logging\u6765\u8fdb\u884c\u7ba1\u7406\u6bcf\u4e00\u6b21\u8bf7\u6c42\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u5305\u542b\u5934\u4fe1\u606f\u3001\u53c2\u6570\u3001\u4e3b\u4f53\u5185\u5bb9\u3001\u8def\u5f84\u3001\u53d1\u751f\u7684\u670d\u52a1\u5668\u76f8\u5173\u4fe1\u606f\u7b49\uff0c\u6839\u636e\u63a5\u53e3\u7684\u54cd\u5e94\u72b6\u6001\u8fd8\u53ef\u4ee5\u8bb0\u5f55\u54cd\u5e94\u7684\u5934\u4fe1\u606f\u3001\u54cd\u5e94\u7684\u5185\u5bb9\u4ee5\u53ca\u53d1\u751f\u5f02\u5e38\u65f6\u7684\u5806\u6808\u4fe1\u606f\u3002","date":"2019-10-15T21:35:57.000Z","formattedDate":"2019\u5e7410\u670815\u65e5","tags":[{"label":"Log","permalink":"/blog/tags/log"}],"readingTime":9.795,"hasTruncateMarker":true,"authors":[{"name":"\u6052\u5b87\u5c11\u5e74","title":"ApiBoot\u4f5c\u8005\uff0cminbox-projects\u5f00\u6e90\u7ec4\u7ec7\u8d1f\u8d23\u4eba","url":"https://github.com/minbox-projects","imageURL":"https://blog.minbox.org/images/avatar.png","key":"hengboy"}],"frontMatter":{"slug":"apiboot-unified-manage-request-logs","title":"\u4f7f\u7528ApiBoot Logging\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\u8bf7\u6c42\u65e5\u5fd7","authors":"hengboy","tags":["Log"],"date":"2019-10-15T21:35:57.000Z"},"prevItem":{"title":"\u5c06ApiBoot Logging\u91c7\u96c6\u7684\u65e5\u5fd7\u4e0a\u62a5\u5230Admin","permalink":"/blog/apiboot-report-logs-by-logging-to-admin"}},"content":"`ApiBoot Logging`\u901a\u8fc7\u96c6\u6210`minbox-logging`\u6765\u8fdb\u884c\u7ba1\u7406\u6bcf\u4e00\u6b21\u8bf7\u6c42\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u5305\u542b`\u5934\u4fe1\u606f`\u3001`\u53c2\u6570`\u3001`\u4e3b\u4f53\u5185\u5bb9`\u3001`\u8def\u5f84`\u3001\u53d1\u751f\u7684`\u670d\u52a1\u5668`\u76f8\u5173\u4fe1\u606f\u7b49\uff0c\u6839\u636e\u63a5\u53e3\u7684\u54cd\u5e94\u72b6\u6001\u8fd8\u53ef\u4ee5\u8bb0\u5f55\u54cd\u5e94\u7684\u5934\u4fe1\u606f\u3001\u54cd\u5e94\u7684\u5185\u5bb9\u4ee5\u53ca\u53d1\u751f\u5f02\u5e38\u65f6\u7684`\u5806\u6808\u4fe1\u606f`\u3002\\n\x3c!--truncate--\x3e\\n\\n## minbox-projects\u5f00\u6e90\u7ec4\u7ec7\\n\\n`\u201corg.minbox.framework\u201d` \u81f4\u529b\u4e8e\u5411\u5e7f\u5927\u5f00\u53d1\u8005\u63d0\u4f9b\u4e00\u7cfb\u5217\u7684 `\u201c\u5f00\u7bb1\u5373\u7528\u201d` \u7684\u6846\u67b6\u843d\u5730\u5b9e\u73b0\u89e3\u51b3\u65b9\u6848\u3002 \\n\\n\u81ea\u4ece`ApiBoot`\u6846\u67b6\u7684\u843d\u5730\uff0c\u5185\u90e8\u96c6\u6210\u7684`\u7b2c\u4e09\u65b9\u63d2\u4ef6\uff08plugin\uff09`\u65e5\u6e10\u589e\u591a\u4e5f\u540c\u6837\u5bfc\u81f4\u4e86`ApiBoot`\u7684\u6e90\u7801\u592a\u8fc7\u4e8e\u5197\u80bf\uff0c\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898`minbox-projects`\u5f00\u6e90\u7ec4\u7ec7\u5c31\u8bde\u751f\u4e86\uff0c`ApiBoot`\u7b2c\u4e00\u4e2a\u52a0\u5165\u4e86\u8be5\u7ec4\u7ec7\uff0c\u5e76\u4e14\u4f1a\u5c06`ApiBoot`\u5185\u96c6\u6210\u7684`\u7b2c\u4e09\u65b9\u63d2\u4ef6`\u8fdb\u884c\u9646\u7eed\u5206\u79bb\uff0c\u5c06\u6bcf\u4e00\u4e2a\u63d2\u4ef6\u4f5c\u4e3a\u72ec\u7acb\u7684\u5f00\u6e90\u9879\u76ee\u52a0\u5165`minbox-projects`\u5f00\u6e90\u7ec4\u7ec7\uff0c\u65b9\u4fbf\u5404\u4e2a\u9879\u76ee\u7684\u5355\u72ec\u7ef4\u62a4\u4ee5\u53ca\u66f4\u65b0\u53d1\u7248\u3002\\n\\n\u7ec4\u7ec7\u9996\u9875\uff1a[https://gitee.com/minbox-projects](https://gitee.com/minbox-projects)\\n\\n## minbox-logging\u65e5\u5fd7\u7ec4\u4ef6\\n\\n`minbox-logging`\u65e5\u5fd7\u7ec4\u4ef6\u662f`minbox-projects`\u5f00\u6e90\u7ec4\u7ec7\u5185\u7684\u4e00\u5458\uff0c\u662f\u4e00\u6b3e**\u5206\u5e03\u5f0f\u96f6\u4fb5\u5165\u5f0f\u3001\u94fe\u8def\u5f0f\u8bf7\u6c42\u65e5\u5fd7\u5206\u6790\u6846\u67b6**\u3002\\n\\n\u63d0\u4f9bAdmin\u7aef\u70b9\u8fdb\u884c`\u91c7\u96c6\u65e5\u5fd7`\u3001`\u5206\u6790\u65e5\u5fd7`\u3001`\u65e5\u5fd7\u544a\u8b66\u901a\u77e5`\u3001`\u670d\u52a1\u6027\u80fd\u5206\u6790`\u7b49\u3002\u901a\u8fc7Admin Ui\u53ef\u67e5\u770b\u5b9e\u65f6`\u94fe\u8def\u65e5\u5fd7`\u4fe1\u606f\u3001\u5728\u7ebf`\u4e1a\u52a1\u670d\u52a1\u5217\u8868`\uff0c\u81f4\u529b\u89e3\u51b3`request -> response`\u6574\u4e2a\u4e1a\u52a1\u8bf7\u6c42\u7684\u65e5\u5fd7\u5206\u6790\u4ee5\u53ca\u8bb0\u5f55\u3002\\n\\nminbox-logging\u65e5\u5fd7\u7ec4\u4ef6\u6e90\u7801\uff1a[https://gitee.com/minbox-projects/minbox-logging](https://gitee.com/minbox-projects/minbox-logging)\\n\\n## \u521b\u5efa\u793a\u4f8b\u9879\u76ee\\n\\n\u901a\u8fc7`idea`\u5f00\u53d1\u5de5\u5177\u521b\u5efa\u4e00\u4e2a`SpringBoot`\u9879\u76ee\u3002\\n\\n- **pom.xml\u4f9d\u8d56**\\n\\n```xml\\n\x3c!--\u914d\u7f6e\u53c2\u6570--\x3e\\n<properties>\\n  <java.version>1.8</java.version>\\n  <api.boot.version>2.1.4.RELEASE</api.boot.version>\\n</properties>\\n\\n<dependencies>\\n  \x3c!--Web--\x3e\\n  <dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-web</artifactId>\\n  </dependency>\\n  \x3c!--ApiBoot Logging--\x3e\\n  <dependency>\\n    <groupId>org.minbox.framework</groupId>\\n    <artifactId>api-boot-starter-logging</artifactId>\\n  </dependency>\\n</dependencies>\\n\\n<dependencyManagement>\\n  \x3c!--ApiBoot\u7edf\u4e00\u7248\u672c\u4f9d\u8d56--\x3e\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <type>pom</type>\\n      <scope>import</scope>\\n      <version>${api.boot.version}</version>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n- **\u6d4b\u8bd5\u63a7\u5236\u5668**\\n\\n\u6dfb\u52a0\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u7684`LoggingSampleController`\u63a7\u5236\u5668\uff0c\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u8bf7\u6c42\u65e5\u5fd7\u793a\u4f8b\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@RestController\\n@RequestMapping(value = \\"/test\\")\\npublic class LoggingSampleController {\\n    /**\\n     * \u9a8c\u8bc1\u8bf7\u6c42\u53c2\u6570\u4ee5\u53ca\u76f8\u5e94\u5185\u5bb9\\n     *\\n     * @param name\\n     * @return\\n     */\\n    @GetMapping\\n    public String hello(@RequestParam(\\"name\\") String name) {\\n        return \\"\u4f60\u597d\uff1a\\" + name;\\n    }\\n\\n    /**\\n     * \u9a8c\u8bc1\u4e3b\u4f53\u8bf7\u6c42\u5185\u5bb9\u4ee5\u53ca\u76f8\u5e94\u5185\u5bb9\\n     *\\n     * @param user\\n     * @return\\n     */\\n    @PostMapping\\n    public String bodyHello(@RequestBody User user) {\\n        return \\"\u4f60\u597d\uff1a\\" + user.getName();\\n    }\\n\\n    /**\\n     * RequestBody \u793a\u4f8b\u7c7b\\n     */\\n    @Data\\n    public static class User {\\n        private String name;\\n    }\\n}\\n```\\n\\n- **application.yml**\\n\\n```yaml\\nspring:\\n  application:\\n    name: apiboot-unified-manage-request-logs\\nserver:\\n  port: 8080\\n```\\n\\n\u7531\u4e8e`ApiBoot Logging`\u9700\u8981\u8bb0\u5f55\u65e5\u5fd7\u4ea7\u751f\u7684\u670d\u52a1\u5668\u76f8\u5173\u4fe1\u606f\uff0c\u6240\u4ee5`spring.application.name`\u4ee5\u53ca`server.port`\u8fd9\u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u914d\u7f6e\uff0c\u8981\u4e0d\u7136\u542f\u52a8\u9879\u76ee\u65f6\u4f1a\u629b\u51fa\u9519\u8bef\u4fe1\u606f\u3002\\n\\n- **@EnableLoggingClient\u6ce8\u89e3**\\n\\n```java\\n@SpringBootApplication\\n@EnableLoggingClient\\npublic class ApibootUnifiedManageRequestLogsApplication {\\n\\n    public static void main(String[] args) {\\n        SpringApplication.run(ApibootUnifiedManageRequestLogsApplication.class, args);\\n    }\\n\\n}\\n```\\n\\n\u4f7f\u7528`@EnableLoggingClient`\u6ce8\u89e3\u6765\u5f00\u542f\u65e5\u5fd7\u7684**\u5ba2\u6237\u7aef**\uff0c\u5c06\u8be5\u6ce8\u89e3\u914d\u7f6e\u5728\u5165\u53e3\u7c7b\u4e0a\uff0c\u5185\u90e8\u901a\u8fc7`ImportBeanDefinitionRegistrar`\u8fdb\u884c\u6ce8\u518c`minbox-logging-client`\u6240\u9700\u8981\u7684`Bean`\u3002\\n\\n### ApiBoot\u7684\u7248\u672c\u7edf\u4e00\u4f9d\u8d56\\n\\n\u6211\u4eec\u5728\u4f7f\u7528`SpringBoot`\u65f6\u53d1\u73b0\u6211\u4eec\u6dfb\u52a0\u7684\u4f9d\u8d56\u5e76\u4e0d\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684`\u7248\u672c\u53f7`\uff0c\u8fd9\u5c31\u662f\u7248\u672c\u7edf\u4e00\u4f9d\u8d56\u8d77\u5230\u7684\u4f5c\u7528\uff0c\u4e3b\u8981\u8fd8\u662f`Maven\u7ee7\u627f\u5173\u7cfb`\u7f18\u6545\u3002\\n\\n\u5728`ApiBoot`\u5185\u4e5f\u5b58\u5728\u8fd9\u4e48\u4e00\u4e2a\u7edf\u4e00\u7ef4\u62a4\u4f9d\u8d56\u7248\u672c\u7684\u6a21\u5757`api-boot-dependencies`\uff0c\u8fd9\u4e2a\u6a21\u5757\u6e90\u7801\u4ec5\u4e00\u4e2a`pom.xml`\u6587\u4ef6\uff0c\u4e3b\u8981\u7528\u6765\u914d\u7f6e\u6bcf\u4e00\u4e2a\u7b2c\u4e09\u65b9\u4f9d\u8d56\u6216\u8005\u5185\u7f6e\u7684\u4f9d\u8d56\u7684\u5177\u4f53\u7248\u672c\u3002\\n\\n\u6211\u4eec\u901a\u8fc7\u5728\u9879\u76ee\u4e2d\u7684`pom.xml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u5982\u4e0b\u7248\u672c\u7ba1\u7406\u4f9d\u8d56\uff1a\\n\\n```xml\\n<dependencyManagement>\\n  \x3c!--ApiBoot\u7edf\u4e00\u7248\u672c\u4f9d\u8d56--\x3e\\n  <dependencies>\\n    <dependency>\\n      <groupId>org.minbox.framework</groupId>\\n      <artifactId>api-boot-dependencies</artifactId>\\n      <type>pom</type>\\n      <scope>import</scope>\\n      <version>${api.boot.version}</version>\\n    </dependency>\\n  </dependencies>\\n</dependencyManagement>\\n```\\n\\n\u5c31\u53ef\u4ee5\u4e0d\u6307\u5b9a\u7248\u672c\u53f7\u4f7f\u7528`ApiBoot`\u6240\u63d0\u4f9b\u7684\u5168\u90e8\u4f9d\u8d56\u3002\\n\\n> \u6700\u65b0\u7248\u7684ApiBoot\uff0c\u8bf7\u8bbf\u95ee\uff1a<a href=\\"https://search.maven.org/search?q=a:api-boot-dependencies\\" target=\\"_blank\\">https://search.maven.org/search?q=a:api-boot-dependencies</a>\u8fdb\u884c\u67e5\u8be2\u3002\\n\\n### \u6d4b\u8bd5\u8bf7\u6c42\\n\\n\u9879\u76ee\u51c6\u5907\u5b8c\u6210\uff0c\u6211\u4eec\u5148\u6765\u628a\u9879\u76ee\u901a\u8fc7`SpringBoot Application`\u65b9\u5f0f\u8fdb\u884c\u542f\u52a8\uff0c\u901a\u8fc7\u5982\u4e0b`curl`\u547d\u4ee4\u8bbf\u95ee\u6211\u4eec\u7684\u6d4b\u8bd5\u63a5\u53e3\uff1a\\n\\n```bash\\ncurl http://localhost:8080/test\\\\?name\\\\=hengboy\\n```\\n\\n\u8bbf\u95ee\u5b8c\u6210\u540e\uff0c\u8bf7\u6c42\u6210\u529f\uff0c\u4f46\u662f\u63a7\u5236\u53f0\u5e76\u6ca1\u6709\u6253\u5370\u4efb\u4f55\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\uff0c\u5012\u662f\u6709\u4e00\u4e2a\u8b66\u544a\u7684\u65e5\u5fd7\uff1a\\n\\n```\\nNot set \u3010LoggingAdminDiscovery\u3011in LoggingFactoryBean\uff0cdon\'t invoke report request logs.\\n```\\n\\n\u8fd9\u4e2a\u8b66\u544a\u544a\u77e5\u7684\u5f88\u6e05\u695a\uff0c\u6211\u4eec\u5e76\u672a\u914d\u7f6e`logging-admin`\uff0c\u6240\u4ee5\u65e0\u6cd5\u6267\u884c\u65e5\u5fd7\u7684\u4e0a\u62a5\uff0c\u6211\u4eec\u672c\u7ae0\u8282\u662f\u72ec\u7acb\u4f7f\u7528`ApiBoot Logging`\u65e5\u5fd7\u7ec4\u4ef6\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8b66\u544a\u4fe1\u606f\u53ef\u4ee5\u5ffd\u7565\u3002\\n\\n### \u63a7\u5236\u53f0\u6253\u5370\u8bf7\u6c42\u65e5\u5fd7\\n\\n`ApiBoot Logging`\u63d0\u4f9b\u4e86\u4e00\u4e2a\u914d\u7f6e`api.boot.logging.show-console-log`\uff0c\u8be5\u914d\u7f6e\u9ed8\u8ba4\u503c\u4e3a`false`\uff0c\u901a\u8fc7\u8be5\u914d\u7f6e\u53ef\u4ee5\u5b9e\u73b0\u5728\u63a7\u5236\u53f0\u6253\u5370\u8bf7\u6c42\u65e5\u5fd7\u3002\\n\\n\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    # ApiBoot Logging \u65e5\u5fd7\u7ec4\u4ef6\u914d\u7f6e\\n    logging:\\n      show-console-log: true\\n```\\n\\n\u6dfb\u52a0\u5b8c\u6210\u540e\uff0c**\u91cd\u542f\u9879\u76ee**\uff0c\u518d\u6b21\u8bbf\u95ee\u6d4b\u8bd5\u63a5\u53e3\uff0c\u63a7\u5236\u53f0\u6253\u5370\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\n2019-10-16 10:20:18.489  INFO 3930 --- [         task-1] o.m.f.l.c.n.support.LoggingLocalNotice   : Request Uri\uff1a/test\uff0c Logging\uff1a\\n{\\"endTime\\":1571192418416,\\"httpStatus\\":200,\\"requestBody\\":\\"\\",\\"requestHeaders\\":{\\"host\\":\\"localhost:8080\\",\\"user-agent\\":\\"curl/7.64.1\\",\\"accept\\":\\"*/*\\"},\\"requestIp\\":\\"0:0:0:0:0:0:0:1\\",\\"requestMethod\\":\\"GET\\",\\"requestParam\\":\\"{\\\\\\"name\\\\\\":\\\\\\"hengboy\\\\\\"}\\",\\"requestUri\\":\\"/test\\",\\"responseBody\\":\\"\u4f60\u597d\uff1ahengboy\\",\\"responseHeaders\\":{},\\"serviceId\\":\\"apiboot-unified-manage-request-logs\\",\\"serviceIp\\":\\"127.0.0.1\\",\\"servicePort\\":\\"8080\\",\\"spanId\\":\\"35a22772-5015-438a-a441-ba407926b789\\",\\"startTime\\":1571192418391,\\"timeConsuming\\":25,\\"traceId\\":\\"ec53d162-314e-4516-8c24-5d5e03181543\\"}\\n```\\n\\n\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u6253\u5370\u7684\u8bf7\u6c42\u65e5\u5fd7\u4fe1\u606f\u4e86\uff0c\u4e0d\u8fc7\u6253\u5370\u7684\u65e5\u5fd7\u5185\u5bb9\u5e76\u672a\u8fdb\u884c\u7f8e\u5316\uff0c\u4e0d\u8981\u7740\u6025\uff0c`ApiBoot Logging`\u540c\u6837\u63d0\u4f9b\u4e86\u4e00\u4e2a\u914d\u7f6e\u6765\u8fdb\u884c\u7f8e\u5316\u8f93\u51fa\u5185\u5bb9\u3002\\n\\n### \u63a7\u5236\u53f0\u7f8e\u5316\u8bf7\u6c42\u65e5\u5fd7\\n\\n`ApiBoot Logging`\u63d0\u4f9b\u4e86\u914d\u7f6e`api.boot.logging.format-console-log-json`\uff0c\u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3a`false`\uff0c\u6211\u4eec\u901a\u8fc7\u4fee\u6539\u8be5\u914d\u7f6e\u7684\u503c\u53ef\u4ee5\u5b9e\u73b0\u7f8e\u5316\u6253\u5370\u8bf7\u6c42\u65e5\u5fd7\u3002\\n\\n\u5728`application.yml`\u914d\u7f6e\u6587\u4ef6\u5185\u6dfb\u52a0\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```yaml\\napi:\\n  boot:\\n    # ApiBoot Logging \u65e5\u5fd7\u7ec4\u4ef6\u914d\u7f6e\\n    logging:\\n      show-console-log: true\\n      format-console-log-json: true\\n```\\n\\n\u6dfb\u52a0\u5b8c\u6210\u540e\u6211\u4eec\u518d\u6b21\u6765**\u91cd\u542f\u9879\u76ee**\u540e\uff0c\u8bbf\u95ee\u6d4b\u8bd5\u63a5\u53e3\uff0c\u63a7\u5236\u53f0\u6253\u5370\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```json\\n2019-10-16 10:24:05.480  INFO 4051 --- [         task-1] o.m.f.l.c.n.support.LoggingLocalNotice   : Request Uri\uff1a/test\uff0c Logging\uff1a\\n{\\n\\t\\"endTime\\":1571192645404,\\n\\t\\"httpStatus\\":200,\\n\\t\\"requestBody\\":\\"\\",\\n\\t\\"requestHeaders\\":{\\n\\t\\t\\"accept\\":\\"*/*\\",\\n\\t\\t\\"host\\":\\"localhost:8080\\",\\n\\t\\t\\"user-agent\\":\\"curl/7.64.1\\"\\n\\t},\\n\\t\\"requestIp\\":\\"0:0:0:0:0:0:0:1\\",\\n\\t\\"requestMethod\\":\\"GET\\",\\n\\t\\"requestParam\\":\\"{\\\\\\"name\\\\\\":\\\\\\"hengboy\\\\\\"}\\",\\n\\t\\"requestUri\\":\\"/test\\",\\n\\t\\"responseBody\\":\\"\u4f60\u597d\uff1ahengboy\\",\\n\\t\\"responseHeaders\\":{},\\n\\t\\"serviceId\\":\\"apiboot-unified-manage-request-logs\\",\\n\\t\\"serviceIp\\":\\"127.0.0.1\\",\\n\\t\\"servicePort\\":\\"8080\\",\\n\\t\\"spanId\\":\\"277c0973-8042-4740-a8e7-2dbb0c7bb42c\\",\\n\\t\\"startTime\\":1571192645381,\\n\\t\\"timeConsuming\\":23,\\n\\t\\"traceId\\":\\"7a742942-f3cc-4d72-9493-d828b090f1cc\\"\\n}\\n```\\n\\n\u8fd9\u6837\u662f\u4e0d\u662f\u5f88\u76f4\u63a5\u660e\u4e86\u7684\u770b\u5230\u4e86\u8bf7\u6c42\u7684\u8be6\u7ec6\u4fe1\u606f\u4e86\uff1f\u4e0d\u8fc7\u5efa\u8bae\u6839\u636e\u81ea\u5df1\u9879\u76ee\u7684\u5b9e\u9645\u60c5\u51b5\u6765\u914d\u7f6e\uff0c\u7f8e\u5316\u540e\u7684\u65e5\u5fd7\u4f1a\u5360\u7528\u66f4\u591a\u7684**\u63a7\u5236\u53f0\u884c**\u3002\\n\\n### LoggingNotice\u65e5\u5fd7\u901a\u77e5\\n\\n`ApiBoot Logging`\u63d0\u4f9b\u4e86\u65e5\u5fd7\u901a\u77e5\u7684\u63a5\u53e3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u8be5\u63a5\u53e3\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230`\u6bcf\u4e00\u6b21\u8bf7\u6c42`\u7684`\u65e5\u5fd7\u5bf9\u8c61`\uff0c\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6bcf\u4e00\u4e2a\u65e5\u5fd7\u901a\u77e5\u5b9e\u73b0\u7c7b\u7684`\u6267\u884c\u987a\u5e8f`\u3002\\n\\n\u5728`ApiBoot Logging`\u5185\u90e8\u63d0\u4f9b\u7684\u5b9e\u73b0\u7c7b\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](/img/post/apiboot-unified-manage-request-logs-1.png)\\n\\n- **LoggingLocalNotice**\\n\\n  \u8be5\u7c7b\u5c31\u662f\u7528\u4e8e\u5728\u63a7\u5236\u53f0\u6253\u5370\u8bf7\u6c42\u65e5\u5fd7\u4ee5\u53ca\u7f8e\u5316\u8bf7\u6c42\u65e5\u5fd7\u7684\u5b9e\u73b0\uff0c\u4f18\u5148\u7ea7\u4e3a\uff1a`Ordered#HIGHEST_PRECEDENCE`\uff08\u6700\u9ad8\u4f18\u5148\u7ea7\uff09\u3002\\n\\n- **LoggingAdminNotice**\\n\\n  \u8be5\u7c7b\u7528\u4e8e\u5c06\u8bf7\u6c42\u65e5\u5fd7\u4e0a\u62a5\u5230`Logging Admin`\uff0c\u4f18\u5148\u7ea7\u4e3a\uff1a`Ordered#HIGHEST_PRECEDENCE +1`\uff0c\u4ec5\u4f4e\u4e8e`LoggingLocalNotice`\u3002\\n\\n### \u4f7f\u7528LoggingNotice\u6dfb\u52a0Header\\n\\n\u5728\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u4e24\u4e2a\u5185\u7f6e\u7684`LoggingNotice`\u5b9e\u73b0\u7c7b\uff0c\u4f18\u5148\u7ea7\u6211\u4eec\u4e5f\u5df2\u7ecf\u6e05\u695a\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u679c\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684`LoggingNotice`\u5b9e\u73b0\u7c7b\u6765\u5411\u672c\u6b21\u8bf7\u6c42\u65e5\u5fd7\u7684`RequestHeader`\u5185\u6dfb\u52a0\u4e00\u4e2a\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u5934\u4fe1\u606f\u8be5\u600e\u4e48\u505a\u5462\uff1f\\n\\n**AddHeaderLoggingNotice**\u901a\u77e5\u7c7b\u6e90\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```java\\n/**\\n * \u901a\u8fc7{@link LoggingNotice}\u5411\u65e5\u5fd7\u7684\u8bf7\u6c42header\u5185\u6dfb\u52a0\u533a\u57df\u4fe1\u606f\\n *\\n * @author \u6052\u5b87\u5c11\u5e74\\n */\\n@Component\\npublic class AddHeaderLoggingNotice implements LoggingNotice {\\n    /**\\n     * \u533a\u57df\u5934\u4fe1\u606fkey\\n     */\\n    private static final String SERVER_REGION = \\"server-region\\";\\n\\n    @Override\\n    public void notice(MinBoxLog minBoxLog) {\\n        minBoxLog.getRequestHeaders().put(SERVER_REGION, \\"JiNan\\");\\n    }\\n\\n    /**\\n     * \u6700\u5927\u4f18\u5148\u7ea7\\n     *\\n     * @return\\n     */\\n    @Override\\n    public int getOrder() {\\n        return HIGHEST_PRECEDENCE;\\n    }\\n}\\n```\\n\\n\u7531\u4e8e`minbox-logging`\u5728\u8bbe\u8ba1\u521d\u671f\u5c31\u5df2\u7ecf\u8003\u8651\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5\u6dfb\u52a0\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u6574\u6211\u4eec\u81ea\u5b9a\u4e49\u65e5\u5fd7\u901a\u77e5\u7684\u4f18\u5148\u7ea7\uff0c\u7136\u540e\u901a\u8fc7`#notice`\u65b9\u6cd5\u4fee\u6539\u672c\u6b21\u8bf7\u6c42\u65e5\u5fd7\u5bf9\u8c61\u7684\u503c\u5373\u53ef\u3002\\n\\n## \u6572\u9ed1\u677f\u5212\u91cd\u70b9\\n\\n\u672c\u7ae0\u8282\u6211\u4eec\u4ecb\u7ecd\u4e86`ApiBoot Logging`\u7684\u96c6\u6210\u4f7f\u7528\uff0c\u53ef\u7528\u4e8e\u91c7\u96c6\u8bf7\u6c42\u65e5\u5fd7\uff0c\u80fd\u529b\u786e\u4e0d\u4ec5\u4ec5\u5982\u6b64\uff0c\u4f7f\u7528\u5f97\u5f53\u5b83\u4f1a\u5f88\u5f3a\u5927\uff0c`\u65e5\u5fd7\u901a\u77e5\u8bbe\u8ba1`\u53ef\u4ee5\u4f7f\u6211\u4eec\u5f88\u597d\u7684\u63a7\u5236\u4e00\u4e2a\u8bf7\u6c42\u7684\u65e5\u5fd7\uff0c\u5bf9\u65e5\u5fd7\u8fdb\u884c`\u6dfb\u52a0\u6807\u8bc6`\u3001`\u5f52\u7c7b`\u7b49\uff0c\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6765\u63a7\u5236`\u65e5\u5fd7\u6253\u5370`\u4ee5\u53ca`\u7f8e\u5316`\u3002\\n\\n## \u4ee3\u7801\u793a\u4f8b\\n\u5982\u679c\u60a8\u559c\u6b22\u672c\u7bc7\u6587\u7ae0\u8bf7\u4e3a\u6e90\u7801\u4ed3\u5e93\u70b9\u4e2a`Star`\uff0c\u8c22\u8c22\uff01\uff01\uff01\\n\u672c\u7bc7\u6587\u7ae0\u793a\u4f8b\u6e90\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\uff0c\u76ee\u5f55\u4e3a`apiboot-unified-manage-request-logs`\uff1a\\n- Gitee\uff1a[https://gitee.com/minbox-projects/api-boot-chapter](https://gitee.com/minbox-projects/api-boot-chapter)"}]}')}}]);